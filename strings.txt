
Start.main([Ljava/lang/String;)V -> "assetDirectory"
Start.main([Ljava/lang/String;)V -> "assetDirectory"
Start.main([Ljava/lang/String;)V -> "assets"
Start.main([Ljava/lang/String;)V -> "--version"
Start.main([Ljava/lang/String;)V -> "mcp"
Start.main([Ljava/lang/String;)V -> "--accessToken"
Start.main([Ljava/lang/String;)V -> "0"
Start.main([Ljava/lang/String;)V -> "--assetsDir"
Start.main([Ljava/lang/String;)V -> "--assetIndex"
Start.main([Ljava/lang/String;)V -> "1.16"
Start.main([Ljava/lang/String;)V -> "--userProperties"
Start.main([Ljava/lang/String;)V -> "{}"
b/a/a.<init>()V -> "FLUGER"
b/a/a.<init>()V -> "210324"
b/a/a/a/a.m([Ljava/lang/String;)V -> "bind"
b/a/a/a/a.m([Ljava/lang/String;)V -> "clear"
b/a/a/a/a.m([Ljava/lang/String;)V -> " модулей "
b/a/a/a/a.m([Ljava/lang/String;)V -> " разбинжено"
b/a/a/a/a.m([Ljava/lang/String;)V -> "list"
b/a/a/a/a.m([Ljava/lang/String;)V -> "У вас нет биндов :D"
b/a/a/a/a.m([Ljava/lang/String;)V -> "Все бинды :"
b/a/a/a/a.m([Ljava/lang/String;)V -> " ["
b/a/a/a/a.m([Ljava/lang/String;)V -> "]"
b/a/a/a/a.m([Ljava/lang/String;)V -> "add"
b/a/a/a/a.m([Ljava/lang/String;)V -> "§fКлавиша "
b/a/a/a/a.m([Ljava/lang/String;)V -> " была привязана к модулю "
b/a/a/a/a.m([Ljava/lang/String;)V -> "Модуль "
b/a/a/a/a.m([Ljava/lang/String;)V -> " не был найден"
b/a/a/a/a.m([Ljava/lang/String;)V -> ".bind add <функция> <кнопка>"
b/a/a/a/a.m([Ljava/lang/String;)V -> "remove"
b/a/a/a/a.m([Ljava/lang/String;)V -> "§fФункция "
b/a/a/a/a.m([Ljava/lang/String;)V -> " не привязана к кнопке."
b/a/a/a/a.m([Ljava/lang/String;)V -> "§fФункция "
b/a/a/a/a.m([Ljava/lang/String;)V -> " была отвязана от кнопки "
b/a/a/a/a.m([Ljava/lang/String;)V -> ".bind remove <функция>"
b/a/a/a/a.btq()V -> "Ошибка в использовании"
b/a/a/a/a.btq()V -> ":"
b/a/a/a/a.btq()V -> ".bind add "
b/a/a/a/a.btq()V -> "<функция> <кнопка>"
b/a/a/a/a.btq()V -> ".bind remove "
b/a/a/a/a.btq()V -> "<функция>"
b/a/a/a/a.btq()V -> ".bind list"
b/a/a/a/a.btq()V -> ".bind clear"
b/a/a/a/b.m([Ljava/lang/String;)V -> "save"
b/a/a/a/b.m([Ljava/lang/String;)V -> ".."
b/a/a/a/b.m([Ljava/lang/String;)V -> ".json"
b/a/a/a/b.m([Ljava/lang/String;)V -> "§fКонфиг §7""
b/a/a/a/b.m([Ljava/lang/String;)V -> "" §fуспешно §aсохранен."
b/a/a/a/b.m([Ljava/lang/String;)V -> "delete"
b/a/a/a/b.m([Ljava/lang/String;)V -> ".."
b/a/a/a/b.m([Ljava/lang/String;)V -> ".json"
b/a/a/a/b.m([Ljava/lang/String;)V -> "§fКонфиг §7""
b/a/a/a/b.m([Ljava/lang/String;)V -> "" §fуспешно §aудален."
b/a/a/a/b.m([Ljava/lang/String;)V -> "§fКонфиг §7""
b/a/a/a/b.m([Ljava/lang/String;)V -> "" §fне §cнайден."
b/a/a/a/b.m([Ljava/lang/String;)V -> "load"
b/a/a/a/b.m([Ljava/lang/String;)V -> ".."
b/a/a/a/b.m([Ljava/lang/String;)V -> ".json"
b/a/a/a/b.m([Ljava/lang/String;)V -> "§fКонфиг §7""
b/a/a/a/b.m([Ljava/lang/String;)V -> "" §fуспешно §aподгружен."
b/a/a/a/b.m([Ljava/lang/String;)V -> "§fКонфиг §c""
b/a/a/a/b.m([Ljava/lang/String;)V -> "" §fне найден."
b/a/a/a/b.m([Ljava/lang/String;)V -> "list"
b/a/a/a/b.m([Ljava/lang/String;)V -> "Конфиги:"
b/a/a/a/b.m([Ljava/lang/String;)V -> ".json"
b/a/a/a/b.btq()V -> "§6[Конфиг менеджер] §fдоступные команды:"
b/a/a/a/b.btq()V -> "§f§fcfg save <название> (сохранить конфиг)"
b/a/a/a/b.btq()V -> "§f§fcfg load <название> (загрузить конифиг)"
b/a/a/a/b.btq()V -> "§f§fcfg delete <название> (удалить конфииг)"
b/a/a/a/b.btq()V -> "§f§fcfg list (посмотреть список доступных конфигов)"
b/a/a/a/c.m([Ljava/lang/String;)V -> "add"
b/a/a/a/c.m([Ljava/lang/String;)V -> " "
b/a/a/a/c.m([Ljava/lang/String;)V -> "добавлен в список друзей"
b/a/a/a/c.m([Ljava/lang/String;)V -> ".friend add [ник]"
b/a/a/a/c.m([Ljava/lang/String;)V -> "remove"
b/a/a/a/c.m([Ljava/lang/String;)V -> " "
b/a/a/a/c.m([Ljava/lang/String;)V -> "удален из списока друзей"
b/a/a/a/c.m([Ljava/lang/String;)V -> ".friend remove [ник]"
b/a/a/a/c.m([Ljava/lang/String;)V -> "clear"
b/a/a/a/c.m([Ljava/lang/String;)V -> "Удалено "
b/a/a/a/c.m([Ljava/lang/String;)V -> " друзей."
b/a/a/a/c.m([Ljava/lang/String;)V -> "list"
b/a/a/a/c.m([Ljava/lang/String;)V -> "Твои друзья:"
b/a/a/a/c.m([Ljava/lang/String;)V -> "У тебя "
b/a/a/a/c.m([Ljava/lang/String;)V -> " друзей."
b/a/a/a/c.m([Ljava/lang/String;)V -> "Используйте "
b/a/a/a/c.m([Ljava/lang/String;)V -> ".friend [add/remove/clear/list]"
b/a/a/a/c.btq()V -> "Используйте "
b/a/a/a/c.btq()V -> ".friend [add/remove/clear] [Ник]"
b/a/a/a/d.m([Ljava/lang/String;)V -> "Цель устанолвена координаты: X: "
b/a/a/a/d.m([Ljava/lang/String;)V -> " Z: "
b/a/a/a/d.m([Ljava/lang/String;)V -> "off"
b/a/a/a/d.m([Ljava/lang/String;)V -> "GPS отключен."
b/a/a/a/d.btq()V -> ".gps <x> <z>"
b/a/a/a/d.btt()V -> "GPS: "
b/a/a/a/d.btt()V -> "m"
b/a/a/a/d.btt()V -> "§fВы дошли до цели! GPS §cотключен!"
b/a/a/a/e.m([Ljava/lang/String;)V -> "§fВсе команды которые есть в клиенте:"
b/a/a/a/e.m([Ljava/lang/String;)V -> "help"
b/a/a/a/e.m([Ljava/lang/String;)V -> "."
b/a/a/a/e.m([Ljava/lang/String;)V -> " | "
b/a/a/a/f.m([Ljava/lang/String;)V -> "При следующем заходе на сервер у вас будет ник: §c"
b/a/a/a/f.btq()V -> ".login <ник>"
b/a/a/a/g.a(Lb/a/a/b/a;)V -> "Команда: "
b/a/a/a/g.a(Lb/a/a/b/a;)V -> ", Кнопка: "
b/a/a/a/g.m([Ljava/lang/String;)V -> "remove"
b/a/a/a/g.m([Ljava/lang/String;)V -> "add"
b/a/a/a/g.m([Ljava/lang/String;)V -> "list"
b/a/a/a/g.m([Ljava/lang/String;)V -> "clear"
b/a/a/a/g.m([Ljava/lang/String;)V -> " "
b/a/a/a/g.m([Ljava/lang/String;)V -> "Добавлен макрос для кнопки"
b/a/a/a/g.m([Ljava/lang/String;)V -> " ""
b/a/a/a/g.m([Ljava/lang/String;)V -> "" "
b/a/a/a/g.m([Ljava/lang/String;)V -> "с командой "
b/a/a/a/g.m([Ljava/lang/String;)V -> "Список макросов пуст"
b/a/a/a/g.m([Ljava/lang/String;)V -> "Список Макросов "
b/a/a/a/g.m([Ljava/lang/String;)V -> "успешно очищен"
b/a/a/a/g.m([Ljava/lang/String;)V -> "Макрос "
b/a/a/a/g.m([Ljava/lang/String;)V -> "был удален с кнопки "
b/a/a/a/g.m([Ljava/lang/String;)V -> """
b/a/a/a/g.m([Ljava/lang/String;)V -> """
b/a/a/a/g.m([Ljava/lang/String;)V -> "Список макросов пуст"
b/a/a/a/g.m([Ljava/lang/String;)V -> "Список макросов: "
b/a/a/a/g.btq()V -> "Ошибка в использовании"
b/a/a/a/g.btq()V -> ":"
b/a/a/a/g.btq()V -> "."
b/a/a/a/g.btq()V -> "macro add "
b/a/a/a/g.btq()V -> "<"
b/a/a/a/g.btq()V -> "кнопка"
b/a/a/a/g.btq()V -> ">"
b/a/a/a/g.btq()V -> " сообщение"
b/a/a/a/g.btq()V -> "."
b/a/a/a/g.btq()V -> "macro remove "
b/a/a/a/g.btq()V -> "<"
b/a/a/a/g.btq()V -> "кнопка"
b/a/a/a/g.btq()V -> ">"
b/a/a/a/g.btq()V -> "."
b/a/a/a/g.btq()V -> "macro list"
b/a/a/a/g.btq()V -> "."
b/a/a/a/g.btq()V -> "macro clear"
b/a/a/a/h.m([Ljava/lang/String;)V -> "⚠ PVP-Режим активен, до конца"
b/a/a/a/h.m([Ljava/lang/String;)V -> "Вы находитесь в пвп! Я не дам потерять ваши вещи."
b/a/a/a/h.m([Ljava/lang/String;)V -> "/an"
b/a/a/a/h.m([Ljava/lang/String;)V -> "/hub"
b/a/a/a/h.m([Ljava/lang/String;)V -> "/an"
b/a/a/a/h.m([Ljava/lang/String;)V -> "Данная команда работает только на mc.funtime.su"
b/a/a/a/h.btq()V -> ".rct <анархия>"
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "Вход запрещен"
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "Анархия заполнена"
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "Анархия заполнена!"
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "/ah "
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "перед использованием аукциона"
b/a/a/a/i.a(Lb/a/b/a/e;)V -> "Подождите перед использованием!"
b/a/a/a/i.m([Ljava/lang/String;)V -> "Не верный аргумент для выполнения команды."
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "/an"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "an"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "an"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "an"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "Вы и так на этом сервере!"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "Только для сервера funtime.su"
b/a/a/a/i.Q(Ljava/lang/String;I)V -> "Количество должно быть меньше 9 предметов."
b/a/a/a/i.kK()V -> "-"
b/a/a/a/i.kK()V -> "battlepass"
b/a/a/a/i.kK()V -> "Вы не сможете перенести вещи на спавне поскольку у вас в инвентаре есть шалкер. Тпнитесь на /rtp"
b/a/a/a/i.kK()V -> "/ah dsell 10"
b/a/a/a/i.kK()V -> "/an"
b/a/a/a/i.kK()V -> "/ah "
b/a/a/a/i.btq()V -> ".transfer <анархию> <количество предметов>"
b/a/a/c.lm(Ljava/lang/String;)Z -> "."
b/a/a/c.lm(Ljava/lang/String;)Z -> "§7."
b/a/a/c.lm(Ljava/lang/String;)Z -> "§7"
b/a/a/c.lm(Ljava/lang/String;)Z -> " ("
b/a/a/c.lm(Ljava/lang/String;)Z -> "§f"
b/a/a/c.lm(Ljava/lang/String;)Z -> "§7"
b/a/a/c.lm(Ljava/lang/String;)Z -> ")"
b/a/a/d.lm(Ljava/lang/String;)Z -> " "
b/a/b/c.a(Lb/a/b/a;)V -> "."
b/a/c/a/b.f(Ljava/util/Map$Entry;)V -> "State"
b/a/c/a/b.f(Ljava/util/Map$Entry;)V -> "KeyBind"
b/a/c/a/b.f(Ljava/util/Map$Entry;)V -> "settings"
b/a/c/a/b.a(Lcom/google/gson/JsonObject;Lb/a/e/a;)V -> "State"
b/a/c/a/b.a(Lcom/google/gson/JsonObject;Lb/a/e/a;)V -> "KeyBind"
b/a/c/a/b.a(Lcom/google/gson/JsonObject;Lb/a/e/a;)V -> "settings"
b/a/c/b.<init>()V -> "configs"
b/a/c/b.<init>()V -> "friends.json"
b/a/c/b.<init>()V -> "macro.json"
b/a/c/b.<init>()V -> "alts.json"
b/a/c/b.<init>()V -> "settings.json"
b/a/d/b.a(Lb/a/b/a/e;)V -> "[Ивенты]"
b/a/d/b.a(Lb/a/b/a/e;)V -> "[1]"
b/a/d/b.a(Lb/a/b/a/e;)V -> "|| Статус"
b/a/d/b.a(Lb/a/b/a/e;)V -> "|| Координаты:"
b/a/d/b.a(Lb/a/b/a/e;)V -> "До следующего ивента"
b/a/d/b.a(Lb/a/b/a/e;)V -> "До следующего ивента: "
b/a/d/b.a(Lb/a/b/a/e;)V -> " "
b/a/d/b.btR()I -> "Анархия-"
b/a/d/b.btR()I -> "Анархия-"
b/a/e/a$a.<clinit>()V -> "HUB"
b/a/e/a$a.<clinit>()V -> "COMBAT"
b/a/e/a$a.<clinit>()V -> "VISUAL"
b/a/e/a$a.<clinit>()V -> "WORLD"
b/a/e/a$a.<clinit>()V -> "MISC"
b/a/e/a$a.<clinit>()V -> "PLAYER"
b/a/e/a$a.<clinit>()V -> "MOVEMENT"
b/a/e/a.aC()V -> "Модуль"
b/a/e/a.aC()V -> " §aвключен"
b/a/e/a.aB()V -> "Модуль"
b/a/e/a.aB()V -> " §cвыключен"
b/a/e/a/a.<init>()V -> "Aura"
b/a/e/a/a.<init>()V -> "Мод ротации"
b/a/e/a/a.<init>()V -> "Funtime"
b/a/e/a/a.<init>()V -> "Funtime"
b/a/e/a/a.<init>()V -> "ReallyWorld"
b/a/e/a/a.<init>()V -> "Сортировка"
b/a/e/a/a.<init>()V -> "Жизни"
b/a/e/a/a.<init>()V -> "Жизни"
b/a/e/a/a.<init>()V -> "Дистанция"
b/a/e/a/a.<init>()V -> "Игнор"
b/a/e/a/a.<init>()V -> "Игроки"
b/a/e/a/a.<init>()V -> "Голые"
b/a/e/a/a.<init>()V -> "Друзья"
b/a/e/a/a.<init>()V -> "Животные"
b/a/e/a/a.<init>()V -> "Монстры"
b/a/e/a/a.<init>()V -> "Невидимки"
b/a/e/a/a.<init>()V -> "Дистанция"
b/a/e/a/a.<init>()V -> "Только криты"
b/a/e/a/a.<init>()V -> "Спринт"
b/a/e/a/a.<init>()V -> "Отображать цель"
b/a/e/a/a.<init>()V -> "Игнор прыгучести"
b/a/e/a/a.<init>()V -> "Жизни"
b/a/e/a/a.a(Lb/a/b/a/a;)V -> "fluger/image/target.png"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Невидимки"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Друзья"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Невидимки"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Голые"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Монстры"
b/a/e/a/a.bh(Lnet/minecraft/g/x;)Z -> "Животные"
b/a/e/a/a.bua()V -> "ReallyWorld"
b/a/e/a/a.bua()V -> "Funtime"
b/a/e/a/b$a.<clinit>()V -> "SHIELD_GAPPLE"
b/a/e/a/b$a.<clinit>()V -> "Щит & Гепл"
b/a/e/a/b$a.<clinit>()V -> "TOTEM_SHIELD"
b/a/e/a/b$a.<clinit>()V -> "Тотем & Щит"
b/a/e/a/b$a.<clinit>()V -> "BALL_GAPPLE"
b/a/e/a/b$a.<clinit>()V -> "Шар & Гепл"
b/a/e/a/b$a.<clinit>()V -> "TOTEM_SPHERE"
b/a/e/a/b$a.<clinit>()V -> "Тотем & Сфера"
b/a/e/a/b.<init>()V -> "AutoSwap"
b/a/e/a/b.<init>()V -> "Только в хотбаре"
b/a/e/a/b.<init>()V -> "Режим"
b/a/e/a/b.<init>()V -> "Щит & Гепл"
b/a/e/a/b.<init>()V -> "Щит & Гепл"
b/a/e/a/b.<init>()V -> "Тотем & Щит"
b/a/e/a/b.<init>()V -> "Шар & Гепл"
b/a/e/a/b.<init>()V -> "Тотем & Сфера"
b/a/e/a/c.<init>()V -> "AutoTotem"
b/a/e/a/c.<init>()V -> "Настройка"
b/a/e/a/c.<init>()V -> "Кристалы"
b/a/e/a/c.<init>()V -> "Якорь"
b/a/e/a/c.<init>()V -> "Падение"
b/a/e/a/c.<init>()V -> "Обсидиан"
b/a/e/a/c.<init>()V -> "Возвращать вещь"
b/a/e/a/c.<init>()V -> "Не менять шар"
b/a/e/a/c.<init>()V -> "Жизни"
b/a/e/a/c.<init>()V -> "Радиус до кристала"
b/a/e/a/c.<init>()V -> "Радиус до якоря"
b/a/e/a/c.<init>()V -> "Радиус до обсы"
b/a/e/a/c.buk()Z -> "Падение"
b/a/e/a/c.bur()Ljava/lang/Boolean; -> "Якорь"
b/a/e/a/c.bup()Z -> "Кристалы"
b/a/e/a/c.bun()Z -> "Обсидиан"
b/a/e/a/c.buo()Z -> "Якорь"
b/a/e/a/c.bus()Ljava/lang/Boolean; -> "Обсидиан"
b/a/e/a/c.aHA()Ljava/lang/Boolean; -> "Кристалы"
b/a/e/a/d.<init>()V -> "HitBoxes"
b/a/e/a/d.<init>()V -> "Размер"
b/a/e/a/e.oU(I)V -> "Argument %s for @NotNull parameter of %s.%s must not be null"
b/a/e/a/e.oU(I)V -> "0"
b/a/e/a/e.oU(I)V -> "ru/fluger/module/combat/MathUtility"
b/a/e/a/e.oU(I)V -> "squaredDistanceFromEyes"
b/a/e/a/e.oU(I)V -> "squaredDistance2d"
b/a/e/a/g.<init>()V -> "NoFriendDamage"
b/a/e/a/i.<init>()V -> "TriggerBot"
b/a/e/a/i.<init>()V -> "Игнор"
b/a/e/a/i.<init>()V -> "Игроки"
b/a/e/a/i.<init>()V -> "Голые"
b/a/e/a/i.<init>()V -> "Друзья"
b/a/e/a/i.<init>()V -> "Животные"
b/a/e/a/i.<init>()V -> "Монстры"
b/a/e/a/i.<init>()V -> "Невидимки"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Невидимки"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Друзья"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Невидимки"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Голые"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Монстры"
b/a/e/a/i.bl(Lnet/minecraft/g/x;)Z -> "Животные"
b/a/e/a/j.<init>()V -> "Velocity"
b/a/e/a/j.<init>()V -> "Режим"
b/a/e/a/j.<init>()V -> "Отменить"
b/a/e/b/a.<init>()V -> "AutoShulker"
b/a/e/b/a.<init>()V -> "Складывать зелья"
b/a/e/b/b.<init>()V -> "DropItems"
b/a/e/b/c.<init>()V -> "ElytraHelper"
b/a/e/b/c.<init>()V -> "Свап"
b/a/e/b/c.<init>()V -> "Фейерверк"
b/a/e/b/c.<init>()V -> "Авто взлёт"
b/a/e/b/c.b(Lb/a/b/a;)V -> "Феерверки не найдены!"
b/a/e/b/c.cd(Lnet/minecraft/j/af;)V -> "Свап на §aэлитру"
b/a/e/b/c.cd(Lnet/minecraft/j/af;)V -> "Элитра не найдена!"
b/a/e/b/c.cd(Lnet/minecraft/j/af;)V -> "Свап на §eнагрудник!"
b/a/e/b/c.cd(Lnet/minecraft/j/af;)V -> "Нагрудник не найден!"
b/a/e/b/d.<init>()V -> "FTHelper"
b/a/e/b/d.<init>()V -> "Дезориентация"
b/a/e/b/d.<init>()V -> "Трапка"
b/a/e/b/e.<init>()V -> "MidClickPearl"
b/a/e/b/f.<init>()V -> "MiddleClickFriend"
b/a/e/b/g.<init>()V -> "NameProtect"
b/a/e/b/g.<clinit>()V -> "Fluger"
b/a/e/b/h.<init>()V -> "XCarry"
b/a/e/c/a.<init>()V -> "ElytraFix"
b/a/e/c/b.<init>()V -> "Fly"
b/a/e/c/b.<init>()V -> "По горизонтали"
b/a/e/c/b.<init>()V -> "По вертикали"
b/a/e/c/c.<init>()V -> "InventoryMove"
b/a/e/c/c.<init>()V -> "Безопасный"
b/a/e/c/d.<init>()V -> "NoPush"
b/a/e/c/d.<init>()V -> "Игнор"
b/a/e/c/d.<init>()V -> "Игроки"
b/a/e/c/d.<init>()V -> "Вода"
b/a/e/c/d.<init>()V -> "Блоки"
b/a/e/c/e.<init>()V -> "NoSlowDown"
b/a/e/c/e.<init>()V -> "Режим"
b/a/e/c/e.<init>()V -> "Grim"
b/a/e/c/e.<init>()V -> "Grim"
b/a/e/c/e.<init>()V -> "Стандартный"
b/a/e/c/e.b(Lb/a/b/a;)V -> "Grim"
b/a/e/c/e.b(Lb/a/b/a;)V -> "Стандартный"
b/a/e/c/f.<init>()V -> "Sprint"
b/a/e/c/f.<init>()V -> "Игнорировать голод"
b/a/e/d/a.<init>()V -> "AutoTool"
b/a/e/d/a.<init>()V -> "Настройки"
b/a/e/d/a.<init>()V -> "Возвращать вещь"
b/a/e/d/a.<init>()V -> "Сохранять вещь"
b/a/e/d/a.b(Lb/a/b/a;)V -> "Сохранять вещь"
b/a/e/d/a.b(Lb/a/b/a;)V -> "Возвращать вещь"
b/a/e/d/b.<init>()V -> "ChestStealer"
b/a/e/d/b.<init>()V -> "Задержка"
b/a/e/d/b.<init>()V -> "Авто октрытие"
b/a/e/d/c.<init>()V -> "ContainerF5"
b/a/e/d/d.<init>()V -> "ItemScroller"
b/a/e/d/d.<init>()V -> "Задержка"
b/a/e/d/e.<init>()V -> "NoDelay"
b/a/e/d/e.<init>()V -> "Прыжок"
b/a/e/d/e.<init>()V -> "Ставить блоки"
b/a/e/e/a/d.W(Lcom/google/gson/JsonElement;)V -> "Red"
b/a/e/e/a/d.W(Lcom/google/gson/JsonElement;)V -> "Green"
b/a/e/e/a/d.W(Lcom/google/gson/JsonElement;)V -> "Blue"
b/a/e/e/a/d.W(Lcom/google/gson/JsonElement;)V -> "Alpha"
b/a/e/e/a/d.buD()Lcom/google/gson/JsonElement; -> "Red"
b/a/e/e/a/d.buD()Lcom/google/gson/JsonElement; -> "Green"
b/a/e/e/a/d.buD()Lcom/google/gson/JsonElement; -> "Blue"
b/a/e/e/a/d.buD()Lcom/google/gson/JsonElement; -> "Alpha"
b/a/e/e/a/g.W(Lcom/google/gson/JsonElement;)V -> "Min"
b/a/e/e/a/g.W(Lcom/google/gson/JsonElement;)V -> "Max"
b/a/e/e/a/g.buD()Lcom/google/gson/JsonElement; -> "Min"
b/a/e/e/a/g.buD()Lcom/google/gson/JsonElement; -> "Max"
b/a/e/f/a.<init>()V -> "ArmorHud"
b/a/e/f/b.<init>()V -> "Arrows"
b/a/e/f/b.<init>()V -> "Обычный цвет"
b/a/e/f/b.<init>()V -> "Цвет друзей"
b/a/e/f/b.<init>()V -> "Размер"
b/a/e/f/b.<init>()V -> "Растояние"
b/a/e/f/b.<init>()V -> "Игнорировать голых"
b/a/e/f/b.a(FFFLnet/minecraft/client/b/a/a;)V -> "%.1f"
b/a/e/f/b.a(FFFLnet/minecraft/client/b/a/a;)V -> "m"
b/a/e/f/b/a/a.getName()Ljava/lang/String; -> "Аир дроп"
b/a/e/f/b/a/b.getName()Ljava/lang/String; -> "Состязание"
b/a/e/f/b/a/c.getName()Ljava/lang/String; -> "Талисман"
b/a/e/f/b/a/d.getName()Ljava/lang/String; -> "Скрудж"
b/a/e/f/b/a/e.getName()Ljava/lang/String; -> "Тайный торговец"
b/a/e/f/b/c.<clinit>()V -> "FOUR"
b/a/e/f/b/c.<clinit>()V -> "4:00"
b/a/e/f/b/c.<clinit>()V -> "FIVE"
b/a/e/f/b/c.<clinit>()V -> "5:00"
b/a/e/f/b/c.<clinit>()V -> "SEVEN_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "7:35"
b/a/e/f/b/c.<clinit>()V -> "TEN_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "10:35"
b/a/e/f/b/c.<clinit>()V -> "THIRTEEN_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "13:35"
b/a/e/f/b/c.<clinit>()V -> "SIXTEEN_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "16:35"
b/a/e/f/b/c.<clinit>()V -> "NINETEEN_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "19:35"
b/a/e/f/b/c.<clinit>()V -> "TWENTY_TWO_THIRTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "22:35"
b/a/e/f/b/c.<clinit>()V -> "ONE_FORTY_FIVE"
b/a/e/f/b/c.<clinit>()V -> "1:45"
b/a/e/f/b/c.<clinit>()V -> "EIGHT"
b/a/e/f/b/c.<clinit>()V -> "8:00"
b/a/e/f/b/c.<clinit>()V -> "NINE"
b/a/e/f/b/c.<clinit>()V -> "9:00"
b/a/e/f/b/c.<clinit>()V -> "TEN"
b/a/e/f/b/c.<clinit>()V -> "10:00"
b/a/e/f/b/c.<clinit>()V -> "ELEVEN"
b/a/e/f/b/c.<clinit>()V -> "11:00"
b/a/e/f/b/c.<clinit>()V -> "TWELVE"
b/a/e/f/b/c.<clinit>()V -> "12:00"
b/a/e/f/b/c.<clinit>()V -> "THIRTEEN"
b/a/e/f/b/c.<clinit>()V -> "13:00"
b/a/e/f/b/c.<clinit>()V -> "FOURTEEN"
b/a/e/f/b/c.<clinit>()V -> "14:00"
b/a/e/f/b/c.<clinit>()V -> "FIFTEEN"
b/a/e/f/b/c.<clinit>()V -> "15:00"
b/a/e/f/b/c.<clinit>()V -> "FIFTEEN_HALF"
b/a/e/f/b/c.<clinit>()V -> "15:30"
b/a/e/f/b/c.<clinit>()V -> "SIXTEEN"
b/a/e/f/b/c.<clinit>()V -> "16:00"
b/a/e/f/b/c.<clinit>()V -> "SEVENTEEN"
b/a/e/f/b/c.<clinit>()V -> "17:00"
b/a/e/f/b/c.<clinit>()V -> "EIGHTEEN"
b/a/e/f/b/c.<clinit>()V -> "18:00"
b/a/e/f/b/c.<clinit>()V -> "NINETEEN"
b/a/e/f/b/c.<clinit>()V -> "19:00"
b/a/e/f/b/c.<clinit>()V -> "NINETEEN_HALF"
b/a/e/f/b/c.<clinit>()V -> "19:30"
b/a/e/f/b/c.<clinit>()V -> "TWENTY"
b/a/e/f/b/c.<clinit>()V -> "20:00"
b/a/e/f/b/c.<clinit>()V -> "TWENTY_ONE"
b/a/e/f/b/c.<clinit>()V -> "21:00"
b/a/e/f/b/c.<clinit>()V -> "TWENTY_TWO"
b/a/e/f/b/c.<clinit>()V -> "22:00"
b/a/e/f/b/c.<clinit>()V -> "TWENTY_THREE"
b/a/e/f/b/c.<clinit>()V -> "23:00"
b/a/e/f/b/c.<clinit>()V -> "TWENTY_FOUR"
b/a/e/f/b/c.<clinit>()V -> "24:00"
b/a/e/f/b/c.<clinit>()V -> "ONE"
b/a/e/f/b/c.<clinit>()V -> "1:00"
b/a/e/f/c.<init>()V -> "CameraClip"
b/a/e/f/d.<init>()V -> "ClickGui"
b/a/e/f/d.<init>()V -> "Цвет"
b/a/e/f/d.<init>()V -> "Фоновый цвет"
b/a/e/f/e.<init>()V -> "ESP"
b/a/e/f/e.<init>()V -> "Игнорировать"
b/a/e/f/e.<init>()V -> "Друзья"
b/a/e/f/e.<init>()V -> "Невидмки"
b/a/e/f/e.f(Lnet/minecraft/client/b/a/a;)Z -> "Невидмки"
b/a/e/f/e.f(Lnet/minecraft/client/b/a/a;)Z -> "Друзья"
b/a/e/f/e.f(Lnet/minecraft/client/b/a/a;)Z -> "Невидмки"
b/a/e/f/e.a(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "#0E1012"
b/a/e/f/f.<init>()V -> "Gamma"
b/a/e/f/g.<init>()V -> "GlassHand"
b/a/e/f/h.<init>()V -> "Hud"
b/a/e/f/h.<init>()V -> "Ватермарка"
b/a/e/f/h.<init>()V -> "Стиль"
b/a/e/f/h.<init>()V -> "1"
b/a/e/f/h.<init>()V -> "1"
b/a/e/f/h.<init>()V -> "2"
b/a/e/f/h.<init>()V -> "3"
b/a/e/f/h.<init>()V -> "Обводка"
b/a/e/f/h.<init>()V -> "Свечение"
b/a/e/f/h.<init>()V -> "Уведомления"
b/a/e/f/h.<init>()V -> "Время отображения"
b/a/e/f/h.<init>()V -> "Рендер"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Блюр"
b/a/e/f/h.<init>()V -> "Кейбинды"
b/a/e/f/h.<init>()V -> "Рендер"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Блюр"
b/a/e/f/h.<init>()V -> "Трагет Худ"
b/a/e/f/h.<init>()V -> "Свечение"
b/a/e/f/h.<init>()V -> "Рендер"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Обычный"
b/a/e/f/h.<init>()V -> "Блюр"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "Обычный"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "#0E1012"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "Блюр"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "FClient/head.png"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "..."
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "Неизвестно"
b/a/e/f/h.a(Lnet/minecraft/g/x;Lb/a/f/b/b;Lcom/mojang/a/a/a;)V -> "Жизни: %.1f"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "1"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " | "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " | UID: "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " | "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "fps"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "3"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "localhost"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " Premium"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "fps / "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "2"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " | UID: "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> " | "
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "fps"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "#0E1012"
b/a/e/f/h.K(Lcom/mojang/a/a/a;)V -> "fluger/image/logo24.png"
b/a/e/f/h.dH()V -> "#0E1012"
b/a/e/f/h.dJ()V -> "#0E1012"
b/a/e/f/h.bur()Ljava/lang/Boolean; -> "2"
b/a/e/f/h.bus()Ljava/lang/Boolean; -> "2"
b/a/e/f/h.buG()V -> "Блюр"
b/a/e/f/h.buG()V -> "Обычный"
b/a/e/f/h.buG()V -> "#0E1012"
b/a/e/f/h.buG()V -> "§cKey§fBinds"
b/a/e/f/h.buG()V -> "[%s]"
b/a/e/f/h.buG()V -> "§c"
b/a/e/f/i.<init>()V -> "ItemESP"
b/a/e/f/i.a(Lb/a/b/a/a;Lnet/minecraft/g/d/i;)V -> " x"
b/a/e/f/j.<init>()V -> "NameTags"
b/a/e/f/j.<init>()V -> "Игнорировать"
b/a/e/f/j.<init>()V -> "Друзья"
b/a/e/f/j.<init>()V -> "Невидмки"
b/a/e/f/j.<init>()V -> "Шрифт"
b/a/e/f/j.<init>()V -> "Клиент"
b/a/e/f/j.<init>()V -> "Клиент"
b/a/e/f/j.<init>()V -> "Майнкрафт"
b/a/e/f/j.<init>()V -> "Размер"
b/a/e/f/j.<init>()V -> "Фон"
b/a/e/f/j.<init>()V -> "Броня"
b/a/e/f/j.<init>()V -> "Зачарования"
b/a/e/f/j.<init>()V -> "Цвет фона"
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Unb "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Men "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Vanish "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Binding "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Eff "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Sil "
b/a/e/f/j.e(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "For "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Vanish "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Firp "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Bla "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Bindi "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Dep "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Fea "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Pro "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Thr "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Men "
b/a/e/f/j.b(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Unb "
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "§a"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "§6"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "§c"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "§b[F]"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> "§c[?]"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> " §f"
b/a/e/f/j.b(Lb/a/b/a/a;Lnet/minecraft/g/h/c;)V -> " "
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Vanish"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Binding"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Inf"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Pow"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Pun"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Men"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Fla"
b/a/e/f/j.c(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Unb"
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Vanish "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Loot "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Bindi "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Swe "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Shr "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Kno "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Fir "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Unb "
b/a/e/f/j.d(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Men "
b/a/e/f/j.a(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Shr "
b/a/e/f/j.a(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Eff "
b/a/e/f/j.a(Ljava/util/ArrayList;Lnet/minecraft/j/af;)V -> "Unb "
b/a/e/f/j.g(Lnet/minecraft/client/b/a/a;)Z -> "Невидмки"
b/a/e/f/j.g(Lnet/minecraft/client/b/a/a;)Z -> "Друзья"
b/a/e/f/j.g(Lnet/minecraft/client/b/a/a;)Z -> "Невидмки"
b/a/e/f/k.<init>()V -> "NoRender"
b/a/e/f/k.<init>()V -> "Убрать"
b/a/e/f/k.<init>()V -> "Плохие эффекты"
b/a/e/f/k.<init>()V -> "Анимация при уроне"
b/a/e/f/k.<init>()V -> "Огонь"
b/a/e/f/k.<init>()V -> "БоссБар"
b/a/e/f/k.<init>()V -> "Скорбоард"
b/a/e/f/k.<init>()V -> "Голограммы"
b/a/e/f/l.<init>()V -> "PearlPredict"
b/a/e/f/m.<init>()V -> "PotionHud"
b/a/e/f/m.<init>()V -> "Рендер"
b/a/e/f/m.<init>()V -> "Обычный"
b/a/e/f/m.<init>()V -> "Обычный"
b/a/e/f/m.<init>()V -> "Блюр"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Блюр"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Обычный"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "#0E1012"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Активные зелья"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Иконка"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Название/Уровень"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Название/Уровень"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Время"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "Время"
b/a/e/f/m.t(Lcom/mojang/a/a/a;)V -> "enchantment.level."
b/a/e/f/m.bI()V -> "#0E1012"
b/a/e/f/m.oV(I)Ljava/lang/String; -> "%2ds"
b/a/e/f/m.oV(I)Ljava/lang/String; -> "%2dm %2ds"
b/a/e/f/n.hPZLjava/lang/String; -> "http://80.242.58.5/list"
b/a/e/f/n.<init>()V -> "Schedules"
b/a/e/f/n.<init>()V -> "Рендер"
b/a/e/f/n.<init>()V -> "Обычный"
b/a/e/f/n.<init>()V -> "Обычный"
b/a/e/f/n.<init>()V -> "Блюр"
b/a/e/f/n.<init>()V -> "Режим"
b/a/e/f/n.<init>()V -> "Funtime"
b/a/e/f/n.<init>()V -> "Funtime"
b/a/e/f/n.<init>()V -> "ReallyWorld"
b/a/e/f/n.<init>()V -> "Количество"
b/a/e/f/n.<init>()V -> "Europe/Moscow"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "ReallyWorld"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "Блюр"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "Обычный"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "#0E1012"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "RW Schedules"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "FT Schedules"
b/a/e/f/n.b(Lb/a/b/a/a;)V -> "/an%d"
b/a/e/f/n.a(Ljava/util/Calendar;I)Ljava/lang/String; -> "ч "
b/a/e/f/n.a(Ljava/util/Calendar;I)Ljava/lang/String; -> "м "
b/a/e/f/n.a(Ljava/util/Calendar;I)Ljava/lang/String; -> "с"
b/a/e/f/n.bJ()V -> "#0E1012"
b/a/e/f/n.oV(I)Ljava/lang/String; -> "%2ds"
b/a/e/f/n.oV(I)Ljava/lang/String; -> "%2dm %2ds"
b/a/e/f/n.buN()Ljava/util/ArrayList; -> "http://80.242.58.5/list"
b/a/e/f/o$b.<clinit>()V -> "NONE"
b/a/e/f/o$b.<clinit>()V -> "VANISHED"
b/a/e/f/o$b.<clinit>()V -> "V"
b/a/e/f/o.<init>()V -> "StaffList"
b/a/e/f/o.<init>()V -> "^\w{3,16}$"
b/a/e/f/o.<init>()V -> ".*(mod|der|adm|help|wne|хелп|адм|поддержка|кура|own|taf|curat|dev|supp|yt|сотруд).*"
b/a/e/f/o.b(Lb/a/b/a/a;)V -> "[\[\]]"
b/a/e/f/o.b(Lb/a/b/a/a;)V -> "#0E1012"
b/a/e/f/o.b(Lb/a/b/a/a;)V -> "Персонал"
b/a/e/f/o.b(Lb/a/b/a/a;)V -> "Персонал"
b/a/e/f/o.b(Lb/a/b/a/a;)V -> " "
b/a/e/f/p.<init>()V -> "SwingAnimations"
b/a/e/f/p.<init>()V -> "Левая рука X"
b/a/e/f/p.<init>()V -> "Левая рука Y"
b/a/e/f/p.<init>()V -> "Левая рука Z"
b/a/e/f/p.<init>()V -> "Правая рука X"
b/a/e/f/p.<init>()V -> "Правая рука Y"
b/a/e/f/p.<init>()V -> "Правая рука Z"
b/a/e/f/p.<init>()V -> "Режим"
b/a/e/f/p.<init>()V -> "Стандарт"
b/a/e/f/p.<init>()V -> "Стандарт"
b/a/e/f/p.<init>()V -> "Сдвиг"
b/a/e/f/p.<init>()V -> "Ломание"
b/a/e/f/p.a(Lcom/mojang/a/a/a;FLjava/lang/Runnable;)V -> "Ломание"
b/a/e/f/p.a(Lcom/mojang/a/a/a;FLjava/lang/Runnable;)V -> "Сдвиг"
b/a/e/f/q.<init>()V -> "TestFeature"
b/a/e/f/q.<init>()V -> "Rotate Distance"
b/a/e/f/q.<init>()V -> "Target Selection"
b/a/e/f/q.<init>()V -> "Players"
b/a/e/f/q.<init>()V -> "Mobs"
b/a/e/f/q.<init>()V -> "Animals"
b/a/e/f/q.<init>()V -> "Villagers"
b/a/e/f/q.<init>()V -> "Only Critical"
b/a/e/f/q.<init>()V -> "COLOR"
b/a/e/f/s.<init>()V -> "Tracers"
b/a/e/f/s.<init>()V -> "Цвет"
b/a/e/f/s.<init>()V -> "Цвет друзей"
b/a/e/f/s.<init>()V -> "Игнорировать голых"
b/a/e/f/t.<init>()V -> "WorldTime"
b/a/e/f/t.<init>()V -> "Время"
b/a/e/f/t.<init>()V -> "День"
b/a/e/f/t.<init>()V -> "День"
b/a/e/f/t.<init>()V -> "Ночь"
b/a/e/f/t.<init>()V -> "Закат"
b/a/e/f/t.b(Lb/a/b/a;)V -> "День"
b/a/e/f/t.b(Lb/a/b/a;)V -> "Ночь"
b/a/e/f/t.b(Lb/a/b/a;)V -> "Закат"
b/a/e/g/a.<init>()V -> "AutoTPAccept"
b/a/e/g/a.<init>()V -> "Только друзья"
b/a/e/g/a.b(Lb/a/b/a;)V -> "телепортироваться"
b/a/e/g/a.b(Lb/a/b/a;)V -> "/tpaccept"
b/a/e/g/a.b(Lb/a/b/a;)V -> "/tpaccept"
b/a/e/g/b.<init>()V -> "Freecam"
b/a/f/a.b(FFFFFI)V -> "location"
b/a/f/a.b(FFFFFI)V -> "rectSize"
b/a/f/a.b(FFFFFI)V -> "radius"
b/a/f/a.b(FFFFFI)V -> "blur"
b/a/f/a.b(FFFFFI)V -> "color"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color1"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color2"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color3"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color4"
b/a/f/a.a(FFFFFLb/a/f/e/a;)V -> "location"
b/a/f/a.a(FFFFFLb/a/f/e/a;)V -> "rectSize"
b/a/f/a.a(FFFFFLb/a/f/e/a;)V -> "radius"
b/a/f/a.a(FFFFIFFFF)V -> "size"
b/a/f/a.a(FFFFIFFFF)V -> "color"
b/a/f/a.a(FFFFIFFFF)V -> "cornerRadius"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "u_size"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "u_radius"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "u_border_size"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color1"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color2"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color3"
b/a/f/a.a(FFFFFFLjava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;Ljava/awt/Color;)V -> "color4"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "size"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "round"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "smoothness"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "color1"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "color2"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "color3"
b/a/f/a.a(FFFFLorg/joml/Vector4f;IIII)V -> "color4"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;)V -> "blur"
b/a/f/a.a(Lcom/mojang/a/a/a;FFFFFLjava/awt/Color;)V -> "color"
b/a/f/a/b.<clinit>()V -> "LINEAR"
b/a/f/a/b.<clinit>()V -> "SIGMOID"
b/a/f/a/b.<clinit>()V -> "EASE_IN_QUAD"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_QUAD"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_QUAD"
b/a/f/a/b.<clinit>()V -> "EASE_IN_CUBIC"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_CUBIC"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_CUBIC"
b/a/f/a/b.<clinit>()V -> "EASE_IN_QUART"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_QUART"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_QUART"
b/a/f/a/b.<clinit>()V -> "EASE_IN_QUINT"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_QUINT"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_QUINT"
b/a/f/a/b.<clinit>()V -> "EASE_IN_SINE"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_SINE"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_SINE"
b/a/f/a/b.<clinit>()V -> "EASE_IN_EXPO"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_EXPO"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_EXPO"
b/a/f/a/b.<clinit>()V -> "EASE_IN_CIRC"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_CIRC"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_CIRC"
b/a/f/a/b.<clinit>()V -> "EASE_IN_BACK"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_BACK"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_BACK"
b/a/f/a/b.<clinit>()V -> "EASE_IN_ELASTIC"
b/a/f/a/b.<clinit>()V -> "EASE_OUT_ELASTIC"
b/a/f/a/b.<clinit>()V -> "EASE_IN_OUT_ELASTIC"
b/a/f/a/b.toString()Ljava/lang/String; -> "_"
b/a/f/a/b.toString()Ljava/lang/String; -> " "
b/a/f/b/a.a(CFF)F -> "'"
b/a/f/b/a.a(CFF)F -> "' wasn't found"
b/a/f/b/a.a([C)V -> "Not all characters will fit"
b/a/f/b/b.b(Ljava/lang/String;IZ)Ljava/lang/String; -> "0123456789abcdefklmnor"
b/a/f/b/b.n(Ljava/lang/String;Z)V -> "0123456789abcdefklmnor"
b/a/f/b/b.a(Ljava/lang/String;IZZZ)Lb/a/f/b/b; -> "/assets/minecraft/fluger/fonts/"
b/a/f/b/b.a(Ljava/lang/String;IZZZ)Lb/a/f/b/b; -> "/assets/minecraft/weaknet/ui/fonts/"
b/a/f/b/b.a(Ljava/lang/String;IZZZ)Lb/a/f/b/b; -> "/assets/minecraft/weaknet/ui/fonts/"
b/a/f/b/b.a(Ljava/lang/String;IZZZ)Lb/a/f/b/b; -> "/assets/minecraft/weaknet/ui/fonts/"
b/a/f/b/b.ao(Ljava/lang/String;)I -> "0123456789abcdefklmnor"
b/a/f/b/c.<clinit>()V -> "bicyclette.ttf"
b/a/f/b/c.<clinit>()V -> "RubikLight.ttf"
b/a/f/b/c.<clinit>()V -> "RubikReg.ttf"
b/a/f/b/c.<clinit>()V -> "Montserrat.ttf"
b/a/f/b/c.<clinit>()V -> "Montserrat.ttf"
b/a/f/b/c.<clinit>()V -> "Montserrat.ttf"
b/a/f/b/c.<clinit>()V -> "Montserrat.ttf"
b/a/f/b/c.<clinit>()V -> "Montserrat.ttf"
b/a/f/c/b.a(Lb/a/f/c/a;Lnet/minecraft/client/j;DDLcom/mojang/a/a/a;)V -> "Блюр"
b/a/f/c/b.a(Lb/a/f/c/a;Lnet/minecraft/client/j;DDLcom/mojang/a/a/a;)V -> "Обычный"
b/a/f/c/b.a(Lb/a/f/c/a;Lnet/minecraft/client/j;DDLcom/mojang/a/a/a;)V -> "fluger/image/logo.png"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\r\n\r\nuniform vec4 cornerRadius; // Вектор, содержащий радиусы для каждого угла: x - lt_round, y - lb_round, z - rt_round, w - rb_round\r\nuniform vec2 size;\r\nuniform vec4 color;\r\n\r\nfloat alpha(vec2 d, vec2 d1, vec4 radii) {\r\n    vec2 v = abs(d) - d1 + radii.xy;\r\n    v.x = max(v.x, 0.0);\r\n    v.y = max(v.y, 0.0);\r\n    return min(v.x, v.y) + length(max(v, vec2(0.0))) - radii.x;\r\n}\r\n\r\nvoid main() {\r\n    vec4 radii;\r\n    if (gl_TexCoord[0].s < 0.5) {\r\n        if (gl_TexCoord[0].t < 0.5) {\r\n            radii = vec4(cornerRadius.x, cornerRadius.x, cornerRadius.x, cornerRadius.x);\r\n        } else {\r\n            radii = vec4(cornerRadius.y, cornerRadius.y, cornerRadius.y, cornerRadius.y);\r\n        }\r\n    } else {\r\n        if (gl_TexCoord[0].t < 0.5) {\r\n            radii = vec4(cornerRadius.z, cornerRadius.z, cornerRadius.z, cornerRadius.z);\r\n        } else {\r\n            radii = vec4(cornerRadius.w, cornerRadius.w, cornerRadius.w, cornerRadius.w);\r\n        }\r\n    }\r\n\r\n    if (radii.x == 0.0 && radii.y == 0.0) {\r\n        gl_FragColor = vec4(color.rgb, color.a * 1.0);\r\n    } else {\r\n        gl_FragColor = vec4(color.rgb, color.a * clamp(smoothstep(1.0, 0.0, length(max((abs(gl_TexCoord[0].st - 0.5) + 0.5) * size - size + radii.xy + 0.5, 0.0)) - radii.xy - 0.5), 0.0, 1.0));\r\n    }\r\n}\r\n"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n// объявление переменных\nuniform vec2 size; // размер прямоугольника\nuniform vec4 round; // коэффициенты скругления углов\nuniform vec2 smoothness; // плавность перехода от цвета к прозрачности\nuniform float value; // значение, используемое для расчета расстояния до границы\nuniform vec4 color1; // цвет прямоугольника\nuniform vec4 color2; // цвет прямоугольника\nuniform vec4 color3; // цвет прямоугольника\nuniform vec4 color4; // цвет прямоугольника\n#define NOISE .5/255.0\n\n// функция для расчета расстояния до границы\nfloat test(vec2 vec_1, vec2 vec_2, vec4 vec_4) {\n    vec_4.xy = (vec_1.x > 0.0) ? vec_4.xy : vec_4.zw;\n    vec_4.x = (vec_1.y > 0.0) ? vec_4.x : vec_4.y;\n    vec2 coords = abs(vec_1) - vec_2 + vec_4.x;\n    return min(max(coords.x, coords.y), 0.0) + length(max(coords, vec2(0.0f))) - vec_4.x;\n}\n\nvec4 createGradient(vec2 coords, vec4 color1, vec4 color2, vec4 color3, vec4 color4) {\n    vec4 color = mix(mix(color1, color2, coords.y), mix(color3, color4, coords.y), coords.x);\n    //Dithering the color\n    // from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898, 78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec4 color = createGradient(gl_TexCoord[0].st, color1,color2,color3,color4);\n    vec2 st = gl_TexCoord[0].st * size; // координаты текущего пикселя\n    vec2 halfSize = 0.5 * size; // половина размера прямоугольника\n    float sa = 1.0 - smoothstep(smoothness.x, smoothness.y, test(halfSize - st, halfSize - value, round));\n    // рассчитываем прозрачность в зависимости от расстояния до границы\n\n    gl_FragColor = mix(vec4(color.rgb, 0.0), vec4(color.rgb, color.a), sa); // устанавливаем цвет прямоугольника с прозрачностью sa\n}\n"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Still need to fuck right off into the heart of the sun.\n\nvec2 uv;\n\nuniform float time;\nuniform vec2 resolution;\n\nconst vec2 ch_size  = vec2(1.0, 1.0) * 2.0;              // character size (X,Y)\nconst vec2 ch_space = ch_size + vec2(1.0, 1.0);    // character distance Vector(X,Y)\nconst vec2 ch_start = vec2 (ch_space.x * -6.,20.); // start position\n      vec2 ch_pos   = vec2 (0.0, 0.0);             // character position(X,Y)\n//      vec3 ch_color = vec3 (1.5, 0.75, 0.5);        // character color (R,G,B)\n//const vec3 bg_color = vec3 (0.2, 0.2, 0.2);        // background color (R,G,B)\n\n#define REPEAT_SIGN false // True/False; True=Multiple, False=Single\n\n/* 16 segment display...Akin to LED Display.\n\nSegment bit positions:\n  __2__ __1__\n |\    |    /|\n | \   |   / |\n 3  11 40 9  0\n |   \ | /   |\n |    \|/    |\n  _12__ __8__\n |           |\n |    /|\    |\n 4   / | \   7\n | 13 14  15 |\n | /   |   \ |\n  __5__|__6__\n\n15 12 11 8 7  4 3  0\n |  | |  | |  | |  |\n 0000 0000 0000 0000\n\nexample: letter A\n\n   12    8 7  4 3210\n    |    | |  | ||||\n 0001 0001 1001 1111\n\n binary to hex -> 0x119F\n*/\n\n#define n0 ddigit(0x22FF);\n#define n1 ddigit(0x0281);\n#define n2 ddigit(0x1177);\n#define n3 ddigit(0x11E7);\n#define n4 ddigit(0x5508);\n#define n5 ddigit(0x11EE);\n#define n6 ddigit(0x11FE);\n#define n7 ddigit(0x2206);\n#define n8 ddigit(0x11FF);\n#define n9 ddigit(0x11EF);\n\n#define A ddigit(0x119F);\n#define B ddigit(0x927E);\n#define C ddigit(0x007E);\n#define D ddigit(0x44E7);\n#define E ddigit(0x107E);\n#define F ddigit(0x101E);\n#define G ddigit(0x807E);\n#define H ddigit(0x1199);\n#define I ddigit(0x4466);\n#define J ddigit(0x4436);\n#define K ddigit(0x9218);\n#define L ddigit(0x0078);\n#define M ddigit(0x0A99);\n#define N ddigit(0x8899);\n#define O ddigit(0x00FF);\n#define P ddigit(0x111F);\n#define Q ddigit(0x80FF);\n#define R ddigit(0x911F);\n#define S ddigit(0x8866);\n#define T ddigit(0x4406);\n#define U ddigit(0x00F9);\n#define V ddigit(0x2218);\n#define W ddigit(0xA099);\n#define X ddigit(0xAA00);\n#define Y ddigit(0x4A00);\n#define Z ddigit(0x2266);\n#define _ ch_pos.x += ch_space.x;\n#define s_dot     ddigit(0);\n#define s_minus   ddigit(0x1100);\n#define s_plus    ddigit(0x5500);\n#define s_greater ddigit(0x2800);\n#define s_less    ddigit(0x8200);\n#define s_sqrt    ddigit(0x0C02);\n#define nl1 ch_pos = ch_start;  ch_pos.y -= 3.0;\n#define nl2 ch_pos = ch_start;  ch_pos.y -= 6.0;\n#define nl3 ch_pos = ch_start;	ch_pos.y -= 9.0;\n\nfloat dseg(vec2 p0, vec2 p1)\n{\n	vec2 dir = normalize(p1 - p0);\n	vec2 cp = (uv - ch_pos - p0) * mat2(dir.x, dir.y,-dir.y, dir.x);\n	return distance(cp, clamp(cp, vec2(0), vec2(distance(p0, p1), 0)));   \n}\n\nbool bit(int n, int b)\n{\n	return mod(floor(float(n) / exp2(floor(float(b)))), 2.0) != 0.0;\n}\n\nfloat d = 1e6;\n\nvoid ddigit(int n)\n{\n	float v = 1e6;	\n	vec2 cp = uv - ch_pos;\n	if (n == 0)     v = min(v, dseg(vec2(-0.405, -1.000), vec2(-0.500, -1.000)));\n	if (bit(n,  0)) v = min(v, dseg(vec2( 0.500,  0.063), vec2( 0.500,  0.937)));\n	if (bit(n,  1)) v = min(v, dseg(vec2( 0.438,  1.000), vec2( 0.063,  1.000)));\n	if (bit(n,  2)) v = min(v, dseg(vec2(-0.063,  1.000), vec2(-0.438,  1.000)));\n	if (bit(n,  3)) v = min(v, dseg(vec2(-0.500,  0.937), vec2(-0.500,  0.062)));\n	if (bit(n,  4)) v = min(v, dseg(vec2(-0.500, -0.063), vec2(-0.500, -0.938)));\n	if (bit(n,  5)) v = min(v, dseg(vec2(-0.438, -1.000), vec2(-0.063, -1.000)));\n	if (bit(n,  6)) v = min(v, dseg(vec2( 0.063, -1.000), vec2( 0.438, -1.000)));\n	if (bit(n,  7)) v = min(v, dseg(vec2( 0.500, -0.938), vec2( 0.500, -0.063)));\n	if (bit(n,  8)) v = min(v, dseg(vec2( 0.063,  0.000), vec2( 0.438, -0.000)));\n	if (bit(n,  9)) v = min(v, dseg(vec2( 0.063,  0.063), vec2( 0.438,  0.938)));\n	if (bit(n, 10)) v = min(v, dseg(vec2( 0.000,  0.063), vec2( 0.000,  0.937)));\n	if (bit(n, 11)) v = min(v, dseg(vec2(-0.063,  0.063), vec2(-0.438,  0.938)));\n	if (bit(n, 12)) v = min(v, dseg(vec2(-0.438,  0.000), vec2(-0.063, -0.000)));\n	if (bit(n, 13)) v = min(v, dseg(vec2(-0.063, -0.063), vec2(-0.438, -0.938)));\n	if (bit(n, 14)) v = min(v, dseg(vec2( 0.000, -0.938), vec2( 0.000, -0.063)));\n	if (bit(n, 15)) v = min(v, dseg(vec2( 0.063, -0.063), vec2( 0.438, -0.938)));\n	ch_pos.x += ch_space.x;\n	d = min(d, v);\n}\nmat2 rotate(float a)\n{\n	float c = cos(a);\n	float s = sin(a);\n	return mat2(c, s, -s, c);\n}\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(2.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n	rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing	\n\n	return c.z * mix( vec3(3.0), rgb, c.y);\n}\nvoid main( void ) \n{\n	\n	vec2 aspect = resolution.xy / (resolution.y);\n	uv = ( gl_FragCoord.xy / (resolution.y)) - aspect / 2.0;\n	float _d =  1.0-length(uv);\n	uv *= 100.0 ;\n\n	//uv *= rotate(time+uv.x*0.05);\n	\n	vec3 ch_color = hsv2rgb_smooth(vec3(time*0.4+uv.y*0.1,0.5,1.0));\n\n	vec3 bg_color = vec3(_d*0.2, _d*0.2, _d*0.6);\n\n	ch_pos = ch_start;\n                  F\n		  L\n		  U\n		  G\n			 E\n		  R\n			  _\n		  C\n		  L\n		  I\n		  E\n		  N\n		  T\n			 \n		\n	vec3 color = mix(ch_color, bg_color, 1.0- (0.08 / d*2.0));  // shading\n	gl_FragColor = vec4(color, 1.0);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> " #version 120\n                        \n            uniform vec2 u_size;\n            uniform float u_radius;\n            uniform float u_border_size;\n            uniform vec4 color1, color2, color3, color4;\n                        \n            vec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n                vec3 color = mix(mix(color1.rgb, color2.rgb, coords.y), mix(color3.rgb, color4.rgb, coords.y), coords.x);\n                return color;\n            }\n                        \n            void main(void)\n            {\n                vec2 position = (abs(gl_TexCoord[0].st - 0.5) + 0.5) * u_size;\n                float distance = length(max(position - u_size + u_radius + u_border_size, 0.0)) - u_radius + 0.5;\n                        \n                float alpha = (u_radius == 0.0) ? 1.0 : (smoothstep(0.0, 1.0, distance) - smoothstep(0.0, 1.0, distance - u_border_size));\n                        \n                gl_FragColor = vec4(createGradient(gl_TexCoord[0].st, color1.rgb, color2.rgb, color3.rgb, color4.rgb), alpha);\n              }"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "\nuniform vec2 location, rectSize;\nuniform vec4 color;\nuniform float radius;\nuniform bool blur;\n\nfloat roundSDF(vec2 p, vec2 b, float r) {\n    return length(max(abs(p) - b, 0.0)) - r;\n}\n\n\nvoid main() {\n    vec2 rectHalf = rectSize * .5;\n    // Smooth the result (free antialiasing).\n    float smoothedAlpha =  (1.0-smoothstep(0.0, 1.0, roundSDF(rectHalf - (gl_TexCoord[0].st * rectSize), rectHalf - radius - 1., radius))) * color.a;\n    gl_FragColor = vec4(color.rgb, smoothedAlpha);// mix(quadColor, shadowColor, 0.0);\n\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n                uniform sampler2D image;\n                uniform float offset;\n                uniform vec2 resolution;\n                \n                void main()\n                {\n                    vec2 uv = gl_TexCoord[0].xy / 2.0;\n                    vec2 halfpixel = resolution / 2.0;\n                    vec3 sum = texture2D(image, uv + vec2(-halfpixel.x * 2.0, 0.0) * offset).rgb;\n                    sum += texture2D(image, uv + vec2(-halfpixel.x, halfpixel.y) * offset).rgb * 2.0;\n                    sum += texture2D(image, uv + vec2(0.0, halfpixel.y * 2.0) * offset).rgb;   \n                    sum += texture2D(image, uv + vec2(halfpixel.x, halfpixel.y) * offset).rgb * 2.0;\n                    sum += texture2D(image, uv + vec2(halfpixel.x * 2.0, 0.0) * offset).rgb;\n                    sum += texture2D(image, uv + vec2(halfpixel.x, -halfpixel.y) * offset).rgb * 2.0; \n                    sum += texture2D(image, uv + vec2(0.0, -halfpixel.y * 2.0) * offset).rgb;  \n                    sum += texture2D(image, uv + vec2(-halfpixel.x, -halfpixel.y) * offset).rgb * 2.0; \n                    gl_FragColor = vec4(sum / 12.0, 1);\n                }"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform sampler2D image;\nuniform float offset;\nuniform vec2 resolution;\n\nvoid main()\n{\n    vec2 uv = gl_TexCoord[0].xy * 2.0;\n    vec2 halfpixel = resolution * 2.0;\n    vec3 sum = texture2D(image, uv).rgb * 4.0;\n    sum += texture2D(image, uv - halfpixel.xy * offset).rgb;\n    sum += texture2D(image, uv + halfpixel.xy * offset).rgb;\n    sum += texture2D(image, uv + vec2(halfpixel.x, -halfpixel.y) * offset).rgb;\n    sum += texture2D(image, uv - vec2(halfpixel.x, -halfpixel.y) * offset).rgb;\n    gl_FragColor = vec4(sum / 8.0, 1);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nvoid main() {\n    gl_TexCoord[0] = gl_MultiTexCoord0;\n    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform sampler2D tex;\nuniform vec3 color1, color2, color3, color4;\nuniform float alpha;\n\n#define NOISE .5/255.0\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1.rgb, color2.rgb, coords.y), mix(color3.rgb, color4.rgb, coords.y), coords.x);\n    //Dithering the color from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898,78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 coords = (gl_FragCoord.xy - location) / rectSize;\n    float texColorAlpha = texture2D(tex, gl_TexCoord[0].st).a;\n    gl_FragColor = vec4(createGradient(coords, color1, color2, color3, color4), texColorAlpha * alpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform sampler2D tex;\nuniform vec3 color1, color2, color3, color4;\nuniform float alpha;\n\n#define NOISE .5/255.0\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1, color2, coords.y), mix(color3, color4, coords.y), coords.x);\n    //Dithering the color\n    // from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898, 78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 coords = (gl_FragCoord.xy - location) / rectSize;\n    gl_FragColor = vec4(createGradient(coords, color1, color2, color3, color4), alpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\nuniform sampler2D textureIn;\nuniform float force;\nvoid main() {\n    vec4 original = texture2D(textureIn, gl_TexCoord[0].st); // получаем оригинальный цвет текстуры\n    float d = (original.r + original.b + original.g)/force; // вычисляем яркость\n    gl_FragColor = vec4(d, d, d, 1);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform sampler2D textureIn;\nuniform vec2 texelSize, direction;\nuniform float radius;\nuniform float weights[256];\n\n#define offset texelSize * direction\n\nvoid main() {\n    vec3 blr = texture2D(textureIn, gl_TexCoord[0].st).rgb * weights[0];\n\n    for (float f = 1.0; f <= radius; f++) {\n        blr += texture2D(textureIn, gl_TexCoord[0].st + f * offset).rgb * (weights[int(abs(f))]);\n        blr += texture2D(textureIn, gl_TexCoord[0].st - f * offset).rgb * (weights[int(abs(f))]);\n    }\n\n    gl_FragColor = vec4(blr, 1.0);\n}\n"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform vec4 color1, color2, color3, color4;\nuniform float radius;\n\n#define NOISE .5/255.0\n\nfloat roundSDF(vec2 p, vec2 b, float r) {\n    return length(max(abs(p) - b , 0.0)) - r;\n}\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1.rgb, color2.rgb, coords.y), mix(color3.rgb, color4.rgb, coords.y), coords.x);\n    //Dithering the color\n    // from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898, 78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 st = gl_TexCoord[0].st;\n    vec2 halfSize = rectSize * .5;\n    \n    float smoothedAlpha =  (1.0-smoothstep(0.0, 2., roundSDF(halfSize - (gl_TexCoord[0].st * rectSize), halfSize - radius - 1., radius))) * color1.a;\n    gl_FragColor = vec4(createGradient(st, color1.rgb, color2.rgb, color3.rgb, color4.rgb), smoothedAlpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform vec4 color;\nuniform float radius;\nuniform bool blur;\n\nfloat roundSDF(vec2 p, vec2 b, float r) {\n    return length(max(abs(p) - b, 0.0)) - r;\n}\n\n\nvoid main() {\n    vec2 rectHalf = rectSize * .5;\n    // Smooth the result (free antialiasing).\n    float smoothedAlpha =  (1.0-smoothstep(0.0, 1.0, roundSDF(rectHalf - (gl_TexCoord[0].st * rectSize), rectHalf - radius - 1., radius))) * color.a;\n    gl_FragColor = vec4(color.rgb, smoothedAlpha);// mix(quadColor, shadowColor, 0.0);\n\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "gaussian"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "smooth"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "roundedRectGradient"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "main_menu"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "roundedRect"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "gradient"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "angleRound"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "gradientmask"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "ROUNDED_GRADLIENT_OUTLINE_RECT"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "desolate"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "kawaseUp"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "rounded"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "kawaseDown"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform vec4 color;\nuniform float radius;\nuniform bool blur;\n\nfloat roundSDF(vec2 p, vec2 b, float r) {\n    return length(max(abs(p) - b, 0.0)) - r;\n}\n\n\nvoid main() {\n    vec2 rectHalf = rectSize * .5;\n    // Smooth the result (free antialiasing).\n    float smoothedAlpha =  (1.0-smoothstep(0.0, 1.0, roundSDF(rectHalf - (gl_TexCoord[0].st * rectSize), rectHalf - radius - 1., radius))) * color.a;\n    gl_FragColor = vec4(color.rgb, smoothedAlpha);// mix(quadColor, shadowColor, 0.0);\n\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform vec4 color1, color2, color3, color4;\nuniform float radius;\n\n#define NOISE .5/255.0\n\nfloat roundSDF(vec2 p, vec2 b, float r) {\n    return length(max(abs(p) - b , 0.0)) - r;\n}\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1.rgb, color2.rgb, coords.y), mix(color3.rgb, color4.rgb, coords.y), coords.x);\n    //Dithering the color\n    // from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898, 78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 st = gl_TexCoord[0].st;\n    vec2 halfSize = rectSize * .5;\n    \n    float smoothedAlpha =  (1.0-smoothstep(0.0, 2., roundSDF(halfSize - (gl_TexCoord[0].st * rectSize), halfSize - radius - 1., radius))) * color1.a;\n    gl_FragColor = vec4(createGradient(st, color1.rgb, color2.rgb, color3.rgb, color4.rgb), smoothedAlpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform sampler2D textureIn;\nuniform vec2 texelSize, direction;\nuniform float radius;\nuniform float weights[256];\n\n#define offset texelSize * direction\n\nvoid main() {\n    vec3 blr = texture2D(textureIn, gl_TexCoord[0].st).rgb * weights[0];\n\n    for (float f = 1.0; f <= radius; f++) {\n        blr += texture2D(textureIn, gl_TexCoord[0].st + f * offset).rgb * (weights[int(abs(f))]);\n        blr += texture2D(textureIn, gl_TexCoord[0].st - f * offset).rgb * (weights[int(abs(f))]);\n    }\n\n    gl_FragColor = vec4(blr, 1.0);\n}\n"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\nuniform sampler2D textureIn;\nuniform float force;\nvoid main() {\n    vec4 original = texture2D(textureIn, gl_TexCoord[0].st); // получаем оригинальный цвет текстуры\n    float d = (original.r + original.b + original.g)/force; // вычисляем яркость\n    gl_FragColor = vec4(d, d, d, 1);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform sampler2D tex;\nuniform vec3 color1, color2, color3, color4;\nuniform float alpha;\n\n#define NOISE .5/255.0\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1.rgb, color2.rgb, coords.y), mix(color3.rgb, color4.rgb, coords.y), coords.x);\n    //Dithering the color from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898,78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 coords = (gl_FragCoord.xy - location) / rectSize;\n    float texColorAlpha = texture2D(tex, gl_TexCoord[0].st).a;\n    gl_FragColor = vec4(createGradient(coords, color1, color2, color3, color4), texColorAlpha * alpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "#version 120\n\nuniform vec2 location, rectSize;\nuniform sampler2D tex;\nuniform vec3 color1, color2, color3, color4;\nuniform float alpha;\n\n#define NOISE .5/255.0\n\nvec3 createGradient(vec2 coords, vec3 color1, vec3 color2, vec3 color3, vec3 color4){\n    vec3 color = mix(mix(color1, color2, coords.y), mix(color3, color4, coords.y), coords.x);\n    //Dithering the color\n    // from https://shader-tutorial.dev/advanced/color-banding-dithering/\n    color += mix(NOISE, -NOISE, fract(sin(dot(coords.xy, vec2(12.9898, 78.233))) * 43758.5453));\n    return color;\n}\n\nvoid main() {\n    vec2 coords = (gl_FragCoord.xy - location) / rectSize;\n    gl_FragColor = vec4(createGradient(coords, color1, color2, color3, color4), alpha);\n}"
b/a/f/e/a.<init>(Ljava/lang/String;)V -> "Shader failed to link!"
b/a/f/e/a.b(Ljava/lang/String;[F)V -> "Недопустимое количество аргументов для uniform '"
b/a/f/e/a.b(Ljava/lang/String;[F)V -> "'"
b/a/f/e/a.a(Ljava/io/InputStream;I)I -> "Shader (%s) failed to compile!"
b/a/f/e/a/a.dc(F)V -> "textureIn"
b/a/f/e/a/a.dc(F)V -> "force"
b/a/f/e/a/b.e(FI)V -> "offset"
b/a/f/e/a/b.e(FI)V -> "resolution"
b/a/f/e/a/b.e(FI)V -> "offset"
b/a/f/e/a/b.e(FI)V -> "resolution"
b/a/f/e/b.bm()V -> "angleRound"
b/a/f/e/b.bm()V -> "rounded"
b/a/f/e/b.bm()V -> "main_menu"
b/a/f/e/b.bm()V -> "ROUNDED_GRADLIENT_OUTLINE_RECT"
b/a/f/e/b.bm()V -> "roundedRectGradient"
b/a/f/e/b.bm()V -> "roundedRect"
b/a/f/e/b.bm()V -> "kawaseDown"
b/a/f/e/b.bm()V -> "kawaseUp"
b/a/f/e/b.bm()V -> "desolate"
b/a/f/e/b.bm()V -> "smooth"
b/a/f/f/a.a(Lcom/mojang/a/a/a;IIF)V -> "Поиск..."
b/a/f/f/a.a(Lcom/mojang/a/a/a;IIF)V -> "Поиск..."
b/a/f/f/a/a.cC(II)V -> "fluger/image/cross.png"
b/a/f/f/a/b.lv(Ljava/lang/String;)V -> "Аккаунты"
b/a/f/f/a/b.lv(Ljava/lang/String;)V -> "Нельзя удалить последний аккаунт"
b/a/f/f/a/c.<init>()V -> "Введите ник"
b/a/f/f/a/c.cC(II)V -> "Управление аккаунтами"
b/a/f/f/a/c.cC(II)V -> "Введите ник"
b/a/f/f/a/c.cC(II)V -> "Рандомный ник"
b/a/f/f/a/c.cC(II)V -> "Нажимте Enter чтобы авторизироваться"
b/a/f/f/a/d.sK()Lnet/minecraft/z/f/d; -> "gui.narrate.editBox"
b/a/f/f/a/e.a(Lcom/mojang/a/a/a;IIF)V -> "Аккаунты"
b/a/f/f/b/a/a.a(Lnet/minecraft/client/j;II)V -> "["
b/a/f/f/b/a/a.a(Lnet/minecraft/client/j;II)V -> "]"
b/a/f/f/b/a/a.a(Lnet/minecraft/client/j;II)V -> ": "
b/a/f/f/b/a/a.a(Lnet/minecraft/client/j;II)V -> "..."
b/a/f/f/b/a/d.a(Lnet/minecraft/client/j;II)V -> ":"
b/a/f/f/b/a/d.a(Lnet/minecraft/client/j;II)V -> "Ждем"
b/a/f/f/b/a/d.a(Lnet/minecraft/client/j;II)V -> "Нету"
b/a/f/f/b/a/e.a(Lnet/minecraft/client/j;II)V -> ": "
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "fluger/image/"
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "minus"
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "dots"
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> ".png"
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "Press a key... "
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "Press a key... "
b/a/f/f/b/a/f.a(Lnet/minecraft/client/j;II)V -> "Press a key... "
b/a/f/f/b/a/h.a(Lnet/minecraft/client/j;II)V -> ":"
b/a/f/f/c.<init>(Ljava/util/List;)V -> "Hub"
b/a/f/f/d.<init>()V -> "FClient/backmenu.png"
b/a/f/f/d.<init>()V -> "FClient/logo.png"
b/a/f/f/d.<clinit>()V -> "FClient/button.png"
b/a/f/f/d.a(Lcom/mojang/a/a/a;IIF)V -> "FLUGERCLIENT.XYZ"
b/a/f/f/d.a(Lcom/mojang/a/a/a;IIF)V -> "§bhttps://t.me/FlugerClientDLC"
b/a/f/f/d.a(Lnet/minecraft/client/k;II)V -> "Одиночная Игра"
b/a/f/f/d.a(Lnet/minecraft/client/k;II)V -> "Мультиплеер"
b/a/f/f/d.a(Lnet/minecraft/client/k;II)V -> "Настройки"
b/a/f/f/d.a(Lnet/minecraft/client/k;II)V -> "Выйти"
b/a/f/f/e.a(Lnet/minecraft/client/j;II)V -> "fluger/image/theme.png"
b/a/f/f/e.a(Lnet/minecraft/client/j;II)V -> "fluger/image/"
b/a/f/f/e.a(Lnet/minecraft/client/j;II)V -> ".png"
b/a/f/f/e.a(Lnet/minecraft/client/j;II)V -> "Поиск"
b/a/f/f/e.bvu()I -> "Поиск"
b/a/f/f/g.<init>()V -> "Themes"
b/a/g/b.bm()V -> "Лазурный"
b/a/g/b.bm()V -> "Чернила"
b/a/g/b.bm()V -> "Мороз"
b/a/g/b.bm()V -> "Роза"
b/a/g/b.bm()V -> "Океан"
b/a/g/b.bm()V -> "Подводный"
b/a/g/b.bm()V -> "Вишня"
b/a/g/b.bm()V -> "Снег"
b/a/g/b.bm()V -> "Аметист"
b/a/g/b.bm()V -> "Сталь"
b/a/g/b.bm()V -> "Тропики"
b/a/g/b.bm()V -> "Юпитер"
b/a/g/b.bm()V -> "Сад"
b/a/g/b.bm()V -> "Лава"
b/a/g/b.bm()V -> "Персик"
b/a/h/a.<init>()V -> "fsd3drdf3fd3"
b/a/h/a.<init>()V -> "/Elysium/"
b/a/h/b.getName()Ljava/lang/String; -> "itskekoff"
b/a/h/b.bvN()Ljava/lang/String; -> "0xSERJ_SOLUTIONS"
b/a/i/b.lB(Ljava/lang/String;)V -> " -> "
b/a/i/e.b(Lnet/minecraft/client/j/a;)V -> "ОБНОВЛЕНИЕ ФРЕМБУФФЕРА"
b/a/i/g.lE(Ljava/lang/String;)Ljava/lang/String; -> "GET"
b/a/i/g.lE(Ljava/lang/String;)Ljava/lang/String; -> "User-Agent"
b/a/i/g.lE(Ljava/lang/String;)Ljava/lang/String; -> "."
b/a/i/i.pf(I)Ljava/lang/String; -> "key.mouse.left"
b/a/i/i.pf(I)Ljava/lang/String; -> "key.mouse.right"
b/a/i/i.pf(I)Ljava/lang/String; -> "key.mouse.middle"
b/a/i/i.pf(I)Ljava/lang/String; -> "MOUSE"
b/a/i/i.bvY()V -> "A"
b/a/i/i.bvY()V -> "B"
b/a/i/i.bvY()V -> "C"
b/a/i/i.bvY()V -> "D"
b/a/i/i.bvY()V -> "E"
b/a/i/i.bvY()V -> "F"
b/a/i/i.bvY()V -> "G"
b/a/i/i.bvY()V -> "H"
b/a/i/i.bvY()V -> "I"
b/a/i/i.bvY()V -> "J"
b/a/i/i.bvY()V -> "K"
b/a/i/i.bvY()V -> "L"
b/a/i/i.bvY()V -> "M"
b/a/i/i.bvY()V -> "N"
b/a/i/i.bvY()V -> "O"
b/a/i/i.bvY()V -> "P"
b/a/i/i.bvY()V -> "Q"
b/a/i/i.bvY()V -> "R"
b/a/i/i.bvY()V -> "S"
b/a/i/i.bvY()V -> "T"
b/a/i/i.bvY()V -> "U"
b/a/i/i.bvY()V -> "V"
b/a/i/i.bvY()V -> "W"
b/a/i/i.bvY()V -> "X"
b/a/i/i.bvY()V -> "Y"
b/a/i/i.bvY()V -> "Z"
b/a/i/i.bvY()V -> "0"
b/a/i/i.bvY()V -> "1"
b/a/i/i.bvY()V -> "2"
b/a/i/i.bvY()V -> "3"
b/a/i/i.bvY()V -> "4"
b/a/i/i.bvY()V -> "5"
b/a/i/i.bvY()V -> "6"
b/a/i/i.bvY()V -> "7"
b/a/i/i.bvY()V -> "8"
b/a/i/i.bvY()V -> "9"
b/a/i/i.bvY()V -> "F1"
b/a/i/i.bvY()V -> "F2"
b/a/i/i.bvY()V -> "F3"
b/a/i/i.bvY()V -> "F4"
b/a/i/i.bvY()V -> "F5"
b/a/i/i.bvY()V -> "F6"
b/a/i/i.bvY()V -> "F7"
b/a/i/i.bvY()V -> "F8"
b/a/i/i.bvY()V -> "F9"
b/a/i/i.bvY()V -> "F10"
b/a/i/i.bvY()V -> "F11"
b/a/i/i.bvY()V -> "F12"
b/a/i/i.bvY()V -> "NUMPAD1"
b/a/i/i.bvY()V -> "NUMPAD2"
b/a/i/i.bvY()V -> "NUMPAD3"
b/a/i/i.bvY()V -> "NUMPAD4"
b/a/i/i.bvY()V -> "NUMPAD5"
b/a/i/i.bvY()V -> "NUMPAD6"
b/a/i/i.bvY()V -> "NUMPAD7"
b/a/i/i.bvY()V -> "NUMPAD8"
b/a/i/i.bvY()V -> "NUMPAD9"
b/a/i/i.bvY()V -> "SPACE"
b/a/i/i.bvY()V -> "ENTER"
b/a/i/i.bvY()V -> "ESCAPE"
b/a/i/i.bvY()V -> "HOME"
b/a/i/i.bvY()V -> "INSERT"
b/a/i/i.bvY()V -> "DELETE"
b/a/i/i.bvY()V -> "END"
b/a/i/i.bvY()V -> "PAGEUP"
b/a/i/i.bvY()V -> "PAGEDOWN"
b/a/i/i.bvY()V -> "RIGHT"
b/a/i/i.bvY()V -> "LEFT"
b/a/i/i.bvY()V -> "DOWN"
b/a/i/i.bvY()V -> "UP"
b/a/i/i.bvY()V -> "RIGHT_SHIFT"
b/a/i/i.bvY()V -> "LEFT_SHIFT"
b/a/i/i.bvY()V -> "RIGHT_CONTROL"
b/a/i/i.bvY()V -> "LEFT_CONTROL"
b/a/i/i.bvY()V -> "RIGHT_ALT"
b/a/i/i.bvY()V -> "LEFT_ALT"
b/a/i/i.bvY()V -> "RIGHT_SUPER"
b/a/i/i.bvY()V -> "LEFT_SUPER"
b/a/i/i.bvY()V -> "MENU"
b/a/i/i.bvY()V -> "CAPS_LOCK"
b/a/i/i.bvY()V -> "NUM_LOCK"
b/a/i/i.bvY()V -> "SCROLL_LOCK"
b/a/i/i.bvY()V -> "KP_DECIMAL"
b/a/i/i.bvY()V -> "KP_DIVIDE"
b/a/i/i.bvY()V -> "KP_MULTIPLY"
b/a/i/i.bvY()V -> "KP_SUBTRACT"
b/a/i/i.bvY()V -> "KP_PLUS"
b/a/i/i.bvY()V -> "KP_ENTER"
b/a/i/i.bvY()V -> "KP_EQUAL"
b/a/i/i.bvY()V -> "'"
b/a/i/i.bvY()V -> "/"
b/a/i/i.bvY()V -> "-"
b/a/i/i.bvY()V -> "+"
b/a/i/i.bvY()V -> "BACK"
b/a/i/i.bvY()V -> "BACKSLASH"
b/a/i/i.bvY()V -> "."
b/a/i/i.bvY()V -> "COMMA"
b/a/i/i.bvY()V -> "PAUSE"
b/a/i/i.bvY()V -> "`"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Normal"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Add"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Subtract"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Difference"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Multiply"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Darken"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Burn"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Color Burn"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Screen"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Lighten"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Dodge"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Color Dodge"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Hue"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Saturation"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Brightness"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Color"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Overlay"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Soft Light"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Hard Light"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Pin Light"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Exclusion"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Negation"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Average"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Stencil"
com/jhlabs/composite/MiscComposite.<clinit>()V -> "Silhouette"
com/jhlabs/composite/MiscComposite.<init>(IF)V -> "alpha value out of range"
com/jhlabs/composite/MiscComposite.<init>(IF)V -> "unknown composite rule"
com/jhlabs/composite/RGBComposite.<init>(F)V -> "RGBComposite: alpha must be between 0 and 1"
com/jhlabs/image/ApplyMaskFilter.toString()Ljava/lang/String; -> "Keying/Key..."
com/jhlabs/image/AverageFilter.toString()Ljava/lang/String; -> "Blur/Average Blur"
com/jhlabs/image/BicubicScaleFilter.toString()Ljava/lang/String; -> "Distort/Bicubic Scale"
com/jhlabs/image/BlockFilter.toString()Ljava/lang/String; -> "Pixellate/Mosaic..."
com/jhlabs/image/BlurFilter.toString()Ljava/lang/String; -> "Blur/Simple Blur"
com/jhlabs/image/BorderFilter.toString()Ljava/lang/String; -> "Distort/Border..."
com/jhlabs/image/BoxBlurFilter.toString()Ljava/lang/String; -> "Blur/Box Blur..."
com/jhlabs/image/BrushedMetalFilter.toString()Ljava/lang/String; -> "Texture/Brushed Metal..."
com/jhlabs/image/BumpFilter.toString()Ljava/lang/String; -> "Blur/Emboss Edges"
com/jhlabs/image/CausticsFilter.toString()Ljava/lang/String; -> "Texture/Caustics..."
com/jhlabs/image/CellularFilter.toString()Ljava/lang/String; -> "Texture/Cellular..."
com/jhlabs/image/ChannelMixFilter.toString()Ljava/lang/String; -> "Colors/Mix Channels..."
com/jhlabs/image/CheckFilter.toString()Ljava/lang/String; -> "Texture/Checkerboard..."
com/jhlabs/image/ChromaKeyFilter.toString()Ljava/lang/String; -> "Keying/Chroma Key..."
com/jhlabs/image/ChromeFilter.toString()Ljava/lang/String; -> "Effects/Chrome..."
com/jhlabs/image/CircleFilter.toString()Ljava/lang/String; -> "Distort/Circle..."
com/jhlabs/image/ColorHalftoneFilter.toString()Ljava/lang/String; -> "Pixellate/Color Halftone..."
com/jhlabs/image/CompositeFilter.toString()Ljava/lang/String; -> "Composite"
com/jhlabs/image/ContourFilter.toString()Ljava/lang/String; -> "Stylize/Contour..."
com/jhlabs/image/ContrastFilter.toString()Ljava/lang/String; -> "Colors/Contrast..."
com/jhlabs/image/ConvolveFilter.toString()Ljava/lang/String; -> "Blur/Convolve..."
com/jhlabs/image/CropFilter.toString()Ljava/lang/String; -> "Distort/Crop"
com/jhlabs/image/CrystallizeFilter.toString()Ljava/lang/String; -> "Pixellate/Crystallize..."
com/jhlabs/image/CurlFilter.toString()Ljava/lang/String; -> "Distort/Curl..."
com/jhlabs/image/CurvesFilter.setCurves([Lcom/jhlabs/image/Curve;)V -> "Curves must be length 1 or 3"
com/jhlabs/image/CurvesFilter.toString()Ljava/lang/String; -> "Colors/Curves..."
com/jhlabs/image/DeinterlaceFilter.toString()Ljava/lang/String; -> "Video/De-Interlace"
com/jhlabs/image/DespeckleFilter.toString()Ljava/lang/String; -> "Blur/Despeckle..."
com/jhlabs/image/DiffuseFilter.toString()Ljava/lang/String; -> "Distort/Diffuse..."
com/jhlabs/image/DiffusionFilter.toString()Ljava/lang/String; -> "Colors/Diffusion Dither..."
com/jhlabs/image/DilateFilter.toString()Ljava/lang/String; -> "Binary/Dilate..."
com/jhlabs/image/DisplaceFilter.toString()Ljava/lang/String; -> "Distort/Displace..."
com/jhlabs/image/DissolveFilter.toString()Ljava/lang/String; -> "Stylize/Dissolve..."
com/jhlabs/image/DitherFilter.toString()Ljava/lang/String; -> "Colors/Dither..."
com/jhlabs/image/DoGFilter.toString()Ljava/lang/String; -> "Edges/Difference of Gaussians..."
com/jhlabs/image/EdgeFilter.toString()Ljava/lang/String; -> "Edges/Detect Edges"
com/jhlabs/image/EmbossFilter.toString()Ljava/lang/String; -> "Stylize/Emboss..."
com/jhlabs/image/EqualizeFilter.toString()Ljava/lang/String; -> "Colors/Equalize"
com/jhlabs/image/ErodeAlphaFilter.toString()Ljava/lang/String; -> "Alpha/Erode..."
com/jhlabs/image/ErodeFilter.toString()Ljava/lang/String; -> "Binary/Erode..."
com/jhlabs/image/ExposureFilter.toString()Ljava/lang/String; -> "Colors/Exposure..."
com/jhlabs/image/FBMFilter.toString()Ljava/lang/String; -> "Texture/Fractal Brownian Motion..."
com/jhlabs/image/FadeFilter.toString()Ljava/lang/String; -> "Fade..."
com/jhlabs/image/FeedbackFilter.toString()Ljava/lang/String; -> "Effects/Feedback..."
com/jhlabs/image/FieldWarpFilter.toString()Ljava/lang/String; -> "Distort/Field Warp..."
com/jhlabs/image/FlareFilter.toString()Ljava/lang/String; -> "Stylize/Flare..."
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Flip Horizontal"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Flip Vertical"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Flip Diagonal"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Rotate 90"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Rotate -90"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Rotate 180"
com/jhlabs/image/FlipFilter.toString()Ljava/lang/String; -> "Flip"
com/jhlabs/image/Flush3DFilter.toString()Ljava/lang/String; -> "Stylize/Flush 3D..."
com/jhlabs/image/FourColorFilter.toString()Ljava/lang/String; -> "Texture/Four Color Fill..."
com/jhlabs/image/GainFilter.toString()Ljava/lang/String; -> "Colors/Gain..."
com/jhlabs/image/GammaFilter.toString()Ljava/lang/String; -> "Colors/Gamma..."
com/jhlabs/image/GaussianFilter.toString()Ljava/lang/String; -> "Blur/Gaussian Blur..."
com/jhlabs/image/GlintFilter.toString()Ljava/lang/String; -> "Effects/Glint..."
com/jhlabs/image/GlowFilter.toString()Ljava/lang/String; -> "Blur/Glow..."
com/jhlabs/image/GradientFilter.toString()Ljava/lang/String; -> "Other/Gradient Fill..."
com/jhlabs/image/GradientWipeFilter.toString()Ljava/lang/String; -> "Transitions/Gradient Wipe..."
com/jhlabs/image/GrayFilter.toString()Ljava/lang/String; -> "Colors/Gray Out"
com/jhlabs/image/GrayscaleFilter.toString()Ljava/lang/String; -> "Colors/Grayscale"
com/jhlabs/image/HSBAdjustFilter.toString()Ljava/lang/String; -> "Colors/Adjust HSB..."
com/jhlabs/image/HalftoneFilter.toString()Ljava/lang/String; -> "Stylize/Halftone..."
com/jhlabs/image/HighPassFilter.toString()Ljava/lang/String; -> "Blur/High Pass..."
com/jhlabs/image/ImageCombiningFilter.filter(Ljava/awt/Image;Ljava/awt/Image;IIII)Ljava/awt/image/ImageProducer; -> "interrupted waiting for pixels!"
com/jhlabs/image/ImageCombiningFilter.filter(Ljava/awt/Image;Ljava/awt/Image;IIII)Ljava/awt/image/ImageProducer; -> "image fetch aborted or errored"
com/jhlabs/image/ImageCombiningFilter.filter(Ljava/awt/Image;Ljava/awt/Image;IIII)Ljava/awt/image/ImageProducer; -> "image fetch aborted or errored"
com/jhlabs/image/ImageMath.spline(FI[F)F -> "Too few knots in spline"
com/jhlabs/image/ImageMath.spline(FI[I[I)F -> "Too few knots in spline"
com/jhlabs/image/ImageMath.colorSpline(FI[I)I -> "Too few knots in spline"
com/jhlabs/image/ImageMath.colorSpline(II[I[I)I -> "Too few knots in spline"
com/jhlabs/image/ImageUtils.createImage(Ljava/awt/image/ImageProducer;)Ljava/awt/image/BufferedImage; -> "Image fetch interrupted"
com/jhlabs/image/ImageUtils.createImage(Ljava/awt/image/ImageProducer;)Ljava/awt/image/BufferedImage; -> "Image fetch aborted"
com/jhlabs/image/ImageUtils.createImage(Ljava/awt/image/ImageProducer;)Ljava/awt/image/BufferedImage; -> "Image fetch error"
com/jhlabs/image/InterpolateFilter.toString()Ljava/lang/String; -> "Effects/Interpolate..."
com/jhlabs/image/InvertAlphaFilter.toString()Ljava/lang/String; -> "Alpha/Invert"
com/jhlabs/image/InvertFilter.toString()Ljava/lang/String; -> "Colors/Invert"
com/jhlabs/image/JavaLnFFilter.toString()Ljava/lang/String; -> "Stylize/Java L&F Stipple"
com/jhlabs/image/KaleidoscopeFilter.toString()Ljava/lang/String; -> "Distort/Kaleidoscope..."
com/jhlabs/image/KeyFilter.toString()Ljava/lang/String; -> "Keying/Key..."
com/jhlabs/image/LaplaceFilter.toString()Ljava/lang/String; -> "Edges/Laplace..."
com/jhlabs/image/LensBlurFilter.toString()Ljava/lang/String; -> "Blur/Lens Blur..."
com/jhlabs/image/LevelsFilter.toString()Ljava/lang/String; -> "Colors/Levels..."
com/jhlabs/image/LifeFilter.toString()Ljava/lang/String; -> "Binary/Life"
com/jhlabs/image/LightFilter$AmbientLight.toString()Ljava/lang/String; -> "Ambient Light"
com/jhlabs/image/LightFilter$DistantLight.toString()Ljava/lang/String; -> "Distant Light"
com/jhlabs/image/LightFilter$Light.toString()Ljava/lang/String; -> "Light"
com/jhlabs/image/LightFilter$PointLight.toString()Ljava/lang/String; -> "Point Light"
com/jhlabs/image/LightFilter$SpotLight.toString()Ljava/lang/String; -> "Spotlight"
com/jhlabs/image/LightFilter.toString()Ljava/lang/String; -> "Stylize/Light Effects..."
com/jhlabs/image/LookupFilter.toString()Ljava/lang/String; -> "Colors/Lookup..."
com/jhlabs/image/MapFilter.toString()Ljava/lang/String; -> "Distort/Map Coordinates..."
com/jhlabs/image/MarbleFilter.toString()Ljava/lang/String; -> "Distort/Marble..."
com/jhlabs/image/MarbleTexFilter.toString()Ljava/lang/String; -> "Texture/Marble Texture..."
com/jhlabs/image/MaskFilter.toString()Ljava/lang/String; -> "Mask"
com/jhlabs/image/MaximumFilter.toString()Ljava/lang/String; -> "Blur/Maximum"
com/jhlabs/image/MedianFilter.toString()Ljava/lang/String; -> "Blur/Median"
com/jhlabs/image/MinimumFilter.toString()Ljava/lang/String; -> "Blur/Minimum"
com/jhlabs/image/MirrorFilter.toString()Ljava/lang/String; -> "Effects/Mirror..."
com/jhlabs/image/MotionBlurFilter.toString()Ljava/lang/String; -> "Blur/Motion Blur..."
com/jhlabs/image/MotionBlurOp.toString()Ljava/lang/String; -> "Blur/Faster Motion Blur..."
com/jhlabs/image/NoiseFilter.toString()Ljava/lang/String; -> "Stylize/Add Noise..."
com/jhlabs/image/OctTreeQuantizer$OctTreeNode.list(Ljava/io/PrintStream;I)V -> ": count="
com/jhlabs/image/OctTreeQuantizer$OctTreeNode.list(Ljava/io/PrintStream;I)V -> ": count="
com/jhlabs/image/OctTreeQuantizer$OctTreeNode.list(Ljava/io/PrintStream;I)V -> " red="
com/jhlabs/image/OctTreeQuantizer$OctTreeNode.list(Ljava/io/PrintStream;I)V -> " green="
com/jhlabs/image/OctTreeQuantizer$OctTreeNode.list(Ljava/io/PrintStream;I)V -> " blue="
com/jhlabs/image/OctTreeQuantizer.getIndexForColor(I)I -> "getIndexForColor failed"
com/jhlabs/image/OctTreeQuantizer.insertColor(I)V -> "insertColor failed"
com/jhlabs/image/OctTreeQuantizer.reduceTree(I)V -> "not a leaf!"
com/jhlabs/image/OctTreeQuantizer.reduceTree(I)V -> "Unable to reduce the OctTree"
com/jhlabs/image/OffsetFilter.toString()Ljava/lang/String; -> "Distort/Offset..."
com/jhlabs/image/OilFilter.toString()Ljava/lang/String; -> "Stylize/Oil..."
com/jhlabs/image/OpacityFilter.toString()Ljava/lang/String; -> "Colors/Transparency..."
com/jhlabs/image/OutlineFilter.toString()Ljava/lang/String; -> "Binary/Outline..."
com/jhlabs/image/PerspectiveFilter.toString()Ljava/lang/String; -> "Distort/Perspective..."
com/jhlabs/image/PinchFilter.toString()Ljava/lang/String; -> "Distort/Pinch..."
com/jhlabs/image/PlasmaFilter.toString()Ljava/lang/String; -> "Texture/Plasma..."
com/jhlabs/image/PointillizeFilter.toString()Ljava/lang/String; -> "Pixellate/Pointillize..."
com/jhlabs/image/PolarFilter.toString()Ljava/lang/String; -> "Distort/Polar Coordinates..."
com/jhlabs/image/PosterizeFilter.toString()Ljava/lang/String; -> "Colors/Posterize..."
com/jhlabs/image/PremultiplyFilter.toString()Ljava/lang/String; -> "Alpha/Premultiply"
com/jhlabs/image/QuantizeFilter.toString()Ljava/lang/String; -> "Colors/Quantize..."
com/jhlabs/image/QuiltFilter.toString()Ljava/lang/String; -> "Texture/Chaotic Quilt..."
com/jhlabs/image/RGBAdjustFilter.toString()Ljava/lang/String; -> "Colors/Adjust RGB..."
com/jhlabs/image/RaysFilter.toString()Ljava/lang/String; -> "Stylize/Rays..."
com/jhlabs/image/ReduceNoiseFilter.toString()Ljava/lang/String; -> "Blur/Smooth"
com/jhlabs/image/RescaleFilter.toString()Ljava/lang/String; -> "Colors/Rescale..."
com/jhlabs/image/RippleFilter.toString()Ljava/lang/String; -> "Distort/Ripple..."
com/jhlabs/image/RotateFilter.toString()Ljava/lang/String; -> "Rotate "
com/jhlabs/image/SaturationFilter.toString()Ljava/lang/String; -> "Colors/Saturation..."
com/jhlabs/image/ScaleFilter.toString()Ljava/lang/String; -> "Distort/Scale"
com/jhlabs/image/ScratchFilter.toString()Ljava/lang/String; -> "Render/Scratches..."
com/jhlabs/image/ShadeFilter.toString()Ljava/lang/String; -> "Stylize/Shade..."
com/jhlabs/image/ShadowFilter.toString()Ljava/lang/String; -> "Stylize/Drop Shadow..."
com/jhlabs/image/ShapeFilter.toString()Ljava/lang/String; -> "Stylize/Shapeburst..."
com/jhlabs/image/SharpenFilter.toString()Ljava/lang/String; -> "Blur/Sharpen"
com/jhlabs/image/ShatterFilter.toString()Ljava/lang/String; -> "Transition/Shatter..."
com/jhlabs/image/ShearFilter.toString()Ljava/lang/String; -> "Distort/Shear..."
com/jhlabs/image/ShineFilter.toString()Ljava/lang/String; -> "Stylize/Shine..."
com/jhlabs/image/SkeletonFilter.toString()Ljava/lang/String; -> "Binary/Skeletonize..."
com/jhlabs/image/SkyFilter.<init>()V -> "SkyColors.png"
com/jhlabs/image/SkyFilter.filter(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; -> " "
com/jhlabs/image/SkyFilter.filter(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; -> " "
com/jhlabs/image/SkyFilter.toString()Ljava/lang/String; -> "Texture/Sky..."
com/jhlabs/image/SmartBlurFilter.toString()Ljava/lang/String; -> "Blur/Smart Blur..."
com/jhlabs/image/SmearFilter.toString()Ljava/lang/String; -> "Effects/Smear..."
com/jhlabs/image/SolarizeFilter.toString()Ljava/lang/String; -> "Colors/Solarize"
com/jhlabs/image/SparkleFilter.toString()Ljava/lang/String; -> "Stylize/Sparkle..."
com/jhlabs/image/SphereFilter.toString()Ljava/lang/String; -> "Distort/Sphere..."
com/jhlabs/image/StampFilter.toString()Ljava/lang/String; -> "Stylize/Stamp..."
com/jhlabs/image/SwimFilter.toString()Ljava/lang/String; -> "Distort/Swim..."
com/jhlabs/image/SwizzleFilter.toString()Ljava/lang/String; -> "Channels/Swizzle..."
com/jhlabs/image/TextureFilter.toString()Ljava/lang/String; -> "Texture/Noise..."
com/jhlabs/image/ThresholdFilter.toString()Ljava/lang/String; -> "Stylize/Threshold..."
com/jhlabs/image/TileImageFilter.toString()Ljava/lang/String; -> "Tile"
com/jhlabs/image/TransitionFilter.<init>(Ljava/awt/image/BufferedImageOp;Ljava/lang/String;FF)V -> "No such property in object: "
com/jhlabs/image/TransitionFilter.prepareFilter(F)V -> "Error setting value for property: "
com/jhlabs/image/TransitionFilter.toString()Ljava/lang/String; -> "Transitions/Transition..."
com/jhlabs/image/TritoneFilter.toString()Ljava/lang/String; -> "Colors/Tritone..."
com/jhlabs/image/TwirlFilter.toString()Ljava/lang/String; -> "Distort/Twirl..."
com/jhlabs/image/UnpremultiplyFilter.toString()Ljava/lang/String; -> "Alpha/Unpremultiply"
com/jhlabs/image/UnsharpFilter.toString()Ljava/lang/String; -> "Blur/Unsharp Mask..."
com/jhlabs/image/VariableBlurFilter.toString()Ljava/lang/String; -> "Blur/Variable Blur..."
com/jhlabs/image/WarpFilter.toString()Ljava/lang/String; -> "Distort/Mesh Warp..."
com/jhlabs/image/WarpGrid.lerp(FLcom/jhlabs/image/WarpGrid;Lcom/jhlabs/image/WarpGrid;)V -> "source and destination are different sizes"
com/jhlabs/image/WarpGrid.lerp(FLcom/jhlabs/image/WarpGrid;Lcom/jhlabs/image/WarpGrid;)V -> "source and intermediate are different sizes"
com/jhlabs/image/WarpGrid.warp([IIILcom/jhlabs/image/WarpGrid;Lcom/jhlabs/image/WarpGrid;[I)V -> "source and destination grids are different sizes"
com/jhlabs/image/WaterFilter.toString()Ljava/lang/String; -> "Distort/Water Ripples..."
com/jhlabs/image/WeaveFilter.toString()Ljava/lang/String; -> "Texture/Weave..."
com/jhlabs/image/WoodFilter.toString()Ljava/lang/String; -> "Texture/Wood..."
com/jhlabs/math/ImageFunction2D.<init>(Ljava/awt/Image;IZ)V -> "interrupted waiting for pixels!"
com/jhlabs/math/ImageFunction2D.<init>(Ljava/awt/Image;IZ)V -> "image fetch aborted"
com/jhlabs/vecmath/AxisAngle4f.toString()Ljava/lang/String; -> "["
com/jhlabs/vecmath/AxisAngle4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/AxisAngle4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/AxisAngle4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/AxisAngle4f.toString()Ljava/lang/String; -> "]"
com/jhlabs/vecmath/Tuple3f.toString()Ljava/lang/String; -> "["
com/jhlabs/vecmath/Tuple3f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/Tuple3f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/Tuple3f.toString()Ljava/lang/String; -> "]"
com/jhlabs/vecmath/Tuple4f.toString()Ljava/lang/String; -> "["
com/jhlabs/vecmath/Tuple4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/Tuple4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/Tuple4f.toString()Ljava/lang/String; -> ", "
com/jhlabs/vecmath/Tuple4f.toString()Ljava/lang/String; -> "]"
com/mojang/a/b/a.i()Ljava/util/function/LongSupplier; -> "Failed to initialize GLFW, errors: "
com/mojang/a/b/a.i()Ljava/util/function/LongSupplier; -> ","
com/mojang/a/b/a.i()Ljava/util/function/LongSupplier; -> "GLFW error collected during initialization: {}"
com/mojang/a/b/a.l()Ljava/lang/String; -> "<unknown>"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "No error"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Enum parameter is invalid for this function"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Parameter is invalid for this function"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Current state is invalid for this function"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Stack overflow"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Stack underflow"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Out of memory"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Operation on incomplete framebuffer"
com/mojang/a/b/a.a(Ljava/util/HashMap;)V -> "Operation on incomplete framebuffer"
com/mojang/a/b/a.a(Ljava/lang/Integer;Ljava/lang/String;)V -> "GLFW error before init: [0x%X]%s"
com/mojang/a/b/a.a(Ljava/util/List;IJ)V -> "GLFW error during init: [0x%X]%s"
com/mojang/a/b/a.a(IZ)V -> "Using framebuffer using "
com/mojang/a/b/a.a(IZ)V -> "%dx %s"
com/mojang/a/b/a.a(IZ)V -> "\s+"
com/mojang/a/b/a.a(IZ)V -> " "
com/mojang/a/b/a.g()Ljava/lang/String; -> "NO CONTEXT"
com/mojang/a/b/a.g()Ljava/lang/String; -> " GL version "
com/mojang/a/b/a.g()Ljava/lang/String; -> ", "
com/mojang/a/b/b$j.<clinit>()V -> "CONSTANT_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "CONSTANT_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "DST_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "DST_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "ONE"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_CONSTANT_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_CONSTANT_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_DST_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_DST_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_SRC_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "ONE_MINUS_SRC_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "SRC_ALPHA"
com/mojang/a/b/b$j.<clinit>()V -> "SRC_COLOR"
com/mojang/a/b/b$j.<clinit>()V -> "ZERO"
com/mojang/a/b/b$k.<clinit>()V -> "LINEAR"
com/mojang/a/b/b$k.<clinit>()V -> "EXP"
com/mojang/a/b/b$k.<clinit>()V -> "EXP2"
com/mojang/a/b/b$m.<clinit>()V -> "BASE"
com/mojang/a/b/b$m.<clinit>()V -> "ARB"
com/mojang/a/b/b$m.<clinit>()V -> "EXT"
com/mojang/a/b/b$n.<clinit>()V -> "AND"
com/mojang/a/b/b$n.<clinit>()V -> "AND_INVERTED"
com/mojang/a/b/b$n.<clinit>()V -> "AND_REVERSE"
com/mojang/a/b/b$n.<clinit>()V -> "CLEAR"
com/mojang/a/b/b$n.<clinit>()V -> "COPY"
com/mojang/a/b/b$n.<clinit>()V -> "COPY_INVERTED"
com/mojang/a/b/b$n.<clinit>()V -> "EQUIV"
com/mojang/a/b/b$n.<clinit>()V -> "INVERT"
com/mojang/a/b/b$n.<clinit>()V -> "NAND"
com/mojang/a/b/b$n.<clinit>()V -> "NOOP"
com/mojang/a/b/b$n.<clinit>()V -> "NOR"
com/mojang/a/b/b$n.<clinit>()V -> "OR"
com/mojang/a/b/b$n.<clinit>()V -> "OR_INVERTED"
com/mojang/a/b/b$n.<clinit>()V -> "OR_REVERSE"
com/mojang/a/b/b$n.<clinit>()V -> "SET"
com/mojang/a/b/b$n.<clinit>()V -> "XOR"
com/mojang/a/b/b$q.<clinit>()V -> "CONSTANT_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "CONSTANT_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "DST_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "DST_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "ONE"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_CONSTANT_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_CONSTANT_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_DST_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_DST_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_SRC_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "ONE_MINUS_SRC_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "SRC_ALPHA"
com/mojang/a/b/b$q.<clinit>()V -> "SRC_ALPHA_SATURATE"
com/mojang/a/b/b$q.<clinit>()V -> "SRC_COLOR"
com/mojang/a/b/b$q.<clinit>()V -> "ZERO"
com/mojang/a/b/b$t.<clinit>()V -> "BASE"
com/mojang/a/b/b$t.<clinit>()V -> "EXT"
com/mojang/a/b/b$t.<clinit>()V -> "NONE"
com/mojang/a/b/b$u.<clinit>()V -> "S"
com/mojang/a/b/b$u.<clinit>()V -> "T"
com/mojang/a/b/b$u.<clinit>()V -> "R"
com/mojang/a/b/b$u.<clinit>()V -> "Q"
com/mojang/a/b/b$y.<clinit>()V -> "INSTANCE"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "OpenGL 1.3, ARB_copy_buffer"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "OpenGL 1.4"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "VboRegions not supported, missing: "
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "OpenGL 3.0"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "ARB_framebuffer_object extension"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "EXT_framebuffer_object extension"
com/mojang/a/b/b.a(Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; -> "Could not initialize framebuffer support."
com/mojang/a/b/b.an()V -> "checkTexture: act: "
com/mojang/a/b/b.an()V -> ", glAct: "
com/mojang/a/b/b.an()V -> ", tex: "
com/mojang/a/b/b.an()V -> ", glTex: "
com/mojang/a/c/b.e(Z)V -> "Could not initialize tick thread"
com/mojang/a/c/b.b(Ljava/util/function/Supplier;)V -> "Rendersystem called from wrong thread"
com/mojang/a/c/b.aW()V -> "Recorded to render queue during initialization"
com/mojang/a/c/b.aH()V -> "Could not initialize render thread"
com/mojang/a/c/b.aU()I -> "Failed to determine maximum texture size by probing, trying GL_MAX_TEXTURE_SIZE = {}"
com/mojang/a/c/b.aP()Ljava/lang/String; -> "LWJGL version %s"
com/mojang/a/d/e$a.<init>(Lcom/mojang/a/d/b;Lcom/mojang/a/d/b;)V -> "Duplicate delegates"
com/mojang/b/a$1.run()V -> "Couldn't connect to realms"
com/mojang/b/a$1.run()V -> "mco.error.invalid.session.title"
com/mojang/b/a$1.run()V -> "mco.error.invalid.session.message"
com/mojang/b/a$2.run()V -> "Realms is available for this user"
com/mojang/b/a$2.run()V -> "Realms is not available for this user"
com/mojang/b/a$2.run()V -> "Couldn't connect to realms"
com/mojang/b/a$3.run()V -> "Switched to stage"
com/mojang/b/a$3.run()V -> "Couldn't connect to Realms: "
com/mojang/b/a$4.run()V -> "Switched to local"
com/mojang/b/a$4.run()V -> "Couldn't connect to Realms: "
com/mojang/b/a$5.run()V -> "Couldn't configure world"
com/mojang/b/a$a.<init>(Lcom/mojang/b/a;)V -> "mco.selectServer.close"
com/mojang/b/a$b.<init>(Lcom/mojang/b/a;)V -> "mco.selectServer.info"
com/mojang/b/a$d.<init>(Lcom/mojang/b/a;)V -> "mco.news"
com/mojang/b/a$e.bq()V -> "mco.invites.nopending"
com/mojang/b/a$e.bq()V -> "mco.invites.pending"
com/mojang/b/a$f.b(Lcom/mojang/b/b/j;Lcom/mojang/a/a/a;IIII)V -> "0"
com/mojang/b/a$g.c(Lcom/mojang/b/a$c;)V -> "mco.trial.message.line1"
com/mojang/b/a$g.c(Lcom/mojang/b/a$c;)V -> "mco.trial.message.line2"
com/mojang/b/a$g.c(Lcom/mojang/b/a$c;)V -> "mco.selectServer.uninitialized"
com/mojang/b/a$g.c(Lcom/mojang/b/a$c;)V -> "mco.gui.button"
com/mojang/b/a$g.c(Lcom/mojang/b/a$c;)V -> "narrator.select"
com/mojang/b/a$h.<clinit>()V -> "NONE"
com/mojang/b/a$h.<clinit>()V -> "EXPIRED"
com/mojang/b/a$h.<clinit>()V -> "LEAVE"
com/mojang/b/a$h.<clinit>()V -> "CONFIGURE"
com/mojang/b/a.bo()V -> "mco.selectServer.leave"
com/mojang/b/a.bo()V -> "mco.selectServer.configure"
com/mojang/b/a.bo()V -> "mco.selectServer.play"
com/mojang/b/a.bo()V -> "mco.selectServer.expiredRenew"
com/mojang/b/a.bo()V -> "mco.selectServer.trial"
com/mojang/b/a.bo()V -> "mco.selectServer.buy"
com/mojang/b/a.bq()V -> "mco.configure.world.invite.narration"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/on_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/off_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/expired_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/expires_soon_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/leave_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/invitation_icons.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/invite_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/world_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/title/realms.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/configure_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/questionmark.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/news_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/popup.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/darken.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/cross_icon.png"
com/mojang/b/a.<clinit>()V -> "realms"
com/mojang/b/a.<clinit>()V -> "textures/gui/realms/trial_icon.png"
com/mojang/b/a.<clinit>()V -> "minecraft"
com/mojang/b/a.<clinit>()V -> "textures/gui/widgets.png"
com/mojang/b/a.<clinit>()V -> "mco.invites.nopending"
com/mojang/b/a.<clinit>()V -> "mco.invites.pending"
com/mojang/b/a.<clinit>()V -> "mco.trial.message.line1"
com/mojang/b/a.<clinit>()V -> "mco.trial.message.line2"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.uninitialized"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expiredList"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expiredRenew"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expiredTrial"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expiredSubscribe"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.minigame"
com/mojang/b/a.<clinit>()V -> " "
com/mojang/b/a.<clinit>()V -> "mco.selectServer.popup"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expired"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expires.soon"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.expires.day"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.open"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.closed"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.leave"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.configure"
com/mojang/b/a.<clinit>()V -> "mco.selectServer.info"
com/mojang/b/a.<clinit>()V -> "mco.news"
com/mojang/b/a.b(Lcom/mojang/a/a/a;II)V -> "Unable to remove widget: "
com/mojang/b/a.b(Lcom/mojang/a/a/a;)V -> "STAGE!"
com/mojang/b/a.h(Lnet/minecraft/client/c/j/a/b;)V -> "https://aka.ms/BuyJavaRealms"
com/mojang/b/a.a(Lcom/mojang/a/a/a;)V -> "LOCAL!"
com/mojang/b/a.a(Ljava/lang/String;)Z -> ".png"
com/mojang/b/a.a(Lnet/minecraft/z/ak;)Z -> "realms"
com/mojang/b/a.a(Lcom/mojang/a/a/a;IIIII)V -> "mco.selectServer.expires.days"
com/mojang/b/a.a(Lnet/minecraft/s/o;)V -> "textures/gui/images"
com/mojang/b/a.g(Z)V -> "Realms-leave-server"
com/mojang/b/a.g(Lnet/minecraft/client/c/j/a/b;)V -> "https://aka.ms/startjavarealmstrial"
com/mojang/b/a.g(Lcom/mojang/b/b/j;)V -> "mco.configure.world.leave.question.line1"
com/mojang/b/a.g(Lcom/mojang/b/b/j;)V -> "mco.configure.world.leave.question.line2"
com/mojang/b/a.bv()V -> "MCO Compatability Checker #1"
com/mojang/b/a.bu()V -> "https://aka.ms/ExtendJavaRealms?subscriptionId="
com/mojang/b/a.bu()V -> "&profileId="
com/mojang/b/a.bu()V -> "&ref="
com/mojang/b/a.bu()V -> "expiredTrial"
com/mojang/b/a.bu()V -> "expiredRealm"
com/mojang/b/a.bL()V -> "Could not send ping result to Realms: "
com/mojang/b/a.bz()V -> "MCO Local Availability Checker #1"
com/mojang/b/a.by()V -> "MCO Stage Availability Checker #1"
com/mojang/b/a.bx()V -> "MCO Compatability Checker #1"
com/mojang/b/a/a$b.a(Ljava/awt/event/ActionEvent;)V -> "Error extracting archive"
com/mojang/b/a/a$c.a(Ljava/awt/event/ActionEvent;)V -> "Resourcepack had wrong hash (expected "
com/mojang/b/a/a$c.a(Ljava/awt/event/ActionEvent;)V -> ", found "
com/mojang/b/a/a$c.a(Ljava/awt/event/ActionEvent;)V -> "). Deleting it."
com/mojang/b/a/a$c.a(Ljava/awt/event/ActionEvent;)V -> "Error copying resourcepack file"
com/mojang/b/a/a.<clinit>()V -> "CON"
com/mojang/b/a/a.<clinit>()V -> "COM"
com/mojang/b/a/a.<clinit>()V -> "PRN"
com/mojang/b/a/a.<clinit>()V -> "AUX"
com/mojang/b/a/a.<clinit>()V -> "CLOCK$"
com/mojang/b/a/a.<clinit>()V -> "NUL"
com/mojang/b/a/a.<clinit>()V -> "COM1"
com/mojang/b/a/a.<clinit>()V -> "COM2"
com/mojang/b/a/a.<clinit>()V -> "COM3"
com/mojang/b/a/a.<clinit>()V -> "COM4"
com/mojang/b/a/a.<clinit>()V -> "COM5"
com/mojang/b/a/a.<clinit>()V -> "COM6"
com/mojang/b/a/a.<clinit>()V -> "COM7"
com/mojang/b/a/a.<clinit>()V -> "COM8"
com/mojang/b/a/a.<clinit>()V -> "COM9"
com/mojang/b/a/a.<clinit>()V -> "LPT1"
com/mojang/b/a/a.<clinit>()V -> "LPT2"
com/mojang/b/a/a.<clinit>()V -> "LPT3"
com/mojang/b/a/a.<clinit>()V -> "LPT4"
com/mojang/b/a/a.<clinit>()V -> "LPT5"
com/mojang/b/a/a.<clinit>()V -> "LPT6"
com/mojang/b/a/a.<clinit>()V -> "LPT7"
com/mojang/b/a/a.<clinit>()V -> "LPT8"
com/mojang/b/a/a.<clinit>()V -> "LPT9"
com/mojang/b/a/a.b(Ljava/lang/String;)J -> "Content-Length"
com/mojang/b/a/a.b(Ljava/lang/String;)J -> "Could not close http client"
com/mojang/b/a/a.b(Ljava/lang/String;)J -> "Unable to get content length for download"
com/mojang/b/a/a.b(Ljava/lang/String;)J -> "Could not close http client"
com/mojang/b/a/a.b(Ljava/lang/String;)J -> "Could not close http client"
com/mojang/b/a/a.c(Ljava/lang/String;)Ljava/lang/String; -> "[\./"]"
com/mojang/b/a/a.c(Ljava/lang/String;)Ljava/lang/String; -> "_"
com/mojang/b/a/a.c(Ljava/lang/String;)Ljava/lang/String; -> "_"
com/mojang/b/a/a.c(Ljava/lang/String;)Ljava/lang/String; -> "_"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "backup"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> ".tar.gz"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Content-Length"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "resources"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> ".tar.gz"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Content-Length"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Caught exception while downloading: "
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Failed to close Realms download client"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Caught exception while downloading: "
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "resources"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> ".tar.gz"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Content-Length"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Caught exception while downloading: "
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Failed to close Realms download client"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "resources"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> ".tar.gz"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Content-Length"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Caught exception while downloading: "
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Failed to close Realms download client"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "resources"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> ".tar.gz"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Content-Length"
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Caught exception while downloading: "
com/mojang/b/a/a.a(Lcom/mojang/b/b/v;Lcom/mojang/b/d/a/i$a;Ljava/lang/String;Lnet/minecraft/B/k/p;)V -> "Failed to close Realms download client"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> ".*-([0-9]+)$"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Realm"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Error getting level list"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "-"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "-"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "saves"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "world"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Error extracting world"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Failed to rename unpacked realms level {}"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "resources.zip"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Failed to rename unpacked realms level {}"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "resources.zip"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "Failed to rename unpacked realms level {}"
com/mojang/b/a/a.a(Ljava/lang/String;Ljava/io/File;Lnet/minecraft/B/k/p;)V -> "resources.zip"
com/mojang/b/a/a.a(Ljava/io/File;)V -> "Data"
com/mojang/b/a/a.a(Ljava/io/File;)V -> "Player"
com/mojang/b/a/b$a.writeTo(Ljava/io/OutputStream;)V -> "Output stream"
com/mojang/b/a/b.a(Lorg/apache/http/HttpResponse;Lcom/mojang/b/d/a/A$a;)V -> "Realms server returned 401: "
com/mojang/b/a/b.a(Lorg/apache/http/HttpResponse;Lcom/mojang/b/d/a/A$a;)V -> "WWW-Authenticate"
com/mojang/b/a/b.a(Lorg/apache/http/HttpResponse;Lcom/mojang/b/d/a/A$a;)V -> "UTF-8"
com/mojang/b/a/b.a(Lorg/apache/http/HttpResponse;Lcom/mojang/b/d/a/A$a;)V -> "errorMsg"
com/mojang/b/a/b.a(Lorg/apache/http/HttpResponse;)J -> "Retry-After"
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> "Cookie"
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> "sid="
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> ";token="
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> ";user="
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> ";version="
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;)V -> "application/octet-stream"
com/mojang/b/a/b.a(Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V -> "Failed to close Realms upload client"
com/mojang/b/a/b.Q(I)Lcom/mojang/b/d/a/A; -> "/upload/"
com/mojang/b/a/b.Q(I)Lcom/mojang/b/d/a/A; -> "/"
com/mojang/b/a/b.Q(I)Lcom/mojang/b/d/a/A; -> "Caught exception while uploading: "
com/mojang/b/a/c$a.<clinit>()V -> "US_EAST_1"
com/mojang/b/a/c$a.<clinit>()V -> "us-east-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.us-east-1.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "US_WEST_2"
com/mojang/b/a/c$a.<clinit>()V -> "us-west-2"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.us-west-2.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "US_WEST_1"
com/mojang/b/a/c$a.<clinit>()V -> "us-west-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.us-west-1.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "EU_WEST_1"
com/mojang/b/a/c$a.<clinit>()V -> "eu-west-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.eu-west-1.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "AP_SOUTHEAST_1"
com/mojang/b/a/c$a.<clinit>()V -> "ap-southeast-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.ap-southeast-1.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "AP_SOUTHEAST_2"
com/mojang/b/a/c$a.<clinit>()V -> "ap-southeast-2"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.ap-southeast-2.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "AP_NORTHEAST_1"
com/mojang/b/a/c$a.<clinit>()V -> "ap-northeast-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.ap-northeast-1.amazonaws.com"
com/mojang/b/a/c$a.<clinit>()V -> "SA_EAST_1"
com/mojang/b/a/c$a.<clinit>()V -> "sa-east-1"
com/mojang/b/a/c$a.<clinit>()V -> "ec2.sa-east-1.amazonaws.com"
com/mojang/b/a/d$a.<clinit>()V -> "COMPATIBLE"
com/mojang/b/a/d$a.<clinit>()V -> "OUTDATED"
com/mojang/b/a/d$a.<clinit>()V -> "OTHER"
com/mojang/b/a/d$b.<clinit>()V -> "PRODUCTION"
com/mojang/b/a/d$b.<clinit>()V -> "pc.realms.minecraft.net"
com/mojang/b/a/d$b.<clinit>()V -> "https"
com/mojang/b/a/d$b.<clinit>()V -> "STAGE"
com/mojang/b/a/d$b.<clinit>()V -> "pc-stage.realms.minecraft.net"
com/mojang/b/a/d$b.<clinit>()V -> "https"
com/mojang/b/a/d$b.<clinit>()V -> "LOCAL"
com/mojang/b/a/d$b.<clinit>()V -> "localhost:8080"
com/mojang/b/a/d$b.<clinit>()V -> "http"
com/mojang/b/a/d.e(Ljava/lang/String;)V -> "invites"
com/mojang/b/a/d.e(Ljava/lang/String;)V -> "/accept/$INVITATION_ID"
com/mojang/b/a/d.e(Ljava/lang/String;)V -> "$INVITATION_ID"
com/mojang/b/a/d.e(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "/$WORLD_ID/$PROFILE_UUID"
com/mojang/b/a/d.e(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "$WORLD_ID"
com/mojang/b/a/d.e(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "$PROFILE_UUID"
com/mojang/b/a/d.e(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "ops"
com/mojang/b/a/d.e(J)V -> "invites"
com/mojang/b/a/d.e(J)V -> "/$WORLD_ID"
com/mojang/b/a/d.e(J)V -> "$WORLD_ID"
com/mojang/b/a/d.i(J)Lcom/mojang/b/b/s; -> "subscriptions"
com/mojang/b/a/d.i(J)Lcom/mojang/b/b/s; -> "/$WORLD_ID"
com/mojang/b/a/d.i(J)Lcom/mojang/b/b/s; -> "$WORLD_ID"
com/mojang/b/a/d.b(JLjava/lang/String;Ljava/lang/String;)V -> "worlds"
com/mojang/b/a/d.b(JLjava/lang/String;Ljava/lang/String;)V -> "/$WORLD_ID"
com/mojang/b/a/d.b(JLjava/lang/String;Ljava/lang/String;)V -> "$WORLD_ID"
com/mojang/b/a/d.b(JLjava/lang/String;)Lcom/mojang/b/b/j; -> "invites"
com/mojang/b/a/d.b(JLjava/lang/String;)Lcom/mojang/b/b/j; -> "/$WORLD_ID"
com/mojang/b/a/d.b(JLjava/lang/String;)Lcom/mojang/b/b/j; -> "$WORLD_ID"
com/mojang/b/a/d.ca()Lcom/mojang/b/a/d; -> "realms.environment"
com/mojang/b/a/d.ca()Lcom/mojang/b/a/d; -> "realms.environment"
com/mojang/b/a/d.ca()Lcom/mojang/b/a/d; -> "LOCAL"
com/mojang/b/a/d.ca()Lcom/mojang/b/a/d; -> "STAGE"
com/mojang/b/a/d.ce()Lcom/mojang/b/b/l; -> "worlds"
com/mojang/b/a/d.c(JI)Z -> "worlds"
com/mojang/b/a/d.c(JI)Z -> "/$WORLD_ID/slot/$SLOT_ID"
com/mojang/b/a/d.c(JI)Z -> "$WORLD_ID"
com/mojang/b/a/d.c(JI)Z -> "$SLOT_ID"
com/mojang/b/a/d.c(J)Lcom/mojang/b/b/j; -> "worlds"
com/mojang/b/a/d.c(J)Lcom/mojang/b/b/j; -> "/$ID"
com/mojang/b/a/d.c(J)Lcom/mojang/b/b/j; -> "$ID"
com/mojang/b/a/d.c(JLjava/lang/String;)V -> "worlds"
com/mojang/b/a/d.c(JLjava/lang/String;)V -> "/$WORLD_ID/backups"
com/mojang/b/a/d.c(JLjava/lang/String;)V -> "$WORLD_ID"
com/mojang/b/a/d.c(JLjava/lang/String;)V -> "backupId="
com/mojang/b/a/d.h(JLjava/lang/String;)Lcom/mojang/b/b/t; -> "worlds"
com/mojang/b/a/d.h(JLjava/lang/String;)Lcom/mojang/b/b/t; -> "/$WORLD_ID/backups/upload"
com/mojang/b/a/d.h(JLjava/lang/String;)Lcom/mojang/b/b/t; -> "$WORLD_ID"
com/mojang/b/a/d.h(J)Ljava/lang/Boolean; -> "worlds"
com/mojang/b/a/d.h(J)Ljava/lang/Boolean; -> "/$WORLD_ID/close"
com/mojang/b/a/d.h(J)Ljava/lang/Boolean; -> "$WORLD_ID"
com/mojang/b/a/d.ch()Ljava/lang/Boolean; -> "mco/stageAvailable"
com/mojang/b/a/d.f(Ljava/lang/String;)V -> "invites"
com/mojang/b/a/d.f(Ljava/lang/String;)V -> "/reject/$INVITATION_ID"
com/mojang/b/a/d.f(Ljava/lang/String;)V -> "$INVITATION_ID"
com/mojang/b/a/d.f(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "/$WORLD_ID/$PROFILE_UUID"
com/mojang/b/a/d.f(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "$WORLD_ID"
com/mojang/b/a/d.f(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "$PROFILE_UUID"
com/mojang/b/a/d.f(JLjava/lang/String;)Lcom/mojang/b/b/c; -> "ops"
com/mojang/b/a/d.f(J)Lcom/mojang/b/b/b; -> "worlds"
com/mojang/b/a/d.f(J)Lcom/mojang/b/b/b; -> "/$WORLD_ID/backups"
com/mojang/b/a/d.f(J)Lcom/mojang/b/b/b; -> "$WORLD_ID"
com/mojang/b/a/d.d(JI)Lcom/mojang/b/b/v; -> "worlds"
com/mojang/b/a/d.d(JI)Lcom/mojang/b/b/v; -> "/$WORLD_ID/slot/$SLOT_ID/download"
com/mojang/b/a/d.d(JI)Lcom/mojang/b/b/v; -> "$WORLD_ID"
com/mojang/b/a/d.d(JI)Lcom/mojang/b/b/v; -> "$SLOT_ID"
com/mojang/b/a/d.d(JLjava/lang/String;)Ljava/lang/Boolean; -> "/minigames/$MINIGAME_ID/$WORLD_ID"
com/mojang/b/a/d.d(JLjava/lang/String;)Ljava/lang/Boolean; -> "$MINIGAME_ID"
com/mojang/b/a/d.d(JLjava/lang/String;)Ljava/lang/Boolean; -> "$WORLD_ID"
com/mojang/b/a/d.d(JLjava/lang/String;)Ljava/lang/Boolean; -> "worlds"
com/mojang/b/a/d.d(J)Lcom/mojang/b/b/k; -> "worlds"
com/mojang/b/a/d.d(J)Lcom/mojang/b/b/k; -> "/v1/$ID/join/pc"
com/mojang/b/a/d.d(J)Lcom/mojang/b/b/k; -> "$ID"
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "sid"
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "user"
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "version"
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "WWW-Authenticate"
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "Could not authorize you against Realms server: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "Realms http code: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> " -  error code: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> " -  message: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> " - raw body: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "Realms error code: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> " message: "
com/mojang/b/a/d.a(Lcom/mojang/b/a/g;)Ljava/lang/String; -> "Could not connect to Realms: "
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/String;)V -> "worlds"
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/String;)V -> "/$WORLD_ID/initialize"
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/String;)V -> "$WORLD_ID"
com/mojang/b/a/d.a(Lcom/mojang/b/b/f;)V -> "regions/ping/stat"
com/mojang/b/a/d.a(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; -> "/"
com/mojang/b/a/d.a(JLjava/lang/String;)V -> "invites"
com/mojang/b/a/d.a(JLjava/lang/String;)V -> "/$WORLD_ID/invite/$UUID"
com/mojang/b/a/d.a(JLjava/lang/String;)V -> "$WORLD_ID"
com/mojang/b/a/d.a(JLjava/lang/String;)V -> "$UUID"
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; -> "worlds"
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; -> "/$WORLD_ID/reset"
com/mojang/b/a/d.a(JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; -> "$WORLD_ID"
com/mojang/b/a/d.a(JILcom/mojang/b/b/p;)V -> "worlds"
com/mojang/b/a/d.a(JILcom/mojang/b/b/p;)V -> "/$WORLD_ID/slot/$SLOT_ID"
com/mojang/b/a/d.a(JILcom/mojang/b/b/p;)V -> "$WORLD_ID"
com/mojang/b/a/d.a(JILcom/mojang/b/b/p;)V -> "$SLOT_ID"
com/mojang/b/a/d.a(IILcom/mojang/b/b/j$b;)Lcom/mojang/b/b/x; -> "worlds"
com/mojang/b/a/d.a(IILcom/mojang/b/b/j$b;)Lcom/mojang/b/b/x; -> "/templates/$WORLD_TYPE"
com/mojang/b/a/d.a(IILcom/mojang/b/b/j$b;)Lcom/mojang/b/b/x; -> "$WORLD_TYPE"
com/mojang/b/a/d.a(IILcom/mojang/b/b/j$b;)Lcom/mojang/b/b/x; -> "page=%d&pageSize=%d"
com/mojang/b/a/d.cl()V -> "mco/tos/agreed"
com/mojang/b/a/d.cn()Ljava/lang/Boolean; -> "trial"
com/mojang/b/a/d.g(JLjava/lang/String;)Ljava/lang/Boolean; -> "worlds"
com/mojang/b/a/d.g(JLjava/lang/String;)Ljava/lang/Boolean; -> "/$WORLD_ID/reset"
com/mojang/b/a/d.g(JLjava/lang/String;)Ljava/lang/Boolean; -> "$WORLD_ID"
com/mojang/b/a/d.g(J)Ljava/lang/Boolean; -> "worlds"
com/mojang/b/a/d.g(J)Ljava/lang/Boolean; -> "/$WORLD_ID/open"
com/mojang/b/a/d.g(J)Ljava/lang/Boolean; -> "$WORLD_ID"
com/mojang/b/a/d.j(J)V -> "worlds"
com/mojang/b/a/d.j(J)V -> "/$WORLD_ID"
com/mojang/b/a/d.j(J)V -> "$WORLD_ID"
com/mojang/b/a/d.cf()Lcom/mojang/b/b/o; -> "activities/liveplayerlist"
com/mojang/b/a/d.ck()Lcom/mojang/b/b/e; -> "invites/pending"
com/mojang/b/a/d.ci()Lcom/mojang/b/a/d$a; -> "mco/client/compatible"
com/mojang/b/a/d.ci()Lcom/mojang/b/a/d$a; -> "Could not check compatible version, got response: "
com/mojang/b/a/d.cm()Lcom/mojang/b/b/i; -> "mco/v1/news"
com/mojang/b/a/d.cg()Ljava/lang/Boolean; -> "mco/available"
com/mojang/b/a/f.h(Ljava/lang/String;)Lcom/mojang/b/a/f; -> "errorMsg"
com/mojang/b/a/f.h(Ljava/lang/String;)Lcom/mojang/b/a/f; -> "errorCode"
com/mojang/b/a/f.h(Ljava/lang/String;)Lcom/mojang/b/a/f; -> "Could not parse RealmsError: "
com/mojang/b/a/f.h(Ljava/lang/String;)Lcom/mojang/b/a/f; -> "The error was: "
com/mojang/b/a/f.h(Ljava/lang/String;)Lcom/mojang/b/a/f; -> "Failed to parse response from server"
com/mojang/b/a/g$a.cx()Lcom/mojang/b/a/g$a; -> "DELETE"
com/mojang/b/a/g$b.cy()Lcom/mojang/b/a/g$b; -> "GET"
com/mojang/b/a/g$c.cz()Lcom/mojang/b/a/g$c; -> "Content-Type"
com/mojang/b/a/g$c.cz()Lcom/mojang/b/a/g$c; -> "application/json; charset=utf-8"
com/mojang/b/a/g$c.cz()Lcom/mojang/b/a/g$c; -> "POST"
com/mojang/b/a/g$c.cz()Lcom/mojang/b/a/g$c; -> "UTF-8"
com/mojang/b/a/g$d.cA()Lcom/mojang/b/a/g$d; -> "Content-Type"
com/mojang/b/a/g$d.cA()Lcom/mojang/b/a/g$d; -> "application/json; charset=utf-8"
com/mojang/b/a/g$d.cA()Lcom/mojang/b/a/g$d; -> "PUT"
com/mojang/b/a/g$d.cA()Lcom/mojang/b/a/g$d; -> "UTF-8"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> "Cookie"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> "Cookie"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> "="
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> "Cookie"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> ";"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V -> "="
com/mojang/b/a/g.a(Ljava/io/InputStream;)Ljava/lang/String; -> "UTF-8"
com/mojang/b/a/g.a(Ljava/net/HttpURLConnection;)I -> "Retry-After"
com/mojang/b/b/a.l(Ljava/lang/String;)Ljava/lang/String; -> "_"
com/mojang/b/b/a.l(Ljava/lang/String;)Ljava/lang/String; -> "of"
com/mojang/b/b/a.l(Ljava/lang/String;)Ljava/lang/String; -> " "
com/mojang/b/b/a.l(Ljava/lang/String;)Ljava/lang/String; -> " "
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "backupId"
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "lastModifiedDate"
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "size"
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "metadata"
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "metadata"
com/mojang/b/b/a.a(Lcom/google/gson/JsonElement;)Lcom/mojang/b/b/a; -> "Could not parse Backup: "
com/mojang/b/b/b.m(Ljava/lang/String;)Lcom/mojang/b/b/b; -> "backups"
com/mojang/b/b/b.m(Ljava/lang/String;)Lcom/mojang/b/b/b; -> "Could not parse BackupList: "
com/mojang/b/b/c.n(Ljava/lang/String;)Lcom/mojang/b/b/c; -> "ops"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "invitationId"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "worldName"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "worldOwnerName"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "worldOwnerUuid"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "date"
com/mojang/b/b/d.a(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/d; -> "Could not parse PendingInvite: "
com/mojang/b/b/e.o(Ljava/lang/String;)Lcom/mojang/b/b/e; -> "invites"
com/mojang/b/b/e.o(Ljava/lang/String;)Lcom/mojang/b/b/e; -> "invites"
com/mojang/b/b/e.o(Ljava/lang/String;)Lcom/mojang/b/b/e; -> "Could not parse PendingInvitesList: "
com/mojang/b/b/i.r(Ljava/lang/String;)Lcom/mojang/b/b/i; -> "newsLink"
com/mojang/b/b/i.r(Ljava/lang/String;)Lcom/mojang/b/b/i; -> "Could not parse RealmsNews: "
com/mojang/b/b/j$b.<clinit>()V -> "NORMAL"
com/mojang/b/b/j$b.<clinit>()V -> "MINIGAME"
com/mojang/b/b/j$b.<clinit>()V -> "ADVENTUREMAP"
com/mojang/b/b/j$b.<clinit>()V -> "EXPERIENCE"
com/mojang/b/b/j$b.<clinit>()V -> "INSPIRATION"
com/mojang/b/b/j$c.<clinit>()V -> "CLOSED"
com/mojang/b/b/j$c.<clinit>()V -> "OPEN"
com/mojang/b/b/j$c.<clinit>()V -> "UNINITIALIZED"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "id"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "remoteSubscriptionId"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "name"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "motd"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "state"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "owner"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "players"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "players"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "players"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "daysLeft"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "expired"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "expiredTrial"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "worldType"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "ownerUUID"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "slots"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "slots"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "slots"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "minigameName"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "activeSlot"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "minigameId"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "minigameImage"
com/mojang/b/b/j.b(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/j; -> "Could not parse McoServer: "
com/mojang/b/b/j.b(Lcom/google/gson/JsonArray;)Ljava/util/Map; -> "options"
com/mojang/b/b/j.b(Lcom/google/gson/JsonArray;)Ljava/util/Map; -> "slotId"
com/mojang/b/b/j.a(Lcom/mojang/b/b/n;)V -> "Could not get name for "
com/mojang/b/b/j.a(Lcom/google/gson/JsonArray;)Ljava/util/List; -> "name"
com/mojang/b/b/j.a(Lcom/google/gson/JsonArray;)Ljava/util/List; -> "uuid"
com/mojang/b/b/j.a(Lcom/google/gson/JsonArray;)Ljava/util/List; -> "operator"
com/mojang/b/b/j.a(Lcom/google/gson/JsonArray;)Ljava/util/List; -> "accepted"
com/mojang/b/b/j.a(Lcom/google/gson/JsonArray;)Ljava/util/List; -> "online"
com/mojang/b/b/j.u(Ljava/lang/String;)Lcom/mojang/b/b/j; -> "Could not parse McoServer: "
com/mojang/b/b/j.R(I)Ljava/lang/String; -> " ("
com/mojang/b/b/j.R(I)Ljava/lang/String; -> ")"
com/mojang/b/b/k.y(Ljava/lang/String;)Lcom/mojang/b/b/k; -> "address"
com/mojang/b/b/k.y(Ljava/lang/String;)Lcom/mojang/b/b/k; -> "resourcePackUrl"
com/mojang/b/b/k.y(Ljava/lang/String;)Lcom/mojang/b/b/k; -> "resourcePackHash"
com/mojang/b/b/k.y(Ljava/lang/String;)Lcom/mojang/b/b/k; -> "Could not parse RealmsServerAddress: "
com/mojang/b/b/l.z(Ljava/lang/String;)Lcom/mojang/b/b/l; -> "servers"
com/mojang/b/b/l.z(Ljava/lang/String;)Lcom/mojang/b/b/l; -> "servers"
com/mojang/b/b/l.z(Ljava/lang/String;)Lcom/mojang/b/b/l; -> "Could not parse McoServerList: "
com/mojang/b/b/m.<init>()V -> "0"
com/mojang/b/b/n.c(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/n; -> "serverId"
com/mojang/b/b/n.c(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/n; -> "playerList"
com/mojang/b/b/n.c(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/n; -> "Could not parse RealmsServerPlayerList: "
com/mojang/b/b/o.A(Ljava/lang/String;)Lcom/mojang/b/b/o; -> "lists"
com/mojang/b/b/o.A(Ljava/lang/String;)Lcom/mojang/b/b/o; -> "lists"
com/mojang/b/b/o.A(Ljava/lang/String;)Lcom/mojang/b/b/o; -> "Could not parse RealmsServerPlayerLists: "
com/mojang/b/b/p.S(I)Ljava/lang/String; -> "mco.configure.world.slot.empty"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "pvp"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "spawnAnimals"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "spawnMonsters"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "spawnNPCs"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "spawnProtection"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "commandBlocks"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "difficulty"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "gameMode"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "forceGameMode"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "slotName"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "worldTemplateId"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "worldTemplateImage"
com/mojang/b/b/p.d(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/p; -> "adventureMap"
com/mojang/b/b/p.T(I)Ljava/lang/String; -> "mco.configure.world.slot"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "pvp"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "spawnAnimals"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "spawnMonsters"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "spawnNPCs"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "spawnProtection"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "commandBlocks"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "difficulty"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "gameMode"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "forceGameMode"
com/mojang/b/b/p.cO()Ljava/lang/String; -> "slotName"
com/mojang/b/b/r.toString()Ljava/lang/String; -> "%s --> %.2f ms"
com/mojang/b/b/s$a.<clinit>()V -> "NORMAL"
com/mojang/b/b/s$a.<clinit>()V -> "RECURRING"
com/mojang/b/b/s.B(Ljava/lang/String;)Lcom/mojang/b/b/s; -> "startDate"
com/mojang/b/b/s.B(Ljava/lang/String;)Lcom/mojang/b/b/s; -> "daysLeft"
com/mojang/b/b/s.B(Ljava/lang/String;)Lcom/mojang/b/b/s; -> "subscriptionType"
com/mojang/b/b/s.B(Ljava/lang/String;)Lcom/mojang/b/b/s; -> "Could not parse Subscription: "
com/mojang/b/b/t.<clinit>()V -> "^[a-zA-Z][-a-zA-Z0-9+.]+:"
com/mojang/b/b/t.D(Ljava/lang/String;)Lcom/mojang/b/b/t; -> "uploadEndpoint"
com/mojang/b/b/t.D(Ljava/lang/String;)Lcom/mojang/b/b/t; -> "port"
com/mojang/b/b/t.D(Ljava/lang/String;)Lcom/mojang/b/b/t; -> "worldClosed"
com/mojang/b/b/t.D(Ljava/lang/String;)Lcom/mojang/b/b/t; -> "token"
com/mojang/b/b/t.D(Ljava/lang/String;)Lcom/mojang/b/b/t; -> "Could not parse UploadInfo: "
com/mojang/b/b/t.a(Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; -> "http://"
com/mojang/b/b/t.a(Ljava/lang/String;I)Ljava/net/URI; -> "Failed to parse URI {}"
com/mojang/b/b/t.E(Ljava/lang/String;)Ljava/lang/String; -> "token"
com/mojang/b/b/u.toString()Ljava/lang/String; -> "{"
com/mojang/b/b/u.toString()Ljava/lang/String; -> "="
com/mojang/b/b/u.toString()Ljava/lang/String; -> " "
com/mojang/b/b/v.F(Ljava/lang/String;)Lcom/mojang/b/b/v; -> "downloadLink"
com/mojang/b/b/v.F(Ljava/lang/String;)Lcom/mojang/b/b/v; -> "resourcePackUrl"
com/mojang/b/b/v.F(Ljava/lang/String;)Lcom/mojang/b/b/v; -> "resourcePackHash"
com/mojang/b/b/v.F(Ljava/lang/String;)Lcom/mojang/b/b/v; -> "Could not parse WorldDownload: "
com/mojang/b/b/w$a.<clinit>()V -> "WORLD_TEMPLATE"
com/mojang/b/b/w$a.<clinit>()V -> "MINIGAME"
com/mojang/b/b/w$a.<clinit>()V -> "ADVENTUREMAP"
com/mojang/b/b/w$a.<clinit>()V -> "EXPERIENCE"
com/mojang/b/b/w$a.<clinit>()V -> "INSPIRATION"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "id"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "name"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "version"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "author"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "link"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "image"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "trailer"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "recommendedPlayers"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "type"
com/mojang/b/b/w.e(Lcom/google/gson/JsonObject;)Lcom/mojang/b/b/w; -> "Could not parse WorldTemplate: "
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "templates"
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "templates"
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "page"
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "size"
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "total"
com/mojang/b/b/x.G(Ljava/lang/String;)Lcom/mojang/b/b/x; -> "Could not parse WorldTemplatePaginatedList: "
com/mojang/b/c/a.uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V -> "Caught previously unhandled exception :"
com/mojang/b/c/c.toString()Ljava/lang/String; -> "Realms ("
com/mojang/b/c/c.toString()Ljava/lang/String; -> ") "
com/mojang/b/c/c.toString()Ljava/lang/String; -> "mco.errorMessage."
com/mojang/b/c/c.toString()Ljava/lang/String; -> " - "
com/mojang/b/c/d.<init>(II)V -> "Retry operation"
com/mojang/b/d/a/b.I(Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "UNKNOWN"
com/mojang/b/d/a/b.e(Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "game"
com/mojang/b/d/a/b.e(Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "mode"
com/mojang/b/d/a/b.e(Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "game"
com/mojang/b/d/a/b.e(Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "difficulty"
com/mojang/b/d/a/b.a(Lcom/mojang/a/a/a;IIF)V -> "Changes from last backup"
com/mojang/b/d/a/b.H(Ljava/lang/String;)Lnet/minecraft/z/f/f; -> "UNKNOWN"
com/mojang/b/d/a/c$1.run()V -> "Couldn't request backups"
com/mojang/b/d/a/c$a.P(I)V -> "narrator.select"
com/mojang/b/d/a/c$b.a(Lcom/mojang/a/a/a;Lcom/mojang/b/b/a;IIII)V -> "Backup ("
com/mojang/b/d/a/c$b.a(Lcom/mojang/a/a/a;Lcom/mojang/b/b/a;IIII)V -> ")"
com/mojang/b/d/a/c.<clinit>()V -> "realms"
com/mojang/b/d/a/c.<clinit>()V -> "textures/gui/realms/plus_icon.png"
com/mojang/b/d/a/c.<clinit>()V -> "realms"
com/mojang/b/d/a/c.<clinit>()V -> "textures/gui/realms/restore_icon.png"
com/mojang/b/d/a/c.<clinit>()V -> "mco.backup.button.restore"
com/mojang/b/d/a/c.<clinit>()V -> "mco.backup.changes.tooltip"
com/mojang/b/d/a/c.<clinit>()V -> "mco.configure.world.backup"
com/mojang/b/d/a/c.<clinit>()V -> "mco.backup.nobackups"
com/mojang/b/d/a/c.a(Lcom/mojang/b/b/a;Ljava/lang/String;)V -> "Uploaded"
com/mojang/b/d/a/c.dv()V -> "Uploaded"
com/mojang/b/d/a/c.W(I)V -> "mco.configure.world.restore.question.line1"
com/mojang/b/d/a/c.W(I)V -> "mco.configure.world.restore.question.line2"
com/mojang/b/d/a/c.dz()V -> "mco.configure.world.restore.download.question.line1"
com/mojang/b/d/a/c.dz()V -> "mco.configure.world.restore.download.question.line2"
com/mojang/b/d/a/c.dA()V -> " ("
com/mojang/b/d/a/c.dA()V -> ")"
com/mojang/b/d/a/c.bm()V -> "Realms-fetch-backups"
com/mojang/b/d/a/c.bm()V -> "mco.backup.button.download"
com/mojang/b/d/a/c.bm()V -> "mco.backup.button.restore"
com/mojang/b/d/a/c.bm()V -> "mco.backup.changes.tooltip"
com/mojang/b/d/a/c.bm()V -> "mco.configure.world.backup"
com/mojang/b/d/a/d.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/a;JZ)V -> "mco.brokenworld.message.line1"
com/mojang/b/d/a/d.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/a;JZ)V -> "mco.brokenworld.message.line2"
com/mojang/b/d/a/d.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/a;JZ)V -> "mco.brokenworld.minigame.title"
com/mojang/b/d/a/d.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/a;JZ)V -> "mco.brokenworld.title"
com/mojang/b/d/a/d.Z(I)V -> "Couldn't download world data"
com/mojang/b/d/a/d.b(ILnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.restore.download.question.line1"
com/mojang/b/d/a/d.b(ILnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.restore.download.question.line2"
com/mojang/b/d/a/d.l(J)V -> "Couldn't get own world"
com/mojang/b/d/a/d.a(ILnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.switch.slot"
com/mojang/b/d/a/d.a(ILnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.switch.slot.subtitle"
com/mojang/b/d/a/d.a(ILnet/minecraft/client/c/j/a/b;)V -> "mco.create.world.reset.title"
com/mojang/b/d/a/d.dD()V -> "mco.brokenworld.play"
com/mojang/b/d/a/d.dD()V -> "mco.brokenworld.download"
com/mojang/b/d/a/d.dD()V -> "mco.brokenworld.downloaded"
com/mojang/b/d/a/d.dD()V -> "mco.brokenworld.reset"
com/mojang/b/d/a/d.bm()V -> " "
com/mojang/b/d/a/d.dH()V -> "Couldn't get own world"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.outdated.title"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.outdated.msg.line1"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.outdated.msg.line2"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.incompatible.title"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.incompatible.msg.line1"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.incompatible.msg.line2"
com/mojang/b/d/a/e.<clinit>()V -> "mco.client.incompatible.msg.line3"
com/mojang/b/d/a/f.<clinit>()V -> "realms"
com/mojang/b/d/a/f.<clinit>()V -> "textures/gui/realms/on_icon.png"
com/mojang/b/d/a/f.<clinit>()V -> "realms"
com/mojang/b/d/a/f.<clinit>()V -> "textures/gui/realms/off_icon.png"
com/mojang/b/d/a/f.<clinit>()V -> "realms"
com/mojang/b/d/a/f.<clinit>()V -> "textures/gui/realms/expired_icon.png"
com/mojang/b/d/a/f.<clinit>()V -> "realms"
com/mojang/b/d/a/f.<clinit>()V -> "textures/gui/realms/expires_soon_icon.png"
com/mojang/b/d/a/f.<clinit>()V -> "mco.configure.worlds.title"
com/mojang/b/d/a/f.<clinit>()V -> "mco.configure.world.title"
com/mojang/b/d/a/f.<clinit>()V -> "mco.configure.current.minigame"
com/mojang/b/d/a/f.<clinit>()V -> ": "
com/mojang/b/d/a/f.<clinit>()V -> "mco.selectServer.expired"
com/mojang/b/d/a/f.<clinit>()V -> "mco.selectServer.expires.soon"
com/mojang/b/d/a/f.<clinit>()V -> "mco.selectServer.expires.day"
com/mojang/b/d/a/f.<clinit>()V -> "mco.selectServer.open"
com/mojang/b/d/a/f.<clinit>()V -> "mco.selectServer.closed"
com/mojang/b/d/a/f.b(Lnet/minecraft/client/c/j/a/b;)V -> "mco.template.title.minigame"
com/mojang/b/d/a/f.b(ILcom/mojang/b/b/j;)V -> "mco.configure.world.slot.switch.question.line1"
com/mojang/b/d/a/f.b(ILcom/mojang/b/b/j;)V -> "mco.configure.world.slot.switch.question.line2"
com/mojang/b/d/a/f.b(Lcom/mojang/b/b/j;IZ)V -> "mco.configure.world.switch.slot"
com/mojang/b/d/a/f.b(Lcom/mojang/b/b/j;IZ)V -> "mco.configure.world.switch.slot.subtitle"
com/mojang/b/d/a/f.b(Lcom/mojang/b/b/j;IZ)V -> "mco.create.world.reset.title"
com/mojang/b/d/a/f.c(Lcom/mojang/a/a/a;IIIII)V -> "mco.selectServer.expires.days"
com/mojang/b/d/a/f.n(J)V -> "Couldn't get own world"
com/mojang/b/d/a/f.d(ILnet/minecraft/client/c/j/a/b;)V -> "Unknown action "
com/mojang/b/d/a/f.a(Lcom/mojang/b/b/p;)V -> "Couldn't save slot settings"
com/mojang/b/d/a/f.a(ILcom/mojang/b/b/j;)V -> "mco.configure.world.slot.switch.question.line1"
com/mojang/b/d/a/f.a(ILcom/mojang/b/b/j;)V -> "mco.configure.world.slot.switch.question.line2"
com/mojang/b/d/a/f.g(Ljava/lang/String;Ljava/lang/String;)V -> "Couldn't save settings"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.players"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.settings"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.subscription"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.switchminigame"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.options"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.backup"
com/mojang/b/d/a/f.bm()V -> "mco.configure.world.buttons.resetworld"
com/mojang/b/d/a/f.dN()V -> "mco.template.title.minigame"
com/mojang/b/d/a/f.dN()V -> "mco.minigame.world.info.line1"
com/mojang/b/d/a/f.dN()V -> "mco.minigame.world.info.line2"
com/mojang/b/d/a/h.<clinit>()V -> "mco.configure.world.name"
com/mojang/b/d/a/h.<clinit>()V -> "mco.configure.world.description"
com/mojang/b/d/a/h.ea()V -> "mco.selectServer.create"
com/mojang/b/d/a/h.ea()V -> "mco.create.world.subtitle"
com/mojang/b/d/a/h.ea()V -> "mco.create.world.skip"
com/mojang/b/d/a/h.ea()V -> "mco.create.world.reset.title"
com/mojang/b/d/a/h.bm()V -> "mco.create.world"
com/mojang/b/d/a/h.bm()V -> "mco.configure.world.name"
com/mojang/b/d/a/h.bm()V -> "mco.configure.world.description"
com/mojang/b/d/a/h.bm()V -> "mco.selectServer.create"
com/mojang/b/d/a/i.bq()V -> "%"
com/mojang/b/d/a/i.bq()V -> "/s"
com/mojang/b/d/a/i.bq()V -> "\n"
com/mojang/b/d/a/i.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/b/v;Ljava/lang/String;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V -> "mco.download.preparing"
com/mojang/b/d/a/i.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/b/v;Ljava/lang/String;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V -> "mco.download.title"
com/mojang/b/d/a/i.<clinit>()V -> "."
com/mojang/b/d/a/i.<clinit>()V -> ". ."
com/mojang/b/d/a/i.<clinit>()V -> ". . ."
com/mojang/b/d/a/i.e(Lcom/mojang/a/a/a;)V -> "%.1f"
com/mojang/b/d/a/i.e(Lcom/mojang/a/a/a;)V -> " %"
com/mojang/b/d/a/i.a(Lcom/mojang/a/a/a;J)V -> "("
com/mojang/b/d/a/i.a(Lcom/mojang/a/a/a;J)V -> "/s)"
com/mojang/b/d/a/i.ec()V -> "mco.download.downloading"
com/mojang/b/d/a/i.ec()V -> "mco.download.failed"
com/mojang/b/d/a/i.ec()V -> "mco.download.extracting"
com/mojang/b/d/a/i.ec()V -> "Failed to check Realms backup download status"
com/mojang/b/d/a/i.ec()V -> "mco.download.done"
com/mojang/b/d/a/i.ec()V -> "mco.download.failed"
com/mojang/b/d/a/i.ec()V -> "Could not acquire upload lock"
com/mojang/b/d/a/i.ec()V -> "mco.download.failed"
com/mojang/b/d/a/i.ed()V -> "mco.download.confirmation.line1"
com/mojang/b/d/a/i.ed()V -> "mco.download.confirmation.line2"
com/mojang/b/d/a/i.eg()V -> "mco.download.cancelled"
com/mojang/b/d/a/j.d(Lnet/minecraft/z/f/f;)V -> "An error occurred: "
com/mojang/b/d/a/j.d(Lcom/mojang/b/c/c;)V -> "An error occurred ("
com/mojang/b/d/a/j.d(Lcom/mojang/b/c/c;)V -> "):"
com/mojang/b/d/a/j.d(Lcom/mojang/b/c/c;)V -> "Realms ("
com/mojang/b/d/a/j.d(Lcom/mojang/b/c/c;)V -> "):"
com/mojang/b/d/a/j.d(Lcom/mojang/b/c/c;)V -> "mco.errorMessage."
com/mojang/b/d/a/j.bm()V -> ": "
com/mojang/b/d/a/j.bm()V -> "Ok"
com/mojang/b/d/a/k.<clinit>()V -> "mco.configure.world.invite.profile.name"
com/mojang/b/d/a/k.<clinit>()V -> "mco.configure.world.players.error"
com/mojang/b/d/a/k.eh()V -> "Couldn't invite user"
com/mojang/b/d/a/k.bm()V -> "mco.configure.world.invite.profile.name"
com/mojang/b/d/a/k.bm()V -> "mco.configure.world.buttons.invite"
com/mojang/b/d/a/l$a.<clinit>()V -> "Warning"
com/mojang/b/d/a/l$a.<clinit>()V -> "Warning!"
com/mojang/b/d/a/l$a.<clinit>()V -> "Info"
com/mojang/b/d/a/l$a.<clinit>()V -> "Info!"
com/mojang/b/d/a/l.bm()V -> "mco.gui.ok"
com/mojang/b/d/a/m.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/d/b;)V -> "Realms-long-running-task"
com/mojang/b/d/a/m.<clinit>()V -> "▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃"
com/mojang/b/d/a/m.<clinit>()V -> "_ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ _ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ _ _ ▃ ▄ ▅ ▆ ▇ █ ▇"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ _ _ _ ▃ ▄ ▅ ▆ ▇ █"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ _ _ ▃ ▄ ▅ ▆ ▇ █ ▇"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ _ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆"
com/mojang/b/d/a/m.<clinit>()V -> "_ _ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅"
com/mojang/b/d/a/m.<clinit>()V -> "_ ▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄"
com/mojang/b/d/a/m.<clinit>()V -> "▃ ▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃"
com/mojang/b/d/a/m.<clinit>()V -> "▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _"
com/mojang/b/d/a/m.<clinit>()V -> "▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▇ █ ▇ ▆ ▅ ▄ ▃ _ _ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "█ ▇ ▆ ▅ ▄ ▃ _ _ _ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▇ █ ▇ ▆ ▅ ▄ ▃ _ _ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _ _"
com/mojang/b/d/a/m.<clinit>()V -> "▄ ▅ ▆ ▇ █ ▇ ▆ ▅ ▄ ▃ _"
com/mojang/b/d/a/n.<clinit>()V -> "realms"
com/mojang/b/d/a/n.<clinit>()V -> "textures/gui/realms/invite_icon.png"
com/mojang/b/d/a/n.<clinit>()V -> "realms"
com/mojang/b/d/a/n.<clinit>()V -> "textures/gui/realms/trial_icon.png"
com/mojang/b/d/a/n.<clinit>()V -> "realms"
com/mojang/b/d/a/n.<clinit>()V -> "textures/gui/realms/news_notification_mainscreen.png"
com/mojang/b/d/a/n.en()V -> "Realms Notification Availability checker #1"
com/mojang/b/d/a/o.<clinit>()V -> "mco.account.privacyinfo"
com/mojang/b/d/a/o.i(Lnet/minecraft/client/c/j/a/b;)V -> "https://aka.ms/MinecraftGDPR"
com/mojang/b/d/a/o.j(Lnet/minecraft/client/c/j/a/b;)V -> "https://aka.ms/UpdateMojangAccount"
com/mojang/b/d/a/o.bm()V -> "mco.account.update"
com/mojang/b/d/a/o.bm()V -> "mco.account.privacy.info"
com/mojang/b/d/a/p$1.run()V -> "Couldn't list invites"
com/mojang/b/d/a/p$2.run()V -> "Couldn't reject invite"
com/mojang/b/d/a/p$3.run()V -> "Couldn't accept invite"
com/mojang/b/d/a/p$b.P(I)V -> "narrator.select.list.position"
com/mojang/b/d/a/p$b.P(I)V -> "narrator.select"
com/mojang/b/d/a/p.<clinit>()V -> "realms"
com/mojang/b/d/a/p.<clinit>()V -> "textures/gui/realms/accept_icon.png"
com/mojang/b/d/a/p.<clinit>()V -> "realms"
com/mojang/b/d/a/p.<clinit>()V -> "textures/gui/realms/reject_icon.png"
com/mojang/b/d/a/p.<clinit>()V -> "mco.invites.nopending"
com/mojang/b/d/a/p.<clinit>()V -> "mco.invites.button.accept"
com/mojang/b/d/a/p.<clinit>()V -> "mco.invites.button.reject"
com/mojang/b/d/a/p.ae(I)V -> "Realms-reject-invitation"
com/mojang/b/d/a/p.af(I)V -> "Realms-accept-invitation"
com/mojang/b/d/a/p.bm()V -> "Realms-pending-invitations-fetcher"
com/mojang/b/d/a/p.bm()V -> "mco.invites.button.accept"
com/mojang/b/d/a/p.bm()V -> "mco.invites.button.reject"
com/mojang/b/d/a/p.bm()V -> "mco.invites.title"
com/mojang/b/d/a/q$a.<clinit>()V -> "TOGGLE_OP"
com/mojang/b/d/a/q$a.<clinit>()V -> "REMOVE"
com/mojang/b/d/a/q$a.<clinit>()V -> "NONE"
com/mojang/b/d/a/q$c.P(I)V -> "narrator.select"
com/mojang/b/d/a/q.<clinit>()V -> "realms"
com/mojang/b/d/a/q.<clinit>()V -> "textures/gui/realms/op_icon.png"
com/mojang/b/d/a/q.<clinit>()V -> "realms"
com/mojang/b/d/a/q.<clinit>()V -> "textures/gui/realms/user_icon.png"
com/mojang/b/d/a/q.<clinit>()V -> "realms"
com/mojang/b/d/a/q.<clinit>()V -> "textures/gui/realms/cross_player_icon.png"
com/mojang/b/d/a/q.<clinit>()V -> "minecraft"
com/mojang/b/d/a/q.<clinit>()V -> "textures/gui/options_background.png"
com/mojang/b/d/a/q.<clinit>()V -> "mco.configure.world.invites.normal.tooltip"
com/mojang/b/d/a/q.<clinit>()V -> "mco.configure.world.invites.ops.tooltip"
com/mojang/b/d/a/q.<clinit>()V -> "mco.configure.world.invites.remove.tooltip"
com/mojang/b/d/a/q.<clinit>()V -> "mco.configure.world.invited"
com/mojang/b/d/a/q.a(Lcom/mojang/a/a/a;IIF)V -> " ("
com/mojang/b/d/a/q.a(Lcom/mojang/a/a/a;IIF)V -> ")"
com/mojang/b/d/a/q.m(Z)V -> "Couldn't uninvite user"
com/mojang/b/d/a/q.am(I)V -> "Couldn't deop the user"
com/mojang/b/d/a/q.al(I)V -> "Couldn't op the user"
com/mojang/b/d/a/q.an(I)V -> "Question"
com/mojang/b/d/a/q.an(I)V -> "mco.configure.world.uninvite.question"
com/mojang/b/d/a/q.an(I)V -> " '"
com/mojang/b/d/a/q.an(I)V -> "' ?"
com/mojang/b/d/a/q.bm()V -> "mco.configure.world.buttons.invite"
com/mojang/b/d/a/q.bm()V -> "mco.configure.world.invites.remove.tooltip"
com/mojang/b/d/a/q.bm()V -> "mco.configure.world.invites.ops.tooltip"
com/mojang/b/d/a/q.bm()V -> "mco.configure.world.players.title"
com/mojang/b/d/a/r.<clinit>()V -> "mco.reset.world.seed"
com/mojang/b/d/a/r.<clinit>()V -> "generator.default"
com/mojang/b/d/a/r.<clinit>()V -> "generator.flat"
com/mojang/b/d/a/r.<clinit>()V -> "generator.large_biomes"
com/mojang/b/d/a/r.<clinit>()V -> "generator.amplified"
com/mojang/b/d/a/r.es()Lnet/minecraft/z/f/f; -> "selectWorld.mapFeatures"
com/mojang/b/d/a/r.er()Lnet/minecraft/z/f/f; -> "selectWorld.mapType"
com/mojang/b/d/a/r.er()Lnet/minecraft/z/f/f; -> " "
com/mojang/b/d/a/r.bm()V -> "mco.reset.world.generate"
com/mojang/b/d/a/r.bm()V -> "mco.reset.world.seed"
com/mojang/b/d/a/s$1.run()V -> "Couldn't fetch templates in reset world"
com/mojang/b/d/a/s$a.<clinit>()V -> "NONE"
com/mojang/b/d/a/s$a.<clinit>()V -> "GENERATE"
com/mojang/b/d/a/s$a.<clinit>()V -> "UPLOAD"
com/mojang/b/d/a/s$a.<clinit>()V -> "ADVENTURE"
com/mojang/b/d/a/s$a.<clinit>()V -> "SURVIVAL_SPAWN"
com/mojang/b/d/a/s$a.<clinit>()V -> "EXPERIENCE"
com/mojang/b/d/a/s$a.<clinit>()V -> "INSPIRATION"
com/mojang/b/d/a/s.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/b/j;Ljava/lang/Runnable;Ljava/lang/Runnable;)V -> "mco.reset.world.title"
com/mojang/b/d/a/s.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/b/j;Ljava/lang/Runnable;Ljava/lang/Runnable;)V -> "mco.reset.world.warning"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/slot_frame.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/upload.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/adventure.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/survival_spawn.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/new_world.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/experience.png"
com/mojang/b/d/a/s.<clinit>()V -> "realms"
com/mojang/b/d/a/s.<clinit>()V -> "textures/gui/realms/inspiration.png"
com/mojang/b/d/a/s.e(Lnet/minecraft/client/c/j/a/b;)V -> "mco.reset.world.inspiration"
com/mojang/b/d/a/s.b(Lnet/minecraft/client/c/j/a/b;)V -> "mco.reset.world.template"
com/mojang/b/d/a/s.c(Lnet/minecraft/client/c/j/a/b;)V -> "mco.reset.world.adventure"
com/mojang/b/d/a/s.d(Lnet/minecraft/client/c/j/a/b;)V -> "mco.reset.world.experience"
com/mojang/b/d/a/s.bm()V -> "Realms-reset-world-fetcher"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.generate"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.upload"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.template"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.adventure"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.experience"
com/mojang/b/d/a/s.bm()V -> "mco.reset.world.inspiration"
com/mojang/b/d/a/t$a.<init>(Lcom/mojang/b/d/a/t;Lnet/minecraft/B/k/u;)V -> " ("
com/mojang/b/d/a/t$a.<init>(Lcom/mojang/b/d/a/t;Lnet/minecraft/B/k/u;)V -> ")"
com/mojang/b/d/a/t$a.<init>(Lcom/mojang/b/d/a/t;Lnet/minecraft/B/k/u;)V -> ", "
com/mojang/b/d/a/t$a.a(Lcom/mojang/a/a/a;Lnet/minecraft/B/k/u;III)V -> " "
com/mojang/b/d/a/t$b.P(I)V -> "narrator.select.list.position"
com/mojang/b/d/a/t$b.P(I)V -> "narrator.select"
com/mojang/b/d/a/t.<clinit>()V -> "selectWorld.world"
com/mojang/b/d/a/t.<clinit>()V -> "selectWorld.conversion"
com/mojang/b/d/a/t.<clinit>()V -> "mco.upload.hardcore"
com/mojang/b/d/a/t.<clinit>()V -> "selectWorld.cheats"
com/mojang/b/d/a/t.bm()V -> "Couldn't load level list"
com/mojang/b/d/a/t.bm()V -> "Unable to load worlds"
com/mojang/b/d/a/t.bm()V -> "mco.upload.button.name"
com/mojang/b/d/a/t.bm()V -> "mco.upload.select.world.title"
com/mojang/b/d/a/t.bm()V -> "mco.upload.select.world.subtitle"
com/mojang/b/d/a/t.bm()V -> "mco.upload.select.world.none"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "Couldn't fetch templates: {}"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "mco.template.select.failure"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "mco.template.select.none"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "%link"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "mco.template.select.none.linkTitle"
com/mojang/b/d/a/u$1.a(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/b/b/x; -> "https://aka.ms/MinecraftRealmsContentCreator"
com/mojang/b/d/a/u$b.P(I)V -> "narrator.select.list.position"
com/mojang/b/d/a/u$b.P(I)V -> "mco.template.select.narrate.version"
com/mojang/b/d/a/u$b.P(I)V -> "mco.template.select.narrate.authors"
com/mojang/b/d/a/u$b.P(I)V -> "narrator.select"
com/mojang/b/d/a/u.<init>(Lcom/mojang/b/d/a/a;Lcom/mojang/b/b/j$b;Lcom/mojang/b/b/x;)V -> "mco.template.title"
com/mojang/b/d/a/u.<clinit>()V -> "realms"
com/mojang/b/d/a/u.<clinit>()V -> "textures/gui/realms/link_icons.png"
com/mojang/b/d/a/u.<clinit>()V -> "realms"
com/mojang/b/d/a/u.<clinit>()V -> "textures/gui/realms/trailer_icons.png"
com/mojang/b/d/a/u.<clinit>()V -> "realms"
com/mojang/b/d/a/u.<clinit>()V -> "textures/gui/realms/slot_frame.png"
com/mojang/b/d/a/u.<clinit>()V -> "mco.template.info.tooltip"
com/mojang/b/d/a/u.<clinit>()V -> "mco.template.trailer.tooltip"
com/mojang/b/d/a/u.a(Lcom/mojang/b/b/x;)V -> "realms-template-fetcher"
com/mojang/b/d/a/u.a(DDI)Z -> "https://www.minecraft.net/realms/adventure-maps-in-1-9"
com/mojang/b/d/a/u.bm()V -> "mco.template.button.trailer"
com/mojang/b/d/a/u.bm()V -> "mco.template.button.select"
com/mojang/b/d/a/u.bm()V -> "mco.template.button.publisher"
com/mojang/b/d/a/v.<clinit>()V -> "mco.configure.world.name"
com/mojang/b/d/a/v.<clinit>()V -> "mco.configure.world.description"
com/mojang/b/d/a/v.k(Lnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.close.question.line1"
com/mojang/b/d/a/v.k(Lnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.close.question.line2"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.buttons.done"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.buttons.close"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.buttons.open"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.name"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.description"
com/mojang/b/d/a/v.bm()V -> "mco.configure.world.settings.title"
com/mojang/b/d/a/w$a.eX()V -> "mco.configure.world.spawnProtection"
com/mojang/b/d/a/w$a.eX()V -> ": "
com/mojang/b/d/a/w$a.eX()V -> "mco.configure.world.off"
com/mojang/b/d/a/w.<clinit>()V -> "options.difficulty.peaceful"
com/mojang/b/d/a/w.<clinit>()V -> "options.difficulty.easy"
com/mojang/b/d/a/w.<clinit>()V -> "options.difficulty.normal"
com/mojang/b/d/a/w.<clinit>()V -> "options.difficulty.hard"
com/mojang/b/d/a/w.<clinit>()V -> "selectWorld.gameMode.survival"
com/mojang/b/d/a/w.<clinit>()V -> "selectWorld.gameMode.creative"
com/mojang/b/d/a/w.<clinit>()V -> "selectWorld.gameMode.adventure"
com/mojang/b/d/a/w.<clinit>()V -> "mco.configure.world.on"
com/mojang/b/d/a/w.<clinit>()V -> "mco.configure.world.off"
com/mojang/b/d/a/w.<clinit>()V -> "selectWorld.gameMode"
com/mojang/b/d/a/w.<clinit>()V -> "mco.configure.world.edit.slot.name"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.edit.subscreen.adventuremap"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.edit.subscreen.inspiration"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.edit.subscreen.experience"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.edit.slot.name"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.buttons.done"
com/mojang/b/d/a/w.bm()V -> "mco.configure.world.buttons.options"
com/mojang/b/d/a/w.eS()Lnet/minecraft/z/f/f; -> "mco.configure.world.commandBlocks"
com/mojang/b/d/a/w.eS()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eP()Lnet/minecraft/z/f/f; -> "mco.configure.world.spawnAnimals"
com/mojang/b/d/a/w.eP()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eR()Lnet/minecraft/z/f/f; -> "mco.configure.world.spawnNPCs"
com/mojang/b/d/a/w.eR()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eO()Lnet/minecraft/z/f/f; -> "mco.configure.world.pvp"
com/mojang/b/d/a/w.eO()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eN()Lnet/minecraft/z/f/f; -> "options.generic_value"
com/mojang/b/d/a/w.eM()Lnet/minecraft/z/f/f; -> "options.difficulty"
com/mojang/b/d/a/w.eM()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eT()Lnet/minecraft/z/f/f; -> "mco.configure.world.forceGameMode"
com/mojang/b/d/a/w.eT()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eQ()Lnet/minecraft/z/f/f; -> "mco.configure.world.spawnMonsters"
com/mojang/b/d/a/w.eQ()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/w.eQ()Lnet/minecraft/z/f/f; -> "mco.configure.world.off"
com/mojang/b/d/a/w.eQ()Lnet/minecraft/z/f/f; -> "mco.configure.world.spawnMonsters"
com/mojang/b/d/a/w.eQ()Lnet/minecraft/z/f/f; -> ": "
com/mojang/b/d/a/x$1.run()V -> "Couldn't delete world"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.title"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.start"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.timeleft"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.recurring.daysleft"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.expired"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.less_than_a_day"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.month"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.months"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.day"
com/mojang/b/d/a/x.<clinit>()V -> "mco.configure.world.subscription.days"
com/mojang/b/d/a/x.i(Lnet/minecraft/client/c/j/a/b;)V -> "https://aka.ms/ExtendJavaRealms?subscriptionId="
com/mojang/b/d/a/x.i(Lnet/minecraft/client/c/j/a/b;)V -> "&profileId="
com/mojang/b/d/a/x.o(J)V -> "Couldn't get subscription"
com/mojang/b/d/a/x.k(Lnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.delete.question.line1"
com/mojang/b/d/a/x.k(Lnet/minecraft/client/c/j/a/b;)V -> "mco.configure.world.delete.question.line2"
com/mojang/b/d/a/x.av(I)Lnet/minecraft/z/f/f; -> " "
com/mojang/b/d/a/x.av(I)Lnet/minecraft/z/f/f; -> ", "
com/mojang/b/d/a/x.av(I)Lnet/minecraft/z/f/f; -> " "
com/mojang/b/d/a/x.r(Z)V -> "Realms-delete-realm"
com/mojang/b/d/a/x.bm()V -> "mco.configure.world.subscription.extend"
com/mojang/b/d/a/x.bm()V -> "mco.configure.world.delete.button"
com/mojang/b/d/a/y.<init>(Lnet/minecraft/client/c/f/aa;Lcom/mojang/b/a;Lcom/mojang/b/b/j;)V -> "https://aka.ms/MinecraftRealmsTerms"
com/mojang/b/d/a/y.<clinit>()V -> "mco.terms.title"
com/mojang/b/d/a/y.<clinit>()V -> "mco.terms.sentence.1"
com/mojang/b/d/a/y.<clinit>()V -> " "
com/mojang/b/d/a/y.<clinit>()V -> "mco.terms.sentence.2"
com/mojang/b/d/a/y.a(DDI)Z -> "https://aka.ms/MinecraftRealmsTerms"
com/mojang/b/d/a/y.a(DDI)Z -> "https://aka.ms/MinecraftRealmsTerms"
com/mojang/b/d/a/y.eZ()Ljava/lang/String; -> ". "
com/mojang/b/d/a/y.eZ()Ljava/lang/String; -> " "
com/mojang/b/d/a/y.eY()V -> "Couldn't agree to TOS"
com/mojang/b/d/a/y.bm()V -> "mco.terms.buttons.agree"
com/mojang/b/d/a/y.bm()V -> "mco.terms.buttons.disagree"
com/mojang/b/d/a/z.bq()V -> "%"
com/mojang/b/d/a/z.<init>(JILcom/mojang/b/d/a/s;Lnet/minecraft/B/k/u;Ljava/lang/Runnable;)V -> "mco.upload.preparing"
com/mojang/b/d/a/z.<clinit>()V -> "."
com/mojang/b/d/a/z.<clinit>()V -> ". ."
com/mojang/b/d/a/z.<clinit>()V -> ". . ."
com/mojang/b/d/a/z.<clinit>()V -> "mco.upload.verifying"
com/mojang/b/d/a/z.b(Lcom/mojang/a/a/a;J)V -> "("
com/mojang/b/d/a/z.b(Lcom/mojang/a/a/a;J)V -> "/s)"
com/mojang/b/d/a/z.c(Ljava/io/File;)Ljava/io/File; -> "realms-upload-file"
com/mojang/b/d/a/z.c(Ljava/io/File;)Ljava/io/File; -> ".tar.gz"
com/mojang/b/d/a/z.c(Ljava/io/File;)Ljava/io/File; -> "world"
com/mojang/b/d/a/z.h(Lcom/mojang/a/a/a;)V -> "%.1f"
com/mojang/b/d/a/z.h(Lcom/mojang/a/a/a;)V -> " %"
com/mojang/b/d/a/z.a(JLcom/mojang/b/d/a/A;)V -> "mco.upload.done"
com/mojang/b/d/a/z.a(JLcom/mojang/b/d/a/A;)V -> "mco.upload.failed"
com/mojang/b/d/a/z.a(JLcom/mojang/b/d/a/A;)V -> "mco.upload.failed"
com/mojang/b/d/a/z.a(Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V -> "/"
com/mojang/b/d/a/z.fd()V -> "mco.upload.cancelled"
com/mojang/b/d/a/z.fd()V -> "Upload was cancelled"
com/mojang/b/d/a/z.fe()V -> "mco.upload.close.failure"
com/mojang/b/d/a/z.fe()V -> "mco.upload.close.failure"
com/mojang/b/d/a/z.fe()V -> "saves"
com/mojang/b/d/a/z.fe()V -> "mco.upload.uploading"
com/mojang/b/d/a/z.fe()V -> "Failed to check Realms file upload status"
com/mojang/b/d/a/z.fe()V -> "mco.upload.size.failure.line1"
com/mojang/b/d/a/z.fe()V -> "mco.upload.size.failure.line2"
com/mojang/b/d/a/z.fe()V -> "mco.upload.size.failure.line1"
com/mojang/b/d/a/z.fe()V -> "mco.upload.size.failure.line2"
com/mojang/b/d/a/z.fe()V -> "mco.upload.close.failure"
com/mojang/b/d/a/z.fe()V -> "mco.upload.failed"
com/mojang/b/d/a/z.fe()V -> "mco.upload.failed"
com/mojang/b/d/a/z.fe()V -> "Could not acquire upload lock"
com/mojang/b/d/a/z.fe()V -> "Deleting file "
com/mojang/b/d/c$a.dp()V -> "Couldn't get live stats"
com/mojang/b/d/c$b.dq()V -> "Couldn't get pending invite count"
com/mojang/b/d/c$c.dr()V -> "Realms server list was null or empty"
com/mojang/b/d/c$c.dr()V -> "Couldn't get server list"
com/mojang/b/d/c$d.<clinit>()V -> "SERVER_LIST"
com/mojang/b/d/c$d.<clinit>()V -> "PENDING_INVITE"
com/mojang/b/d/c$d.<clinit>()V -> "TRIAL_AVAILABLE"
com/mojang/b/d/c$d.<clinit>()V -> "LIVE_STATS"
com/mojang/b/d/c$d.<clinit>()V -> "UNREAD_NEWS"
com/mojang/b/d/c$e.ds()V -> "Couldn't get trial availability"
com/mojang/b/d/c$f.dt()V -> "Couldn't get unread news"
com/mojang/b/d/c.dn()V -> "Failed to cancel Realms tasks"
com/mojang/b/d/d$a.<clinit>()V -> "NOTHING"
com/mojang/b/d/d$a.<clinit>()V -> "SWITCH_SLOT"
com/mojang/b/d/d$a.<clinit>()V -> "JOIN"
com/mojang/b/d/d.bq()V -> "Minigame"
com/mojang/b/d/d.<clinit>()V -> "realms"
com/mojang/b/d/d.<clinit>()V -> "textures/gui/realms/slot_frame.png"
com/mojang/b/d/d.<clinit>()V -> "realms"
com/mojang/b/d/d.<clinit>()V -> "textures/gui/realms/empty_frame.png"
com/mojang/b/d/d.<clinit>()V -> "minecraft"
com/mojang/b/d/d.<clinit>()V -> "textures/gui/title/background/panorama_0.png"
com/mojang/b/d/d.<clinit>()V -> "minecraft"
com/mojang/b/d/d.<clinit>()V -> "textures/gui/title/background/panorama_2.png"
com/mojang/b/d/d.<clinit>()V -> "minecraft"
com/mojang/b/d/d.<clinit>()V -> "textures/gui/title/background/panorama_3.png"
com/mojang/b/d/d.<clinit>()V -> "mco.configure.world.slot.tooltip.active"
com/mojang/b/d/d.<clinit>()V -> "mco.configure.world.slot.tooltip.minigame"
com/mojang/b/d/d.<clinit>()V -> "mco.configure.world.slot.tooltip"
com/mojang/b/d/d.a(Lcom/mojang/b/b/j;Ljava/lang/String;ZZLcom/mojang/b/d/d$a;)Lcom/mojang/datafixers/util/Pair; -> " "
com/mojang/b/d/d.a(Lcom/mojang/b/b/j;Ljava/lang/String;ZZLcom/mojang/b/d/d$a;)Lcom/mojang/datafixers/util/Pair; -> " "
com/mojang/b/d/d.a(Lcom/mojang/b/b/j;Ljava/lang/String;ZZLcom/mojang/b/d/d$a;)Lcom/mojang/datafixers/util/Pair; -> " "
com/mojang/b/e/b.fh()Ljava/io/File; -> "realms_persistence.json"
com/mojang/b/e/c$1.run()V -> "Downloading http texture from {}"
com/mojang/b/e/c$1.run()V -> "png"
com/mojang/b/e/c$1.run()V -> "Couldn't download http texture"
com/mojang/b/e/c.<clinit>()V -> "textures/gui/presets/isles.png"
com/mojang/b/e/c.L(Ljava/lang/String;)V -> "Realms Texture Downloader"
com/mojang/b/e/d$1.O(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; -> "Couldn't get profile"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> "right now"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> "1 second"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " seconds"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " ago"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> "1 minute"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " minutes"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " ago"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> "1 hour"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " hours"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " ago"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> "1 day"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " days"
com/mojang/b/e/d.q(J)Ljava/lang/String; -> " ago"
com/mojang/b/e/f$a.toString()Ljava/lang/String; -> "Line{segments="
com/mojang/b/e/f$b.toString()Ljava/lang/String; -> "Segment{fullText='"
com/mojang/b/e/f$b.toString()Ljava/lang/String; -> ", linkTitle='"
com/mojang/b/e/f$b.toString()Ljava/lang/String; -> ", linkUrl='"
com/mojang/b/e/f$b.fk()Ljava/lang/String; -> "Not a link: "
com/mojang/b/e/f.a(Ljava/util/List;Ljava/util/List;)Ljava/util/List; -> "%link"
com/mojang/b/e/f.a(Ljava/util/List;Ljava/util/List;)Ljava/util/List; -> "%link"
com/mojang/b/e/f.j(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; -> "Delimiter cannot be the empty string"
com/mojang/b/e/f.P(Ljava/lang/String;)Ljava/util/List; -> "\n"
net/a/d/b/a/a.<clinit>()V -> "INSTANCE"
net/a/f/b.<clinit>()V -> "MODELS"
net/a/f/b.<clinit>()V -> "TEXTURES"
net/a/f/b.<clinit>()V -> "SOUNDS"
net/a/f/b.<clinit>()V -> "LANGUAGES"
net/a/f/b.<clinit>()V -> "SHADERS"
net/minecraft/A/a$a.toString()Ljava/lang/String; -> "GossipEntry{target="
net/minecraft/A/a$a.toString()Ljava/lang/String; -> ", type="
net/minecraft/A/a$a.toString()Ljava/lang/String; -> ", value="
net/minecraft/A/a$a.f(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "Target"
net/minecraft/A/a$a.f(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "Type"
net/minecraft/A/a$a.f(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "Value"
net/minecraft/A/a$a.aT(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; -> "Target"
net/minecraft/A/a$a.aT(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; -> "Type"
net/minecraft/A/a$a.aT(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; -> "Value"
net/minecraft/A/b.<clinit>()V -> "MAJOR_NEGATIVE"
net/minecraft/A/b.<clinit>()V -> "major_negative"
net/minecraft/A/b.<clinit>()V -> "MINOR_NEGATIVE"
net/minecraft/A/b.<clinit>()V -> "minor_negative"
net/minecraft/A/b.<clinit>()V -> "MINOR_POSITIVE"
net/minecraft/A/b.<clinit>()V -> "minor_positive"
net/minecraft/A/b.<clinit>()V -> "MAJOR_POSITIVE"
net/minecraft/A/b.<clinit>()V -> "major_positive"
net/minecraft/A/b.<clinit>()V -> "TRADING"
net/minecraft/A/b.<clinit>()V -> "trading"
net/minecraft/A/c.a(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "pos"
net/minecraft/A/c.a(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "type"
net/minecraft/A/c.a(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "free_tickets"
net/minecraft/A/d.d(Lnet/minecraft/A/c;)Z -> "POI data mismatch: already registered at "
net/minecraft/A/d.a(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Valid"
net/minecraft/A/d.a(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Records"
net/minecraft/A/d.a(Lnet/minecraft/z/c/b;Lnet/minecraft/A/f;)V -> "Added POI of type {} @ {}"
net/minecraft/A/d.z(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; -> "Failed to read POI section: "
net/minecraft/A/d.be(Lnet/minecraft/z/c/b;)V -> "POI data mismatch: never registered at "
net/minecraft/A/d.be(Lnet/minecraft/z/c/b;)V -> "Removed POI of type {} @ {}"
net/minecraft/A/d.bf(Lnet/minecraft/z/c/b;)Z -> "POI never registered at "
net/minecraft/A/e$b.<clinit>()V -> "HAS_SPACE"
net/minecraft/A/e$b.<clinit>()V -> "IS_OCCUPIED"
net/minecraft/A/e$b.<clinit>()V -> "ANY"
net/minecraft/A/f.<clinit>()V -> "unemployed"
net/minecraft/A/f.<clinit>()V -> "armorer"
net/minecraft/A/f.<clinit>()V -> "butcher"
net/minecraft/A/f.<clinit>()V -> "cartographer"
net/minecraft/A/f.<clinit>()V -> "cleric"
net/minecraft/A/f.<clinit>()V -> "farmer"
net/minecraft/A/f.<clinit>()V -> "fisherman"
net/minecraft/A/f.<clinit>()V -> "fletcher"
net/minecraft/A/f.<clinit>()V -> "leatherworker"
net/minecraft/A/f.<clinit>()V -> "librarian"
net/minecraft/A/f.<clinit>()V -> "mason"
net/minecraft/A/f.<clinit>()V -> "nitwit"
net/minecraft/A/f.<clinit>()V -> "shepherd"
net/minecraft/A/f.<clinit>()V -> "toolsmith"
net/minecraft/A/f.<clinit>()V -> "weaponsmith"
net/minecraft/A/f.<clinit>()V -> "home"
net/minecraft/A/f.<clinit>()V -> "meeting"
net/minecraft/A/f.<clinit>()V -> "beehive"
net/minecraft/A/f.<clinit>()V -> "bee_nest"
net/minecraft/A/f.<clinit>()V -> "nether_portal"
net/minecraft/A/f.<clinit>()V -> "lodestone"
net/minecraft/A/f.a(Lnet/minecraft/A/f;Lnet/minecraft/b/G;)V -> "%s is defined in too many tags"
net/minecraft/A/g$a.<clinit>()V -> "SIEGE_CAN_ACTIVATE"
net/minecraft/A/g$a.<clinit>()V -> "SIEGE_TONIGHT"
net/minecraft/A/g$a.<clinit>()V -> "SIEGE_DONE"
net/minecraft/A/g.D(Lnet/minecraft/B/i/f;)V -> "Failed to create zombie for village siege at {}"
net/minecraft/B/D.<clinit>()V -> "SKY"
net/minecraft/B/D.<clinit>()V -> "BLOCK"
net/minecraft/B/E.aA(Lnet/minecraft/l/d;)Lnet/minecraft/B/E; -> "Lock"
net/minecraft/B/E.aA(Lnet/minecraft/l/d;)Lnet/minecraft/B/E; -> "Lock"
net/minecraft/B/E.O(Lnet/minecraft/l/d;)V -> "Lock"
net/minecraft/B/F.toString()Ljava/lang/String; -> ": "
net/minecraft/B/F.toString()Ljava/lang/String; -> ", "
net/minecraft/B/F.toString()Ljava/lang/String; -> ", "
net/minecraft/B/F.toString()Ljava/lang/String; -> ", "
net/minecraft/B/H$a.toString()Ljava/lang/String; -> ": "
net/minecraft/B/H$a.toString()Ljava/lang/String; -> ", "
net/minecraft/B/H$a.toString()Ljava/lang/String; -> ", "
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "i"
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "x"
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "y"
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "z"
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "t"
net/minecraft/B/H.a(Lnet/minecraft/l/n;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/B/H; -> "p"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "i"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "x"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "y"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "z"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "t"
net/minecraft/B/H.aRL()Lnet/minecraft/l/n; -> "p"
net/minecraft/B/J.<clinit>()V -> "EXTREMELY_HIGH"
net/minecraft/B/J.<clinit>()V -> "VERY_HIGH"
net/minecraft/B/J.<clinit>()V -> "HIGH"
net/minecraft/B/J.<clinit>()V -> "NORMAL"
net/minecraft/B/J.<clinit>()V -> "LOW"
net/minecraft/B/J.<clinit>()V -> "VERY_LOW"
net/minecraft/B/J.<clinit>()V -> "EXTREMELY_LOW"
net/minecraft/B/K.v(Ljava/util/function/Consumer;)V -> "Fetching packet for removed entity "
net/minecraft/B/L.<clinit>()V -> "overworld"
net/minecraft/B/L.<clinit>()V -> "the_nether"
net/minecraft/B/L.<clinit>()V -> "the_end"
net/minecraft/B/L.b(Ljava/lang/Class;Lnet/minecraft/z/c/a;Ljava/util/function/Predicate;)Ljava/util/List; -> "getLoadedEntities"
net/minecraft/B/L.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "Should always be able to create a chunk!"
net/minecraft/B/L.c(Lnet/minecraft/m/c;)V -> "Can't send packets to server unless you're on the client."
net/minecraft/B/L.d(Lnet/minecraft/d/a;)Lnet/minecraft/d/b; -> "Affected level"
net/minecraft/B/L.d(Lnet/minecraft/d/a;)Lnet/minecraft/d/b; -> "All players"
net/minecraft/B/L.d(Lnet/minecraft/d/a;)Lnet/minecraft/d/b; -> "Chunk stats"
net/minecraft/B/L.d(Lnet/minecraft/d/a;)Lnet/minecraft/d/b; -> "Level dimension"
net/minecraft/B/L.d(Lnet/minecraft/d/a;)Lnet/minecraft/d/b; -> "Level Data Unobtainable"
net/minecraft/B/L.d(Lnet/minecraft/g/f;Lnet/minecraft/z/c/a;Ljava/util/function/Predicate;)Ljava/util/List; -> "getEntities"
net/minecraft/B/L.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "queueCheckLight"
net/minecraft/B/L.a(Ljava/util/function/Consumer;Lnet/minecraft/g/f;)V -> "Ticking entity"
net/minecraft/B/L.a(Ljava/util/function/Consumer;Lnet/minecraft/g/f;)V -> "Entity being ticked"
net/minecraft/B/L.a(Ljava/lang/Class;Lnet/minecraft/z/c/a;Ljava/util/function/Predicate;)Ljava/util/List; -> "getEntities"
net/minecraft/B/L.a(Lnet/minecraft/g/k;Lnet/minecraft/z/c/a;Ljava/util/function/Predicate;)Ljava/util/List; -> "getEntities"
net/minecraft/B/L.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/D;Lnet/minecraft/z/c/b;)V -> "Exception while updating neighbours"
net/minecraft/B/L.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/D;Lnet/minecraft/z/c/b;)V -> "Block being updated"
net/minecraft/B/L.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/D;Lnet/minecraft/z/c/b;)V -> "Source block type"
net/minecraft/B/L.g(Lnet/minecraft/y/O;)Z -> "Adding block entity while ticking: {} @ {}"
net/minecraft/B/L.cx(Lnet/minecraft/b/D;)Ljava/lang/String; -> "ID #%s (%s // %s)"
net/minecraft/B/L.cx(Lnet/minecraft/b/D;)Ljava/lang/String; -> "ID #"
net/minecraft/B/L.aRR()V -> "blockEntities"
net/minecraft/B/L.aRR()V -> "Ticking block entity"
net/minecraft/B/L.aRR()V -> "Block entity being ticked"
net/minecraft/B/L.aRR()V -> "pendingBlockEntities"
net/minecraft/B/L.tH()Ljava/lang/String; -> " total; "
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "GameType"
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "LevelName"
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "hardcore"
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "Difficulty"
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "allowCommands"
net/minecraft/B/N.a(Lcom/mojang/serialization/Dynamic;Lnet/minecraft/z/b/a/a;)Lnet/minecraft/B/N; -> "GameRules"
net/minecraft/B/a/a$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "temperature"
net/minecraft/B/a/a$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "humidity"
net/minecraft/B/a/a$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "altitude"
net/minecraft/B/a/a$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "weirdness"
net/minecraft/B/a/a$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "offset"
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> "BiomeBuilder{\nprecipitation="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\nbiomeCategory="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\ndepth="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\nscale="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\ntemperature="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\ntemperatureModifier="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\ndownfall="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\nspecialEffects="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\nmobSpawnSettings="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\ngenerationSettings="
net/minecraft/B/a/a$b.toString()Ljava/lang/String; -> ",\n"
net/minecraft/B/a/a$b.aSE()Lnet/minecraft/B/a/a; -> "You are missing parameters to build a proper biome\n"
net/minecraft/B/a/a$c.<clinit>()V -> "NONE"
net/minecraft/B/a/a$c.<clinit>()V -> "none"
net/minecraft/B/a/a$c.<clinit>()V -> "TAIGA"
net/minecraft/B/a/a$c.<clinit>()V -> "taiga"
net/minecraft/B/a/a$c.<clinit>()V -> "EXTREME_HILLS"
net/minecraft/B/a/a$c.<clinit>()V -> "extreme_hills"
net/minecraft/B/a/a$c.<clinit>()V -> "JUNGLE"
net/minecraft/B/a/a$c.<clinit>()V -> "jungle"
net/minecraft/B/a/a$c.<clinit>()V -> "MESA"
net/minecraft/B/a/a$c.<clinit>()V -> "mesa"
net/minecraft/B/a/a$c.<clinit>()V -> "PLAINS"
net/minecraft/B/a/a$c.<clinit>()V -> "plains"
net/minecraft/B/a/a$c.<clinit>()V -> "SAVANNA"
net/minecraft/B/a/a$c.<clinit>()V -> "savanna"
net/minecraft/B/a/a$c.<clinit>()V -> "ICY"
net/minecraft/B/a/a$c.<clinit>()V -> "icy"
net/minecraft/B/a/a$c.<clinit>()V -> "THEEND"
net/minecraft/B/a/a$c.<clinit>()V -> "the_end"
net/minecraft/B/a/a$c.<clinit>()V -> "BEACH"
net/minecraft/B/a/a$c.<clinit>()V -> "beach"
net/minecraft/B/a/a$c.<clinit>()V -> "FOREST"
net/minecraft/B/a/a$c.<clinit>()V -> "forest"
net/minecraft/B/a/a$c.<clinit>()V -> "OCEAN"
net/minecraft/B/a/a$c.<clinit>()V -> "ocean"
net/minecraft/B/a/a$c.<clinit>()V -> "DESERT"
net/minecraft/B/a/a$c.<clinit>()V -> "desert"
net/minecraft/B/a/a$c.<clinit>()V -> "RIVER"
net/minecraft/B/a/a$c.<clinit>()V -> "river"
net/minecraft/B/a/a$c.<clinit>()V -> "SWAMP"
net/minecraft/B/a/a$c.<clinit>()V -> "swamp"
net/minecraft/B/a/a$c.<clinit>()V -> "MUSHROOM"
net/minecraft/B/a/a$c.<clinit>()V -> "mushroom"
net/minecraft/B/a/a$c.<clinit>()V -> "NETHER"
net/minecraft/B/a/a$c.<clinit>()V -> "nether"
net/minecraft/B/a/a$d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "precipitation"
net/minecraft/B/a/a$d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "temperature"
net/minecraft/B/a/a$d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "temperature_modifier"
net/minecraft/B/a/a$d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "downfall"
net/minecraft/B/a/a$e.<clinit>()V -> "NONE"
net/minecraft/B/a/a$e.<clinit>()V -> "none"
net/minecraft/B/a/a$e.<clinit>()V -> "RAIN"
net/minecraft/B/a/a$e.<clinit>()V -> "rain"
net/minecraft/B/a/a$e.<clinit>()V -> "SNOW"
net/minecraft/B/a/a$e.<clinit>()V -> "snow"
net/minecraft/B/a/a$f.<clinit>()V -> "NONE"
net/minecraft/B/a/a$f.<clinit>()V -> "none"
net/minecraft/B/a/a$f.<clinit>()V -> "FROZEN"
net/minecraft/B/a/a$f.<clinit>()V -> "frozen"
net/minecraft/B/a/a.b(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "category"
net/minecraft/B/a/a.b(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "depth"
net/minecraft/B/a/a.b(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "scale"
net/minecraft/B/a/a.b(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "effects"
net/minecraft/B/a/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "category"
net/minecraft/B/a/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "depth"
net/minecraft/B/a/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "scale"
net/minecraft/B/a/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "effects"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Feature placement"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Feature"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Id"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Description"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Feature placement"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Feature"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Id"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Config"
net/minecraft/B/a/a.a(Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Lnet/minecraft/B/e/v;JLnet/minecraft/z/at;Lnet/minecraft/z/c/b;)V -> "Description"
net/minecraft/B/a/a/a.<clinit>()V -> "fixed"
net/minecraft/B/a/a/a.<clinit>()V -> "multi_noise"
net/minecraft/B/a/a/a.<clinit>()V -> "checkerboard"
net/minecraft/B/a/a/a.<clinit>()V -> "vanilla_layered"
net/minecraft/B/a/a/a.<clinit>()V -> "the_end"
net/minecraft/B/a/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biomes"
net/minecraft/B/a/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "scale"
net/minecraft/B/a/a/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/a/a/d$a.cr(Lnet/minecraft/z/ak;)Lcom/mojang/serialization/DataResult; -> "Unknown preset: "
net/minecraft/B/a/a/d$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "preset"
net/minecraft/B/a/a/d$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/a/a/d$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "firstOctave"
net/minecraft/B/a/a/d$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "amplitudes"
net/minecraft/B/a/a/d$c.<clinit>()V -> "nether"
net/minecraft/B/a/a/d.c(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "parameters"
net/minecraft/B/a/a/d.c(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biome"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biomes"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "temperature_noise"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "humidity_noise"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "altitude_noise"
net/minecraft/B/a/a/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "weirdness_noise"
net/minecraft/B/a/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/a/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "legacy_biome_init_layer"
net/minecraft/B/a/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "large_biomes"
net/minecraft/B/a/a/f.<clinit>()V -> "biome"
net/minecraft/B/a/b$a.aLC()Ljava/lang/IllegalStateException; -> "Missing 'fog' color."
net/minecraft/B/a/b$a.aLH()Ljava/lang/IllegalStateException; -> "Missing 'sky' color."
net/minecraft/B/a/b$a.aSM()Ljava/lang/IllegalStateException; -> "Missing 'water fog' color."
net/minecraft/B/a/b$a.aLB()Ljava/lang/IllegalStateException; -> "Missing 'water' color."
net/minecraft/B/a/b$b.<clinit>()V -> "NONE"
net/minecraft/B/a/b$b.<clinit>()V -> "none"
net/minecraft/B/a/b$b.<clinit>()V -> "DARK_FOREST"
net/minecraft/B/a/b$b.<clinit>()V -> "dark_forest"
net/minecraft/B/a/b$b.<clinit>()V -> "SWAMP"
net/minecraft/B/a/b$b.<clinit>()V -> "swamp"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "fog_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "water_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "water_fog_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "sky_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "foliage_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "grass_color"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "grass_color_modifier"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "particle"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "ambient_sound"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "mood_sound"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "additions_sound"
net/minecraft/B/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "music"
net/minecraft/B/a/d.<init>(Lnet/minecraft/z/P;[I)V -> "Received invalid biome id: "
net/minecraft/B/a/e$a.aLt()Ljava/lang/IllegalStateException; -> "Missing surface builder"
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "surface_builder"
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Carver: "
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "carvers"
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Feature: "
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "features"
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Structure start: "
net/minecraft/B/a/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "starts"
net/minecraft/B/a/i.<clinit>()V -> "ocean"
net/minecraft/B/a/i.<clinit>()V -> "plains"
net/minecraft/B/a/i.<clinit>()V -> "desert"
net/minecraft/B/a/i.<clinit>()V -> "mountains"
net/minecraft/B/a/i.<clinit>()V -> "forest"
net/minecraft/B/a/i.<clinit>()V -> "taiga"
net/minecraft/B/a/i.<clinit>()V -> "swamp"
net/minecraft/B/a/i.<clinit>()V -> "river"
net/minecraft/B/a/i.<clinit>()V -> "nether_wastes"
net/minecraft/B/a/i.<clinit>()V -> "the_end"
net/minecraft/B/a/i.<clinit>()V -> "frozen_ocean"
net/minecraft/B/a/i.<clinit>()V -> "frozen_river"
net/minecraft/B/a/i.<clinit>()V -> "snowy_tundra"
net/minecraft/B/a/i.<clinit>()V -> "snowy_mountains"
net/minecraft/B/a/i.<clinit>()V -> "mushroom_fields"
net/minecraft/B/a/i.<clinit>()V -> "mushroom_field_shore"
net/minecraft/B/a/i.<clinit>()V -> "beach"
net/minecraft/B/a/i.<clinit>()V -> "desert_hills"
net/minecraft/B/a/i.<clinit>()V -> "wooded_hills"
net/minecraft/B/a/i.<clinit>()V -> "taiga_hills"
net/minecraft/B/a/i.<clinit>()V -> "mountain_edge"
net/minecraft/B/a/i.<clinit>()V -> "jungle"
net/minecraft/B/a/i.<clinit>()V -> "jungle_hills"
net/minecraft/B/a/i.<clinit>()V -> "jungle_edge"
net/minecraft/B/a/i.<clinit>()V -> "deep_ocean"
net/minecraft/B/a/i.<clinit>()V -> "stone_shore"
net/minecraft/B/a/i.<clinit>()V -> "snowy_beach"
net/minecraft/B/a/i.<clinit>()V -> "birch_forest"
net/minecraft/B/a/i.<clinit>()V -> "birch_forest_hills"
net/minecraft/B/a/i.<clinit>()V -> "dark_forest"
net/minecraft/B/a/i.<clinit>()V -> "snowy_taiga"
net/minecraft/B/a/i.<clinit>()V -> "snowy_taiga_hills"
net/minecraft/B/a/i.<clinit>()V -> "giant_tree_taiga"
net/minecraft/B/a/i.<clinit>()V -> "giant_tree_taiga_hills"
net/minecraft/B/a/i.<clinit>()V -> "wooded_mountains"
net/minecraft/B/a/i.<clinit>()V -> "savanna"
net/minecraft/B/a/i.<clinit>()V -> "savanna_plateau"
net/minecraft/B/a/i.<clinit>()V -> "badlands"
net/minecraft/B/a/i.<clinit>()V -> "wooded_badlands_plateau"
net/minecraft/B/a/i.<clinit>()V -> "badlands_plateau"
net/minecraft/B/a/i.<clinit>()V -> "small_end_islands"
net/minecraft/B/a/i.<clinit>()V -> "end_midlands"
net/minecraft/B/a/i.<clinit>()V -> "end_highlands"
net/minecraft/B/a/i.<clinit>()V -> "end_barrens"
net/minecraft/B/a/i.<clinit>()V -> "warm_ocean"
net/minecraft/B/a/i.<clinit>()V -> "lukewarm_ocean"
net/minecraft/B/a/i.<clinit>()V -> "cold_ocean"
net/minecraft/B/a/i.<clinit>()V -> "deep_warm_ocean"
net/minecraft/B/a/i.<clinit>()V -> "deep_lukewarm_ocean"
net/minecraft/B/a/i.<clinit>()V -> "deep_cold_ocean"
net/minecraft/B/a/i.<clinit>()V -> "deep_frozen_ocean"
net/minecraft/B/a/i.<clinit>()V -> "the_void"
net/minecraft/B/a/i.<clinit>()V -> "sunflower_plains"
net/minecraft/B/a/i.<clinit>()V -> "desert_lakes"
net/minecraft/B/a/i.<clinit>()V -> "gravelly_mountains"
net/minecraft/B/a/i.<clinit>()V -> "flower_forest"
net/minecraft/B/a/i.<clinit>()V -> "taiga_mountains"
net/minecraft/B/a/i.<clinit>()V -> "swamp_hills"
net/minecraft/B/a/i.<clinit>()V -> "ice_spikes"
net/minecraft/B/a/i.<clinit>()V -> "modified_jungle"
net/minecraft/B/a/i.<clinit>()V -> "modified_jungle_edge"
net/minecraft/B/a/i.<clinit>()V -> "tall_birch_forest"
net/minecraft/B/a/i.<clinit>()V -> "tall_birch_hills"
net/minecraft/B/a/i.<clinit>()V -> "dark_forest_hills"
net/minecraft/B/a/i.<clinit>()V -> "snowy_taiga_mountains"
net/minecraft/B/a/i.<clinit>()V -> "giant_spruce_taiga"
net/minecraft/B/a/i.<clinit>()V -> "giant_spruce_taiga_hills"
net/minecraft/B/a/i.<clinit>()V -> "modified_gravelly_mountains"
net/minecraft/B/a/i.<clinit>()V -> "shattered_savanna"
net/minecraft/B/a/i.<clinit>()V -> "shattered_savanna_plateau"
net/minecraft/B/a/i.<clinit>()V -> "eroded_badlands"
net/minecraft/B/a/i.<clinit>()V -> "modified_wooded_badlands_plateau"
net/minecraft/B/a/i.<clinit>()V -> "modified_badlands_plateau"
net/minecraft/B/a/i.<clinit>()V -> "bamboo_jungle"
net/minecraft/B/a/i.<clinit>()V -> "bamboo_jungle_hills"
net/minecraft/B/a/i.<clinit>()V -> "soul_sand_valley"
net/minecraft/B/a/i.<clinit>()V -> "crimson_forest"
net/minecraft/B/a/i.<clinit>()V -> "warped_forest"
net/minecraft/B/a/i.<clinit>()V -> "basalt_deltas"
net/minecraft/B/a/j.<clinit>()V -> "INSTANCE"
net/minecraft/B/a/l.<clinit>()V -> "INSTANCE"
net/minecraft/B/a/m.<clinit>()V -> "INSTANCE"
net/minecraft/B/a/o$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "energy_budget"
net/minecraft/B/a/o$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "charge"
net/minecraft/B/a/o$c.toString()Ljava/lang/String; -> "*("
net/minecraft/B/a/o$c.toString()Ljava/lang/String; -> "-"
net/minecraft/B/a/o$c.toString()Ljava/lang/String; -> "):"
net/minecraft/B/a/o$c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "type"
net/minecraft/B/a/o$c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "weight"
net/minecraft/B/a/o$c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "minCount"
net/minecraft/B/a/o$c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "maxCount"
net/minecraft/B/a/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "creature_spawn_probability"
net/minecraft/B/a/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Spawn data: "
net/minecraft/B/a/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spawners"
net/minecraft/B/a/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spawn_costs"
net/minecraft/B/a/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "player_spawn_friendly"
net/minecraft/B/a/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "sound"
net/minecraft/B/a/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "tick_delay"
net/minecraft/B/a/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "block_search_extent"
net/minecraft/B/a/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "offset"
net/minecraft/B/a/q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "options"
net/minecraft/B/a/q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/a/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "sound"
net/minecraft/B/a/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "tick_chance"
net/minecraft/B/b$a.<clinit>()V -> "PINK"
net/minecraft/B/b$a.<clinit>()V -> "pink"
net/minecraft/B/b$a.<clinit>()V -> "BLUE"
net/minecraft/B/b$a.<clinit>()V -> "blue"
net/minecraft/B/b$a.<clinit>()V -> "RED"
net/minecraft/B/b$a.<clinit>()V -> "red"
net/minecraft/B/b$a.<clinit>()V -> "GREEN"
net/minecraft/B/b$a.<clinit>()V -> "green"
net/minecraft/B/b$a.<clinit>()V -> "YELLOW"
net/minecraft/B/b$a.<clinit>()V -> "yellow"
net/minecraft/B/b$a.<clinit>()V -> "PURPLE"
net/minecraft/B/b$a.<clinit>()V -> "purple"
net/minecraft/B/b$a.<clinit>()V -> "WHITE"
net/minecraft/B/b$a.<clinit>()V -> "white"
net/minecraft/B/b$b.<clinit>()V -> "PROGRESS"
net/minecraft/B/b$b.<clinit>()V -> "progress"
net/minecraft/B/b$b.<clinit>()V -> "NOTCHED_6"
net/minecraft/B/b$b.<clinit>()V -> "notched_6"
net/minecraft/B/b$b.<clinit>()V -> "NOTCHED_10"
net/minecraft/B/b$b.<clinit>()V -> "notched_10"
net/minecraft/B/b$b.<clinit>()V -> "NOTCHED_12"
net/minecraft/B/b$b.<clinit>()V -> "notched_12"
net/minecraft/B/b$b.<clinit>()V -> "NOTCHED_20"
net/minecraft/B/b$b.<clinit>()V -> "notched_20"
net/minecraft/B/b/a.<clinit>()V -> "GROWING"
net/minecraft/B/b/a.<clinit>()V -> "SHRINKING"
net/minecraft/B/b/a.<clinit>()V -> "STATIONARY"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderCenterX"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderCenterZ"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderSize"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderSizeLerpTime"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderSizeLerpTarget"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderSafeZone"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderDamagePerBlock"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderWarningBlocks"
net/minecraft/B/b/c$c.a(Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/B/b/c$c;)Lnet/minecraft/B/b/c$c; -> "BorderWarningTime"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderCenterX"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderCenterZ"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderSize"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderSizeLerpTime"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderSafeZone"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderDamagePerBlock"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderSizeLerpTarget"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderWarningBlocks"
net/minecraft/B/b/c$c.aB(Lnet/minecraft/l/d;)V -> "BorderWarningTime"
net/minecraft/B/c.<clinit>()V -> "PEACEFUL"
net/minecraft/B/c.<clinit>()V -> "peaceful"
net/minecraft/B/c.<clinit>()V -> "EASY"
net/minecraft/B/c.<clinit>()V -> "easy"
net/minecraft/B/c.<clinit>()V -> "NORMAL"
net/minecraft/B/c.<clinit>()V -> "normal"
net/minecraft/B/c.<clinit>()V -> "HARD"
net/minecraft/B/c.<clinit>()V -> "hard"
net/minecraft/B/c.iI()Lnet/minecraft/z/f/f; -> "options.difficulty."
net/minecraft/B/c/a/a.<init>(Lnet/minecraft/B/c/a/b;Ljava/util/concurrent/Executor;)V -> "progressListener"
net/minecraft/B/c/a/d.a(Lnet/minecraft/z/c/e;Lnet/minecraft/B/c/h;)V -> "menu.preparingSpawn"
net/minecraft/B/c/a/d.nX()V -> "Time elapsed: {} ms"
net/minecraft/B/c/b$a.<clinit>()V -> "IMMEDIATE"
net/minecraft/B/c/b$a.<clinit>()V -> "QUEUED"
net/minecraft/B/c/b$a.<clinit>()V -> "CHECK"
net/minecraft/B/c/b.<init>(Lnet/minecraft/B/L;Lnet/minecraft/z/c/e;Lnet/minecraft/B/a/d;Lnet/minecraft/z/d/g;Lnet/minecraft/B/z;Lnet/minecraft/B/z;J[Lnet/minecraft/B/c/g;Ljava/util/function/Consumer;)V -> "Could not set level chunk sections, array length is {} instead of {}"
net/minecraft/B/c/b.ad(III)Lnet/minecraft/h/d; -> "Getting fluid state"
net/minecraft/B/c/b.ad(III)Lnet/minecraft/h/d; -> "Block being got"
net/minecraft/B/c/b.ad(III)Lnet/minecraft/h/d; -> "Location"
net/minecraft/B/c/b.a(Lnet/minecraft/z/c/b;Lnet/minecraft/l/d;)Lnet/minecraft/y/O; -> "DUMMY"
net/minecraft/B/c/b.a(Lnet/minecraft/z/c/b;Lnet/minecraft/l/d;)Lnet/minecraft/y/O; -> "id"
net/minecraft/B/c/b.a(Lnet/minecraft/z/c/b;Lnet/minecraft/l/d;)Lnet/minecraft/y/O; -> "Tried to load a DUMMY block entity @ {} but found not block entity block {} at location"
net/minecraft/B/c/b.a(Lnet/minecraft/z/c/b;Lnet/minecraft/l/d;)Lnet/minecraft/y/O; -> "Tried to load a block entity for block {} but failed at location {}"
net/minecraft/B/c/b.r(Lnet/minecraft/z/c/b;)Lnet/minecraft/b/G; -> "Getting block state"
net/minecraft/B/c/b.r(Lnet/minecraft/z/c/b;)Lnet/minecraft/b/G; -> "Block being got"
net/minecraft/B/c/b.r(Lnet/minecraft/z/c/b;)Lnet/minecraft/b/G; -> "Location"
net/minecraft/B/c/b.ax(Lnet/minecraft/g/f;)V -> "Wrong location! ({}, {}) should be ({}, {}), {}"
net/minecraft/B/c/b.aC(Lnet/minecraft/l/d;)V -> "x"
net/minecraft/B/c/b.aC(Lnet/minecraft/l/d;)V -> "y"
net/minecraft/B/c/b.aC(Lnet/minecraft/l/d;)V -> "z"
net/minecraft/B/c/b.bN(Lnet/minecraft/z/c/b;)Lnet/minecraft/l/d; -> "keepPacked"
net/minecraft/B/c/b.bN(Lnet/minecraft/z/c/b;)Lnet/minecraft/l/d; -> "keepPacked"
net/minecraft/B/c/b/a.<init>(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Z)V -> "chunk"
net/minecraft/B/c/b/a.a(Lnet/minecraft/z/aj;Ljava/util/function/Supplier;Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/c/b/a.a(Lnet/minecraft/z/aj;Ljava/util/function/Supplier;Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "hasLegacyStructureData"
net/minecraft/B/c/b/a.a(Lnet/minecraft/z/aj;Ljava/util/function/Supplier;Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/c/b/a.aE(Lnet/minecraft/l/d;)I -> "DataVersion"
net/minecraft/B/c/b/a.aE(Lnet/minecraft/l/d;)I -> "DataVersion"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "xPos"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "zPos"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "LastUpdate"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "HeightMap"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "TerrainPopulated"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Y"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Blocks"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Data"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "SkyLight"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "BlockLight"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Sections"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Biomes"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "Entities"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "TileEntities"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "TileTicks"
net/minecraft/B/c/b/b.a(Lnet/minecraft/z/e/c$b;Lnet/minecraft/B/c/b/b$a;Lnet/minecraft/l/d;Lnet/minecraft/B/a/a/a;)V -> "convertedFromAlphaFormat"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "xPos"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "zPos"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "Blocks"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "Data"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "SkyLight"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "BlockLight"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "HeightMap"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "TerrainPopulated"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "Entities"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "TileEntities"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "TileTicks"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "LastUpdate"
net/minecraft/B/c/b/b.aF(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/b/b$a; -> "LastUpdate"
net/minecraft/B/c/b/c.b(Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Ljava/util/Map; -> "References"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Level"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "xPos"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "zPos"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Chunk file at {} is in the wrong location; relocating. (Expected {}, got {})"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Biomes"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Biomes"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "UpgradeData"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "UpgradeData"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "ToBeTicked"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "LiquidsToBeTicked"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "isLightOn"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Sections"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Y"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Palette"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "BlockStates"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Palette"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "BlockStates"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "BlockLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "BlockLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "SkyLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "SkyLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "InhabitedTime"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "TileTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "TileTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "LiquidTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "LiquidTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Status"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Heightmaps"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Structures"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "shouldSave"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "PostProcessing"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Entities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "TileEntities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "Lights"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/A/e;Lnet/minecraft/z/c/e;Lnet/minecraft/l/d;)Lnet/minecraft/B/c/d; -> "CarvingMasks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/z/c/e;Ljava/lang/String;J)Z -> "Found invalid structure reference [ {} @ {} ] for chunk {}."
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "Entities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "TileEntities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "keepPacked"
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "x"
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "y"
net/minecraft/B/c/b/c.a(Lnet/minecraft/l/d;Lnet/minecraft/B/c/b;)V -> "z"
net/minecraft/B/c/b/c.a(Lnet/minecraft/z/c/e;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/l/d; -> "Starts"
net/minecraft/B/c/b/c.a(Lnet/minecraft/z/c/e;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/l/d; -> "References"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Ljava/util/Map; -> "Starts"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Ljava/util/Map; -> "Unknown structure start: {}"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "xPos"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "zPos"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "LastUpdate"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "InhabitedTime"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Status"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "UpgradeData"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Y"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Palette"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "BlockStates"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "BlockLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "SkyLight"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Sections"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "isLightOn"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Biomes"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "TileEntities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Lights"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "CarvingMasks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Entities"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "ToBeTicked"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "TileTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "TileTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "LiquidsToBeTicked"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "LiquidTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "LiquidTicks"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "PostProcessing"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Heightmaps"
net/minecraft/B/c/b/c.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/l;)Lnet/minecraft/l/d; -> "Structures"
net/minecraft/B/c/b/c.aG(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/h$d; -> "Level"
net/minecraft/B/c/b/c.aG(Lnet/minecraft/l/d;)Lnet/minecraft/B/c/h$d; -> "Status"
net/minecraft/B/c/b/d$b.<clinit>()V -> "HIGH"
net/minecraft/B/c/b/d$b.<clinit>()V -> "LOW"
net/minecraft/B/c/b/d.<init>(Ljava/io/File;ZLjava/lang/String;)V -> "IOWorker-"
net/minecraft/B/c/b/d.a(Lnet/minecraft/z/c/e;Lnet/minecraft/B/c/b/d$a;)V -> "Failed to store chunk {}"
net/minecraft/B/c/b/d.j(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Failed to read chunk {}"
net/minecraft/B/c/b/d.close()V -> "Failed to close storage"
net/minecraft/B/c/b/d.aVv()Lcom/mojang/datafixers/util/Either; -> "Failed to synchronized chunks"
net/minecraft/B/c/b/g.<init>(Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/B/c/b/i;Z)V -> "Expected directory, got "
net/minecraft/B/c/b/g.<init>(Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/B/c/b/i;Z)V -> "Region file {} has truncated header: {}"
net/minecraft/B/c/b/g.<init>(Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/B/c/b/i;Z)V -> "Region file {} has invalid sector at index: {}; sector {} overlaps with header"
net/minecraft/B/c/b/g.<init>(Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/B/c/b/i;Z)V -> "Region file {} has an invalid sector at index: {}; size has to be > 0"
net/minecraft/B/c/b/g.<init>(Ljava/nio/file/Path;Ljava/nio/file/Path;Lnet/minecraft/B/c/b/i;Z)V -> "Region file {} has an invalid sector at index: {}; sector {} is out of bounds"
net/minecraft/B/c/b/g.l(Lnet/minecraft/z/c/e;)Ljava/io/DataInputStream; -> "Chunk {} header is truncated: expected {} but read {}"
net/minecraft/B/c/b/g.l(Lnet/minecraft/z/c/e;)Ljava/io/DataInputStream; -> "Chunk {} is allocated, but stream is missing"
net/minecraft/B/c/b/g.l(Lnet/minecraft/z/c/e;)Ljava/io/DataInputStream; -> "Chunk has both internal and external streams"
net/minecraft/B/c/b/g.l(Lnet/minecraft/z/c/e;)Ljava/io/DataInputStream; -> "Chunk {} stream is truncated: expected {} but read {}"
net/minecraft/B/c/b/g.l(Lnet/minecraft/z/c/e;)Ljava/io/DataInputStream; -> "Declared size {} of chunk {} is negative"
net/minecraft/B/c/b/g.a(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/B/c/b/g$b; -> "tmp"
net/minecraft/B/c/b/g.a(Lnet/minecraft/z/c/e;Ljava/nio/ByteBuffer;)V -> "Saving oversized chunk {} ({} bytes} to external file {}"
net/minecraft/B/c/b/g.a(Lnet/minecraft/z/c/e;B)Ljava/io/DataInputStream; -> "External chunk path {} is not file"
net/minecraft/B/c/b/g.a(Lnet/minecraft/z/c/e;BLjava/io/InputStream;)Ljava/io/DataInputStream; -> "Chunk {} has invalid chunk stream version {}"
net/minecraft/B/c/b/g.k(Lnet/minecraft/z/c/e;)Ljava/nio/file/Path; -> "c."
net/minecraft/B/c/b/g.k(Lnet/minecraft/z/c/e;)Ljava/nio/file/Path; -> "."
net/minecraft/B/c/b/g.k(Lnet/minecraft/z/c/e;)Ljava/nio/file/Path; -> ".mcc"
net/minecraft/B/c/b/h.q(Lnet/minecraft/z/c/e;)Lnet/minecraft/B/c/b/g; -> "r."
net/minecraft/B/c/b/h.q(Lnet/minecraft/z/c/e;)Lnet/minecraft/B/c/b/g; -> "."
net/minecraft/B/c/b/h.q(Lnet/minecraft/z/c/e;)Lnet/minecraft/B/c/b/g; -> ".mca"
net/minecraft/B/c/b/j.s(Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Error reading chunk {} data from disk"
net/minecraft/B/c/b/j.a(Lnet/minecraft/z/c/e;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V -> "Sections"
net/minecraft/B/c/b/j.a(Lnet/minecraft/z/c/e;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "Sections"
net/minecraft/B/c/b/j.a(Lnet/minecraft/z/c/e;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "DataVersion"
net/minecraft/B/c/b/j.t(Lnet/minecraft/z/c/e;)V -> "Expected compound tag, got {}"
net/minecraft/B/c/b/j.aV(Lcom/mojang/serialization/Dynamic;)I -> "DataVersion"
net/minecraft/B/c/b/j.aD(J)V -> "No data for position: {}"
net/minecraft/B/c/d.<init>(Lnet/minecraft/z/c/e;Lnet/minecraft/z/d/g;[Lnet/minecraft/B/c/g;Lnet/minecraft/B/c/e;Lnet/minecraft/B/c/e;)V -> "Could not set level chunk sections, array length is {} instead of {}"
net/minecraft/B/c/d.aC(Lnet/minecraft/l/d;)V -> "x"
net/minecraft/B/c/d.aC(Lnet/minecraft/l/d;)V -> "y"
net/minecraft/B/c/d.aC(Lnet/minecraft/l/d;)V -> "z"
net/minecraft/B/c/f.c(Lnet/minecraft/B/e/g$a;)Ljava/util/BitSet; -> "Meaningless in this context"
net/minecraft/B/c/f.d(Lnet/minecraft/B/e/g$a;)Ljava/util/BitSet; -> "Meaningless in this context"
net/minecraft/B/c/h$d.<clinit>()V -> "PROTOCHUNK"
net/minecraft/B/c/h$d.<clinit>()V -> "LEVELCHUNK"
net/minecraft/B/c/h.<clinit>()V -> "empty"
net/minecraft/B/c/h.<clinit>()V -> "structure_starts"
net/minecraft/B/c/h.<clinit>()V -> "structure_references"
net/minecraft/B/c/h.<clinit>()V -> "biomes"
net/minecraft/B/c/h.<clinit>()V -> "noise"
net/minecraft/B/c/h.<clinit>()V -> "surface"
net/minecraft/B/c/h.<clinit>()V -> "carvers"
net/minecraft/B/c/h.<clinit>()V -> "liquid_carvers"
net/minecraft/B/c/h.<clinit>()V -> "features"
net/minecraft/B/c/h.<clinit>()V -> "light"
net/minecraft/B/c/h.<clinit>()V -> "spawn"
net/minecraft/B/c/h.<clinit>()V -> "heightmaps"
net/minecraft/B/c/h.<clinit>()V -> "full"
net/minecraft/B/c/i.toString()Ljava/lang/String; -> " "
net/minecraft/B/c/i.toString()Ljava/lang/String; -> "..."
net/minecraft/B/c/j.<init>(Ljava/util/List;Ljava/util/concurrent/Executor;I)V -> "sorter"
net/minecraft/B/c/j.b(Ljava/lang/Long;)Ljava/lang/String; -> ":"
net/minecraft/B/c/j.b(Lnet/minecraft/z/a/b;)Lnet/minecraft/B/c/i; -> "No queue for: "
net/minecraft/B/c/j.b(Lnet/minecraft/z/a/b;ZLnet/minecraft/z/a/b;)V -> "chunk priority sorter around "
net/minecraft/B/c/j.b(Lnet/minecraft/z/a/b;Lnet/minecraft/z/a/b;)V -> "chunk priority sorter around "
net/minecraft/B/c/j.a(ILnet/minecraft/z/a/b;)Lnet/minecraft/B/c/i; -> "_queue"
net/minecraft/B/c/j.w(Ljava/util/Map$Entry;)Ljava/lang/String; -> "=["
net/minecraft/B/c/j.w(Ljava/util/Map$Entry;)Ljava/lang/String; -> ","
net/minecraft/B/c/j.w(Ljava/util/Map$Entry;)Ljava/lang/String; -> "]"
net/minecraft/B/c/j.aVh()Ljava/lang/String; -> ","
net/minecraft/B/c/j.aVh()Ljava/lang/String; -> ", s="
net/minecraft/B/c/l.aC(Lnet/minecraft/l/d;)V -> "Trying to set a BlockEntity, but this operation is not supported."
net/minecraft/B/c/l.bV(Lnet/minecraft/z/c/b;)V -> "Trying to mark a block for PostProcessing @ {}, but this operation is not supported."
net/minecraft/B/c/n.<init>([B)V -> "ChunkNibbleArrays should be 2048 bytes not: "
net/minecraft/B/c/n.toString()Ljava/lang/String; -> "\n"
net/minecraft/B/c/n.toString()Ljava/lang/String; -> "\n"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "entity.minecraft.ender_dragon"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "DragonKilled"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "Dragon"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "Dragon"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "DragonKilled"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "PreviouslyKilled"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "IsRespawning"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "ExitPortalLocation"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "ExitPortalLocation"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "Gateways"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "Gateways"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "   #   "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "   #   "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "   #   "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "  ###  "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> " #   # "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "#     #"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "#  #  #"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "#     #"
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> " #   # "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "  ###  "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "  ###  "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> " ##### "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> " ##### "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> " ##### "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "  ###  "
net/minecraft/B/d/a.<init>(Lnet/minecraft/B/i/f;JLnet/minecraft/l/d;)V -> "       "
net/minecraft/B/d/a.a(Lnet/minecraft/g/d/c;Lnet/minecraft/z/t;)V -> "Aborting respawn sequence"
net/minecraft/B/d/a.a(Lnet/minecraft/B/d/b;)V -> "Dragon respawn isn't in progress, can't skip ahead in the animation."
net/minecraft/B/d/a.Wk()Lnet/minecraft/l/d; -> "Dragon"
net/minecraft/B/d/a.Wk()Lnet/minecraft/l/d; -> "DragonKilled"
net/minecraft/B/d/a.Wk()Lnet/minecraft/l/d; -> "PreviouslyKilled"
net/minecraft/B/d/a.Wk()Lnet/minecraft/l/d; -> "ExitPortalLocation"
net/minecraft/B/d/a.Wk()Lnet/minecraft/l/d; -> "Gateways"
net/minecraft/B/d/a.aVO()V -> "Tried to respawn, but need to find the portal first."
net/minecraft/B/d/a.aVO()V -> "Couldn't find a portal, so we made one."
net/minecraft/B/d/a.aVO()V -> "Found the exit portal & temporarily using it."
net/minecraft/B/d/a.aVO()V -> "Found all crystals, respawning dragon."
net/minecraft/B/d/a.aVD()V -> "Scanning for legacy world dragon fight..."
net/minecraft/B/d/a.aVD()V -> "Found that the dragon has been killed in this world already."
net/minecraft/B/d/a.aVD()V -> "Found that the dragon has not yet been killed in this world."
net/minecraft/B/d/a.aVD()V -> "Found that there's a dragon still alive ({})"
net/minecraft/B/d/a.aVD()V -> "But we didn't have a portal, let's remove it."
net/minecraft/B/d/a.aVE()V -> "Haven't seen the dragon, respawning it"
net/minecraft/B/d/a.aVE()V -> "Haven't seen our dragon, but found another one to use."
net/minecraft/B/d/a.aVJ()V -> "Found {} end crystals still alive"
net/minecraft/B/d/b.<clinit>()V -> "START"
net/minecraft/B/d/b.<clinit>()V -> "PREPARING_TO_SUMMON_PILLARS"
net/minecraft/B/d/b.<clinit>()V -> "SUMMONING_PILLARS"
net/minecraft/B/d/b.<clinit>()V -> "SUMMONING_DRAGON"
net/minecraft/B/d/b.<clinit>()V -> "END"
net/minecraft/B/e.<clinit>()V -> "overworld"
net/minecraft/B/e.<clinit>()V -> "the_nether"
net/minecraft/B/e.<clinit>()V -> "the_end"
net/minecraft/B/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "type"
net/minecraft/B/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "generator"
net/minecraft/B/e/a.<clinit>()V -> "noise"
net/minecraft/B/e/a.<clinit>()V -> "flat"
net/minecraft/B/e/a.<clinit>()V -> "debug"
net/minecraft/B/e/a.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/c/l;)V -> "Generating structure reference"
net/minecraft/B/e/a.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/c/l;)V -> "Structure"
net/minecraft/B/e/a.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/c/l;)V -> "Id"
net/minecraft/B/e/a.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/c/l;)V -> "Name"
net/minecraft/B/e/a.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/c/l;)V -> "Class"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "Biome decoration"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "Generation"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "CenterX"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "CenterZ"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "Seed"
net/minecraft/B/e/a.a(Lnet/minecraft/B/e/v;Lnet/minecraft/B/e/e/b/ab;)V -> "Biome"
net/minecraft/B/e/b/b.<clinit>()V -> "simple_block_placer"
net/minecraft/B/e/b/b.<clinit>()V -> "double_plant_placer"
net/minecraft/B/e/b/b.<clinit>()V -> "column_placer"
net/minecraft/B/e/b/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "min_size"
net/minecraft/B/e/b/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "extra_size"
net/minecraft/B/e/c.<clinit>()V -> "overworld"
net/minecraft/B/e/c.<clinit>()V -> "amplified"
net/minecraft/B/e/c.<clinit>()V -> "nether"
net/minecraft/B/e/c.<clinit>()V -> "end"
net/minecraft/B/e/c.<clinit>()V -> "caves"
net/minecraft/B/e/c.<clinit>()V -> "floating_islands"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "structures"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "noise"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "default_block"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "default_fluid"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bedrock_roof_position"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bedrock_floor_position"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "sea_level"
net/minecraft/B/e/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "disable_mob_generation"
net/minecraft/B/e/c/a.<clinit>()V -> "state"
net/minecraft/B/e/c/c.<clinit>()V -> "simple_state_provider"
net/minecraft/B/e/c/c.<clinit>()V -> "weighted_state_provider"
net/minecraft/B/e/c/c.<clinit>()V -> "plain_flower_provider"
net/minecraft/B/e/c/c.<clinit>()V -> "forest_flower_provider"
net/minecraft/B/e/c/c.<clinit>()V -> "rotated_block_provider"
net/minecraft/B/e/c/f.<clinit>()V -> "state"
net/minecraft/B/e/c/g.<clinit>()V -> "entries"
net/minecraft/B/e/c/g.d(Lnet/minecraft/z/aJ;)Lcom/mojang/serialization/DataResult; -> "WeightedStateProvider with no states"
net/minecraft/B/e/d.<clinit>()V -> "settings"
net/minecraft/B/e/d/d.<clinit>()V -> "cave"
net/minecraft/B/e/d/d.<clinit>()V -> "canyon"
net/minecraft/B/e/d/d.<clinit>()V -> "ocean_cave"
net/minecraft/B/e/d/d.<clinit>()V -> "underwater_canyon"
net/minecraft/B/e/d/d.<clinit>()V -> "underwater_cave"
net/minecraft/B/e/d/d.<clinit>()V -> "nether_cave"
net/minecraft/B/e/d/j.<init>(Lcom/mojang/serialization/Codec;I)V -> "config"
net/minecraft/B/e/d/j.<clinit>()V -> "cave"
net/minecraft/B/e/d/j.<clinit>()V -> "nether_cave"
net/minecraft/B/e/d/j.<clinit>()V -> "canyon"
net/minecraft/B/e/d/j.<clinit>()V -> "underwater_canyon"
net/minecraft/B/e/d/j.<clinit>()V -> "underwater_cave"
net/minecraft/B/e/e.<init>(Lnet/minecraft/z/e/e;Lnet/minecraft/B/e/i/b;Ljava/util/List;ZZLjava/util/Optional;)V -> "Unknown biome, defaulting to plains"
net/minecraft/B/e/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "structures"
net/minecraft/B/e/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "layers"
net/minecraft/B/e/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "lakes"
net/minecraft/B/e/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "features"
net/minecraft/B/e/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biome"
net/minecraft/B/e/e/D.toString()Ljava/lang/String; -> "< %s [%s] >"
net/minecraft/B/e/e/E.toString()Ljava/lang/String; -> "< %s [%s | %s] >"
net/minecraft/B/e/e/E.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "feature"
net/minecraft/B/e/e/E.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "decorator"
net/minecraft/B/e/e/H.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/am;)Z -> "Failed to fetch mob spawner entity at ({}, {}, {})"
net/minecraft/B/e/e/I.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "exit"
net/minecraft/B/e/e/I.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "exact"
net/minecraft/B/e/e/M$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "centerX"
net/minecraft/B/e/e/M$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "centerZ"
net/minecraft/B/e/e/M$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "radius"
net/minecraft/B/e/e/M$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/e/M$a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "guarded"
net/minecraft/B/e/e/N.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "crystal_invulnerable"
net/minecraft/B/e/e/N.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spikes"
net/minecraft/B/e/e/N.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "crystal_beam_target"
net/minecraft/B/e/e/O.<init>(Lcom/mojang/serialization/Codec;)V -> "config"
net/minecraft/B/e/e/O.<clinit>()V -> "no_op"
net/minecraft/B/e/e/O.<clinit>()V -> "tree"
net/minecraft/B/e/e/O.<clinit>()V -> "flower"
net/minecraft/B/e/e/O.<clinit>()V -> "no_bonemeal_flower"
net/minecraft/B/e/e/O.<clinit>()V -> "random_patch"
net/minecraft/B/e/e/O.<clinit>()V -> "block_pile"
net/minecraft/B/e/e/O.<clinit>()V -> "spring_feature"
net/minecraft/B/e/e/O.<clinit>()V -> "chorus_plant"
net/minecraft/B/e/e/O.<clinit>()V -> "emerald_ore"
net/minecraft/B/e/e/O.<clinit>()V -> "void_start_platform"
net/minecraft/B/e/e/O.<clinit>()V -> "desert_well"
net/minecraft/B/e/e/O.<clinit>()V -> "fossil"
net/minecraft/B/e/e/O.<clinit>()V -> "huge_red_mushroom"
net/minecraft/B/e/e/O.<clinit>()V -> "huge_brown_mushroom"
net/minecraft/B/e/e/O.<clinit>()V -> "ice_spike"
net/minecraft/B/e/e/O.<clinit>()V -> "glowstone_blob"
net/minecraft/B/e/e/O.<clinit>()V -> "freeze_top_layer"
net/minecraft/B/e/e/O.<clinit>()V -> "vines"
net/minecraft/B/e/e/O.<clinit>()V -> "monster_room"
net/minecraft/B/e/e/O.<clinit>()V -> "blue_ice"
net/minecraft/B/e/e/O.<clinit>()V -> "iceberg"
net/minecraft/B/e/e/O.<clinit>()V -> "forest_rock"
net/minecraft/B/e/e/O.<clinit>()V -> "disk"
net/minecraft/B/e/e/O.<clinit>()V -> "ice_patch"
net/minecraft/B/e/e/O.<clinit>()V -> "lake"
net/minecraft/B/e/e/O.<clinit>()V -> "ore"
net/minecraft/B/e/e/O.<clinit>()V -> "end_spike"
net/minecraft/B/e/e/O.<clinit>()V -> "end_island"
net/minecraft/B/e/e/O.<clinit>()V -> "end_gateway"
net/minecraft/B/e/e/O.<clinit>()V -> "seagrass"
net/minecraft/B/e/e/O.<clinit>()V -> "kelp"
net/minecraft/B/e/e/O.<clinit>()V -> "coral_tree"
net/minecraft/B/e/e/O.<clinit>()V -> "coral_mushroom"
net/minecraft/B/e/e/O.<clinit>()V -> "coral_claw"
net/minecraft/B/e/e/O.<clinit>()V -> "sea_pickle"
net/minecraft/B/e/e/O.<clinit>()V -> "simple_block"
net/minecraft/B/e/e/O.<clinit>()V -> "bamboo"
net/minecraft/B/e/e/O.<clinit>()V -> "huge_fungus"
net/minecraft/B/e/e/O.<clinit>()V -> "nether_forest_vegetation"
net/minecraft/B/e/e/O.<clinit>()V -> "weeping_vines"
net/minecraft/B/e/e/O.<clinit>()V -> "twisting_vines"
net/minecraft/B/e/e/O.<clinit>()V -> "basalt_columns"
net/minecraft/B/e/e/O.<clinit>()V -> "delta_feature"
net/minecraft/B/e/e/O.<clinit>()V -> "netherrack_replace_blobs"
net/minecraft/B/e/e/O.<clinit>()V -> "fill_layer"
net/minecraft/B/e/e/O.<clinit>()V -> "bonus_chest"
net/minecraft/B/e/e/O.<clinit>()V -> "basalt_pillar"
net/minecraft/B/e/e/O.<clinit>()V -> "no_surface_ore"
net/minecraft/B/e/e/O.<clinit>()V -> "random_selector"
net/minecraft/B/e/e/O.<clinit>()V -> "simple_random_selector"
net/minecraft/B/e/e/O.<clinit>()V -> "random_boolean_selector"
net/minecraft/B/e/e/O.<clinit>()V -> "decorated"
net/minecraft/B/e/e/P.<clinit>()V -> "two_layers_feature_size"
net/minecraft/B/e/e/P.<clinit>()V -> "three_layers_feature_size"
net/minecraft/B/e/e/Q.toString()Ljava/lang/String; -> "["
net/minecraft/B/e/e/Q.b(Lnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> "Spread must be non-negative, got: "
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> "Spread too big: "
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> " > "
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> "Base value out of range: "
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> " ["
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> "-"
net/minecraft/B/e/e/Q.a(IIILnet/minecraft/B/e/e/Q;)Lcom/mojang/serialization/DataResult; -> "]"
net/minecraft/B/e/e/Q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "base"
net/minecraft/B/e/e/Q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spread"
net/minecraft/B/e/e/R.<clinit>()V -> "count"
net/minecraft/B/e/e/S.<clinit>()V -> "end_spike"
net/minecraft/B/e/e/S.<clinit>()V -> "end_gateway"
net/minecraft/B/e/e/S.<clinit>()V -> "end_gateway_delayed"
net/minecraft/B/e/e/S.<clinit>()V -> "chorus_plant"
net/minecraft/B/e/e/S.<clinit>()V -> "end_island"
net/minecraft/B/e/e/S.<clinit>()V -> "end_island_decorated"
net/minecraft/B/e/e/S.<clinit>()V -> "delta"
net/minecraft/B/e/e/S.<clinit>()V -> "small_basalt_columns"
net/minecraft/B/e/e/S.<clinit>()V -> "large_basalt_columns"
net/minecraft/B/e/e/S.<clinit>()V -> "basalt_blobs"
net/minecraft/B/e/e/S.<clinit>()V -> "blackstone_blobs"
net/minecraft/B/e/e/S.<clinit>()V -> "glowstone_extra"
net/minecraft/B/e/e/S.<clinit>()V -> "glowstone"
net/minecraft/B/e/e/S.<clinit>()V -> "crimson_forest_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "warped_forest_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "nether_sprouts"
net/minecraft/B/e/e/S.<clinit>()V -> "twisting_vines"
net/minecraft/B/e/e/S.<clinit>()V -> "weeping_vines"
net/minecraft/B/e/e/S.<clinit>()V -> "basalt_pillar"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_cold"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_deep_cold"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_normal"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_river"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_deep"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_swamp"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_warm"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_deep_warm"
net/minecraft/B/e/e/S.<clinit>()V -> "sea_pickle"
net/minecraft/B/e/e/S.<clinit>()V -> "ice_spike"
net/minecraft/B/e/e/S.<clinit>()V -> "ice_patch"
net/minecraft/B/e/e/S.<clinit>()V -> "forest_rock"
net/minecraft/B/e/e/S.<clinit>()V -> "seagrass_simple"
net/minecraft/B/e/e/S.<clinit>()V -> "iceberg_packed"
net/minecraft/B/e/e/S.<clinit>()V -> "iceberg_blue"
net/minecraft/B/e/e/S.<clinit>()V -> "kelp_cold"
net/minecraft/B/e/e/S.<clinit>()V -> "kelp_warm"
net/minecraft/B/e/e/S.<clinit>()V -> "blue_ice"
net/minecraft/B/e/e/S.<clinit>()V -> "bamboo_light"
net/minecraft/B/e/e/S.<clinit>()V -> "bamboo"
net/minecraft/B/e/e/S.<clinit>()V -> "vines"
net/minecraft/B/e/e/S.<clinit>()V -> "lake_water"
net/minecraft/B/e/e/S.<clinit>()V -> "lake_lava"
net/minecraft/B/e/e/S.<clinit>()V -> "disk_clay"
net/minecraft/B/e/e/S.<clinit>()V -> "disk_gravel"
net/minecraft/B/e/e/S.<clinit>()V -> "disk_sand"
net/minecraft/B/e/e/S.<clinit>()V -> "freeze_top_layer"
net/minecraft/B/e/e/S.<clinit>()V -> "bonus_chest"
net/minecraft/B/e/e/S.<clinit>()V -> "void_start_platform"
net/minecraft/B/e/e/S.<clinit>()V -> "monster_room"
net/minecraft/B/e/e/S.<clinit>()V -> "desert_well"
net/minecraft/B/e/e/S.<clinit>()V -> "fossil"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_lava_double"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_lava"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_delta"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_closed"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_closed_double"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_open"
net/minecraft/B/e/e/S.<clinit>()V -> "spring_water"
net/minecraft/B/e/e/S.<clinit>()V -> "pile_hay"
net/minecraft/B/e/e/S.<clinit>()V -> "pile_melon"
net/minecraft/B/e/e/S.<clinit>()V -> "pile_snow"
net/minecraft/B/e/e/S.<clinit>()V -> "pile_ice"
net/minecraft/B/e/e/S.<clinit>()V -> "pile_pumpkin"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_fire"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_soul_fire"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_brown_mushroom"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_red_mushroom"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_crimson_roots"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_sunflower"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_pumpkin"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_taiga_grass"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_berry_bush"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_plain"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_forest"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_badlands"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_savanna"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_normal"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_taiga_2"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_taiga"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_grass_jungle"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_dead_bush_2"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_dead_bush"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_dead_bush_badlands"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_melon"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_berry_sparse"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_berry_decorated"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_waterlilly"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_tall_grass_2"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_tall_grass"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_large_fern"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_cactus"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_cactus_desert"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_cactus_decorated"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_sugar_cane_swamp"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_sugar_cane_desert"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_sugar_cane_badlands"
net/minecraft/B/e/e/S.<clinit>()V -> "patch_sugar_cane"
net/minecraft/B/e/e/S.<clinit>()V -> "brown_mushroom_nether"
net/minecraft/B/e/e/S.<clinit>()V -> "red_mushroom_nether"
net/minecraft/B/e/e/S.<clinit>()V -> "brown_mushroom_normal"
net/minecraft/B/e/e/S.<clinit>()V -> "red_mushroom_normal"
net/minecraft/B/e/e/S.<clinit>()V -> "brown_mushroom_taiga"
net/minecraft/B/e/e/S.<clinit>()V -> "red_mushroom_taiga"
net/minecraft/B/e/e/S.<clinit>()V -> "brown_mushroom_giant"
net/minecraft/B/e/e/S.<clinit>()V -> "red_mushroom_giant"
net/minecraft/B/e/e/S.<clinit>()V -> "brown_mushroom_swamp"
net/minecraft/B/e/e/S.<clinit>()V -> "red_mushroom_swamp"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_magma"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_soul_sand"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gold_deltas"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_quartz_deltas"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gold_nether"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_quartz_nether"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gravel_nether"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_blackstone"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_dirt"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gravel"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_granite"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_diorite"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_andesite"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_coal"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_iron"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gold_extra"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_gold"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_redstone"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_diamond"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_lapis"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_infested"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_emerald"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_debris_large"
net/minecraft/B/e/e/S.<clinit>()V -> "ore_debris_small"
net/minecraft/B/e/e/S.<clinit>()V -> "crimson_fungi"
net/minecraft/B/e/e/S.<clinit>()V -> "crimson_fungi_planted"
net/minecraft/B/e/e/S.<clinit>()V -> "warped_fungi"
net/minecraft/B/e/e/S.<clinit>()V -> "warped_fungi_planted"
net/minecraft/B/e/e/S.<clinit>()V -> "huge_brown_mushroom"
net/minecraft/B/e/e/S.<clinit>()V -> "huge_red_mushroom"
net/minecraft/B/e/e/S.<clinit>()V -> "oak"
net/minecraft/B/e/e/S.<clinit>()V -> "dark_oak"
net/minecraft/B/e/e/S.<clinit>()V -> "birch"
net/minecraft/B/e/e/S.<clinit>()V -> "acacia"
net/minecraft/B/e/e/S.<clinit>()V -> "spruce"
net/minecraft/B/e/e/S.<clinit>()V -> "pine"
net/minecraft/B/e/e/S.<clinit>()V -> "jungle_tree"
net/minecraft/B/e/e/S.<clinit>()V -> "fancy_oak"
net/minecraft/B/e/e/S.<clinit>()V -> "jungle_tree_no_vine"
net/minecraft/B/e/e/S.<clinit>()V -> "mega_jungle_tree"
net/minecraft/B/e/e/S.<clinit>()V -> "mega_spruce"
net/minecraft/B/e/e/S.<clinit>()V -> "mega_pine"
net/minecraft/B/e/e/S.<clinit>()V -> "super_birch_bees_0002"
net/minecraft/B/e/e/S.<clinit>()V -> "swamp_tree"
net/minecraft/B/e/e/S.<clinit>()V -> "jungle_bush"
net/minecraft/B/e/e/S.<clinit>()V -> "oak_bees_0002"
net/minecraft/B/e/e/S.<clinit>()V -> "oak_bees_002"
net/minecraft/B/e/e/S.<clinit>()V -> "oak_bees_005"
net/minecraft/B/e/e/S.<clinit>()V -> "birch_bees_0002"
net/minecraft/B/e/e/S.<clinit>()V -> "birch_bees_002"
net/minecraft/B/e/e/S.<clinit>()V -> "birch_bees_005"
net/minecraft/B/e/e/S.<clinit>()V -> "fancy_oak_bees_0002"
net/minecraft/B/e/e/S.<clinit>()V -> "fancy_oak_bees_002"
net/minecraft/B/e/e/S.<clinit>()V -> "fancy_oak_bees_005"
net/minecraft/B/e/e/S.<clinit>()V -> "oak_badlands"
net/minecraft/B/e/e/S.<clinit>()V -> "spruce_snowy"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_warm"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_default"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_forest"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_swamp"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_plain"
net/minecraft/B/e/e/S.<clinit>()V -> "flower_plain_decorated"
net/minecraft/B/e/e/S.<clinit>()V -> "forest_flower_vegetation_common"
net/minecraft/B/e/e/S.<clinit>()V -> "forest_flower_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "dark_forest_vegetation_brown"
net/minecraft/B/e/e/S.<clinit>()V -> "dark_forest_vegetation_red"
net/minecraft/B/e/e/S.<clinit>()V -> "warm_ocean_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "forest_flower_trees"
net/minecraft/B/e/e/S.<clinit>()V -> "taiga_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_shattered_savanna"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_savanna"
net/minecraft/B/e/e/S.<clinit>()V -> "birch_tall"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_birch"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_mountain_edge"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_mountain"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_water"
net/minecraft/B/e/e/S.<clinit>()V -> "birch_other"
net/minecraft/B/e/e/S.<clinit>()V -> "plain_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_jungle_edge"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_giant_spruce"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_giant"
net/minecraft/B/e/e/S.<clinit>()V -> "trees_jungle"
net/minecraft/B/e/e/S.<clinit>()V -> "bamboo_vegetation"
net/minecraft/B/e/e/S.<clinit>()V -> "mushroom_field_vegetation"
net/minecraft/B/e/e/T.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/e/T.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_1"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_2"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_3"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_4"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_1_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_2_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_3_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/spine_4_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_1"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_2"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_3"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_4"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_1_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_2_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_3_coal"
net/minecraft/B/e/e/W.<clinit>()V -> "fossil/skull_4_coal"
net/minecraft/B/e/e/Y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "valid_base_block"
net/minecraft/B/e/e/Y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "stem_state"
net/minecraft/B/e/e/Y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "hat_state"
net/minecraft/B/e/e/Y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "decor_state"
net/minecraft/B/e/e/Y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "planted"
net/minecraft/B/e/e/a/a.toString()Ljava/lang/String; -> "Empty"
net/minecraft/B/e/e/a/b.toString()Ljava/lang/String; -> "Feature["
net/minecraft/B/e/e/a/b.toString()Ljava/lang/String; -> "]"
net/minecraft/B/e/e/a/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "feature"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "name"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "minecraft:bottom"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "final_state"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "minecraft:air"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "pool"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "minecraft:empty"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "target"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "minecraft:empty"
net/minecraft/B/e/e/a/b.aXI()Lnet/minecraft/l/d; -> "joint"
net/minecraft/B/e/e/a/c.<clinit>()V -> "single_pool_element"
net/minecraft/B/e/e/a/c.<clinit>()V -> "list_pool_element"
net/minecraft/B/e/e/a/c.<clinit>()V -> "feature_pool_element"
net/minecraft/B/e/e/a/c.<clinit>()V -> "empty_pool_element"
net/minecraft/B/e/e/a/c.<clinit>()V -> "legacy_single_pool_element"
net/minecraft/B/e/e/a/d.toString()Ljava/lang/String; -> "JigsawJunction{sourceX="
net/minecraft/B/e/e/a/d.toString()Ljava/lang/String; -> ", sourceGroundY="
net/minecraft/B/e/e/a/d.toString()Ljava/lang/String; -> ", sourceZ="
net/minecraft/B/e/e/a/d.toString()Ljava/lang/String; -> ", deltaY="
net/minecraft/B/e/e/a/d.toString()Ljava/lang/String; -> ", destProjection="
net/minecraft/B/e/e/a/d.g(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "source_x"
net/minecraft/B/e/e/a/d.g(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "source_ground_y"
net/minecraft/B/e/e/a/d.g(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "source_z"
net/minecraft/B/e/e/a/d.g(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "delta_y"
net/minecraft/B/e/e/a/d.g(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; -> "dest_proj"
net/minecraft/B/e/e/a/d.aW(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/e/a/d; -> "source_x"
net/minecraft/B/e/e/a/d.aW(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/e/a/d; -> "source_ground_y"
net/minecraft/B/e/e/a/d.aW(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/e/a/d; -> "source_z"
net/minecraft/B/e/e/a/d.aW(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/e/a/d; -> "delta_y"
net/minecraft/B/e/e/a/d.aW(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/e/a/d; -> "dest_proj"
net/minecraft/B/e/e/a/e$a.a(Lnet/minecraft/z/c/m;Lnet/minecraft/B/e/e/c/C$b;)I -> "pool"
net/minecraft/B/e/e/a/e$a.a(Lnet/minecraft/B/e/e/b/a;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V -> "pool"
net/minecraft/B/e/e/a/e$a.a(Lnet/minecraft/B/e/e/b/a;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V -> "Empty or none existent fallback pool: {}"
net/minecraft/B/e/e/a/e$a.a(Lnet/minecraft/B/e/e/b/a;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V -> "Empty or none existent pool: {}"
net/minecraft/B/e/e/a/f.<clinit>()V -> "DOWN_EAST"
net/minecraft/B/e/e/a/f.<clinit>()V -> "down_east"
net/minecraft/B/e/e/a/f.<clinit>()V -> "DOWN_NORTH"
net/minecraft/B/e/e/a/f.<clinit>()V -> "down_north"
net/minecraft/B/e/e/a/f.<clinit>()V -> "DOWN_SOUTH"
net/minecraft/B/e/e/a/f.<clinit>()V -> "down_south"
net/minecraft/B/e/e/a/f.<clinit>()V -> "DOWN_WEST"
net/minecraft/B/e/e/a/f.<clinit>()V -> "down_west"
net/minecraft/B/e/e/a/f.<clinit>()V -> "UP_EAST"
net/minecraft/B/e/e/a/f.<clinit>()V -> "up_east"
net/minecraft/B/e/e/a/f.<clinit>()V -> "UP_NORTH"
net/minecraft/B/e/e/a/f.<clinit>()V -> "up_north"
net/minecraft/B/e/e/a/f.<clinit>()V -> "UP_SOUTH"
net/minecraft/B/e/e/a/f.<clinit>()V -> "up_south"
net/minecraft/B/e/e/a/f.<clinit>()V -> "UP_WEST"
net/minecraft/B/e/e/a/f.<clinit>()V -> "up_west"
net/minecraft/B/e/e/a/f.<clinit>()V -> "WEST_UP"
net/minecraft/B/e/e/a/f.<clinit>()V -> "west_up"
net/minecraft/B/e/e/a/f.<clinit>()V -> "EAST_UP"
net/minecraft/B/e/e/a/f.<clinit>()V -> "east_up"
net/minecraft/B/e/e/a/f.<clinit>()V -> "NORTH_UP"
net/minecraft/B/e/e/a/f.<clinit>()V -> "north_up"
net/minecraft/B/e/e/a/f.<clinit>()V -> "SOUTH_UP"
net/minecraft/B/e/e/a/f.<clinit>()V -> "south_up"
net/minecraft/B/e/e/a/g$a.<clinit>()V -> "TERRAIN_MATCHING"
net/minecraft/B/e/e/a/g$a.<clinit>()V -> "terrain_matching"
net/minecraft/B/e/e/a/g$a.<clinit>()V -> "RIGID"
net/minecraft/B/e/e/a/g$a.<clinit>()V -> "rigid"
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "name"
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "fallback"
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "element"
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "weight"
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "Pool element: "
net/minecraft/B/e/e/a/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "elements"
net/minecraft/B/e/e/a/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/a/i.<clinit>()V -> "element_type"
net/minecraft/B/e/e/a/i.aXS()Lcom/mojang/serialization/codecs/RecordCodecBuilder; -> "projection"
net/minecraft/B/e/e/a/j.toString()Ljava/lang/String; -> "LegacySingle["
net/minecraft/B/e/e/a/j.toString()Ljava/lang/String; -> "]"
net/minecraft/B/e/e/a/k.<init>(Ljava/util/List;Lnet/minecraft/B/e/e/a/g$a;)V -> "Elements are empty"
net/minecraft/B/e/e/a/k.toString()Ljava/lang/String; -> "List["
net/minecraft/B/e/e/a/k.toString()Ljava/lang/String; -> ", "
net/minecraft/B/e/e/a/k.toString()Ljava/lang/String; -> "]"
net/minecraft/B/e/e/a/k.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "elements"
net/minecraft/B/e/e/a/l.toString()Ljava/lang/String; -> "Single["
net/minecraft/B/e/e/a/l.toString()Ljava/lang/String; -> "]"
net/minecraft/B/e/e/a/l.a(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; -> "Can not serialize a runtime pool element"
net/minecraft/B/e/e/a/l.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Z)Ljava/util/List; -> "mode"
net/minecraft/B/e/e/a/l.aXX()Lcom/mojang/serialization/codecs/RecordCodecBuilder; -> "processors"
net/minecraft/B/e/e/a/l.aXY()Lcom/mojang/serialization/codecs/RecordCodecBuilder; -> "location"
net/minecraft/B/e/e/aD.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "limit"
net/minecraft/B/e/e/aD.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "upper_limit"
net/minecraft/B/e/e/aD.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "lower_size"
net/minecraft/B/e/e/aD.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "middle_size"
net/minecraft/B/e/e/aD.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "upper_size"
net/minecraft/B/e/e/aG.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "feature_true"
net/minecraft/B/e/e/aG.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "feature_false"
net/minecraft/B/e/e/aI.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "limit"
net/minecraft/B/e/e/aI.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "lower_size"
net/minecraft/B/e/e/aI.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "upper_size"
net/minecraft/B/e/e/ah.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/ah.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "requires_block_below"
net/minecraft/B/e/e/ah.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "rock_count"
net/minecraft/B/e/e/ah.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "hole_count"
net/minecraft/B/e/e/ah.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "valid_blocks"
net/minecraft/B/e/e/ai.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "features"
net/minecraft/B/e/e/ai.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "default"
net/minecraft/B/e/e/ap.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "target"
net/minecraft/B/e/e/ap.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/ap.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size"
net/minecraft/B/e/e/aq.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/e/e/as.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "target"
net/minecraft/B/e/e/as.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/au.<clinit>()V -> "portal_type"
net/minecraft/B/e/e/ax.<clinit>()V -> "features"
net/minecraft/B/e/e/az.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/az.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "radius"
net/minecraft/B/e/e/az.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "half_height"
net/minecraft/B/e/e/az.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "targets"
net/minecraft/B/e/e/b.aWO()Lcom/mojang/serialization/codecs/RecordCodecBuilder; -> "min_clipped_height"
net/minecraft/B/e/e/b/A.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/e/e/b/A.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "type"
net/minecraft/B/e/e/b/B$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hr"
net/minecraft/B/e/e/b/B$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "sc"
net/minecraft/B/e/e/b/B$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hps"
net/minecraft/B/e/e/b/B$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Num"
net/minecraft/B/e/e/b/B$a.A(Lnet/minecraft/l/d;)V -> "hr"
net/minecraft/B/e/e/b/B$a.A(Lnet/minecraft/l/d;)V -> "sc"
net/minecraft/B/e/e/b/B$a.A(Lnet/minecraft/l/d;)V -> "hps"
net/minecraft/B/e/e/b/B$a.A(Lnet/minecraft/l/d;)V -> "Num"
net/minecraft/B/e/e/b/B$b.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "tf"
net/minecraft/B/e/e/b/B$b.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "D"
net/minecraft/B/e/e/b/B$b.A(Lnet/minecraft/l/d;)V -> "tf"
net/minecraft/B/e/e/b/B$b.A(Lnet/minecraft/l/d;)V -> "D"
net/minecraft/B/e/e/b/B$c.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "MST"
net/minecraft/B/e/e/b/B$c.A(Lnet/minecraft/l/d;)V -> "MST"
net/minecraft/B/e/e/b/B$d.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Entrances"
net/minecraft/B/e/e/b/B$d.A(Lnet/minecraft/l/d;)V -> "Entrances"
net/minecraft/B/e/e/b/C$b.<clinit>()V -> "NORMAL"
net/minecraft/B/e/e/b/C$b.<clinit>()V -> "normal"
net/minecraft/B/e/e/b/C$b.<clinit>()V -> "MESA"
net/minecraft/B/e/e/b/C$b.<clinit>()V -> "mesa"
net/minecraft/B/e/e/b/E$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/E$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/E$a.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/E$a.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_1"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_2"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_3"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_4"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_5"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_6"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_7"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_8"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_9"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_10"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_11"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_12"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_13"
net/minecraft/B/e/e/b/E.<clinit>()V -> "nether_fossils/fossil_14"
net/minecraft/B/e/e/b/I.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biome_temp"
net/minecraft/B/e/e/b/I.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "large_probability"
net/minecraft/B/e/e/b/I.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "cluster_probability"
net/minecraft/B/e/e/b/J$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/J$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/J$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Integrity"
net/minecraft/B/e/e/b/J$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "BiomeType"
net/minecraft/B/e/e/b/J$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "IsLarge"
net/minecraft/B/e/e/b/J$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "chest"
net/minecraft/B/e/e/b/J$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "drowned"
net/minecraft/B/e/e/b/J$a.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/J$a.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/J$a.A(Lnet/minecraft/l/d;)V -> "Integrity"
net/minecraft/B/e/e/b/J$a.A(Lnet/minecraft/l/d;)V -> "BiomeType"
net/minecraft/B/e/e/b/J$a.A(Lnet/minecraft/l/d;)V -> "IsLarge"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_4"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_5"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_6"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_7"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/warm_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_4"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_5"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_6"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_7"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/brick_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_4"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_5"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_6"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_7"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/cracked_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_4"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_5"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_6"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_7"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/mossy_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_brick_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_brick_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_brick_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_brick_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_mossy_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_mossy_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_mossy_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_mossy_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_cracked_1"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_cracked_2"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_cracked_3"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_cracked_8"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_warm_4"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_warm_5"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_warm_6"
net/minecraft/B/e/e/b/J.<clinit>()V -> "underwater_ruin/big_warm_7"
net/minecraft/B/e/e/b/K$b.<clinit>()V -> "WARM"
net/minecraft/B/e/e/b/K$b.<clinit>()V -> "warm"
net/minecraft/B/e/e/b/K$b.<clinit>()V -> "COLD"
net/minecraft/B/e/e/b/K$b.<clinit>()V -> "cold"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/base_plates"
net/minecraft/B/e/e/b/L.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/base_plate"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/towers"
net/minecraft/B/e/e/b/L.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/watchtower"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/watchtower_overgrown"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_plates"
net/minecraft/B/e/e/b/L.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_plate"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/features"
net/minecraft/B/e/e/b/L.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_cage1"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_cage2"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_logs"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_tent1"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_tent2"
net/minecraft/B/e/e/b/L.<clinit>()V -> "pillager_outpost/feature_targets"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/town_centers"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/town_centers/plains_fountain_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/town_centers/plains_meeting_point_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/town_centers/plains_meeting_point_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/town_centers/plains_meeting_point_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/town_centers/plains_fountain_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/town_centers/plains_meeting_point_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/town_centers/plains_meeting_point_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/town_centers/plains_meeting_point_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/corner_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/corner_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/corner_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_04"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_05"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/straight_06"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_04"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_05"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/crossroad_06"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/streets/turn_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/corner_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/corner_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/corner_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_04"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_05"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/straight_06"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_04"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_05"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/crossroad_06"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/streets/turn_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_5"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_6"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_7"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_house_8"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_medium_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_medium_house_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_big_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_butcher_shop_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_butcher_shop_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_tool_smith_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_fletcher_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_shepherds_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_armorer_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_fisher_cottage_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_tannery_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_cartographer_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_library_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_library_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_masons_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_weaponsmith_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_temple_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_temple_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_stable_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_stable_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_large_farm_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_farm_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_animal_pen_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_animal_pen_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_animal_pen_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_accessory_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_meeting_point_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_meeting_point_5"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_5"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_6"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_7"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_small_house_8"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_medium_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_medium_house_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_big_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_butcher_shop_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_butcher_shop_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_tool_smith_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_fletcher_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_shepherds_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_armorer_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_fisher_cottage_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_tannery_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_cartographer_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_library_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_library_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_masons_house_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_weaponsmith_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_temple_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_temple_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_stable_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_stable_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_large_farm_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_small_farm_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_animal_pen_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/houses/plains_animal_pen_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_animal_pen_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_meeting_point_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/houses/plains_meeting_point_5"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators/terminator_01"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators/terminator_02"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators/terminator_03"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/terminators/terminator_04"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/trees"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/decor"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/plains_lamp_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/decor"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/plains_lamp_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/villagers"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/villagers/nitwit"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/villagers/baby"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/villagers/unemployed"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/villagers"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/villagers/nitwit"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/plains/zombie/villagers/unemployed"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cows_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/pigs_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/horses_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/horses_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/horses_3"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/horses_4"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/horses_5"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/sheep"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/cats"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_black"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_british"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_calico"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_persian"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_ragdoll"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_red"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_siamese"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_tabby"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_white"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cat_jellie"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/butcher_animals"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/cows_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/pigs_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_1"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/animals/sheep_2"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/iron_golem"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/iron_golem"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/well_bottoms"
net/minecraft/B/e/e/b/N.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/N.<clinit>()V -> "village/common/well_bottom"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "ON_LAND_SURFACE"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "on_land_surface"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "PARTLY_BURIED"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "partly_buried"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "ON_OCEAN_FLOOR"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "on_ocean_floor"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "IN_MOUNTAIN"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "in_mountain"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "UNDERGROUND"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "underground"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "IN_NETHER"
net/minecraft/B/e/e/b/O$a.<clinit>()V -> "in_nether"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "cold"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "mossiness"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "air_pocket"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "overgrown"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "vines"
net/minecraft/B/e/e/b/O$b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "replace_with_blackstone"
net/minecraft/B/e/e/b/O.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/O.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rotation"
net/minecraft/B/e/e/b/O.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Mirror"
net/minecraft/B/e/e/b/O.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "VerticalPlacement"
net/minecraft/B/e/e/b/O.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Properties"
net/minecraft/B/e/e/b/O.e(Lnet/minecraft/l/d;Lnet/minecraft/l/i;)V -> "Properties"
net/minecraft/B/e/e/b/O.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/O.A(Lnet/minecraft/l/d;)V -> "Rotation"
net/minecraft/B/e/e/b/O.A(Lnet/minecraft/l/d;)V -> "Mirror"
net/minecraft/B/e/e/b/O.A(Lnet/minecraft/l/d;)V -> "VerticalPlacement"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "STANDARD"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "standard"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "DESERT"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "desert"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "JUNGLE"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "jungle"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "SWAMP"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "swamp"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "MOUNTAIN"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "mountain"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "OCEAN"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "ocean"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "NETHER"
net/minecraft/B/e/e/b/P$a.<clinit>()V -> "nether"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_1"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_2"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_3"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_4"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_5"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_6"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_7"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_8"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_9"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/portal_10"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/giant_portal_1"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/giant_portal_2"
net/minecraft/B/e/e/b/P.<clinit>()V -> "ruined_portal/giant_portal_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/town_centers"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/town_centers/savanna_meeting_point_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/town_centers/savanna_meeting_point_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/town_centers/savanna_meeting_point_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/town_centers/savanna_meeting_point_4"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/town_centers/savanna_meeting_point_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/town_centers/savanna_meeting_point_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/town_centers/savanna_meeting_point_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/town_centers/savanna_meeting_point_4"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/corner_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/corner_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_06"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_08"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_09"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_10"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/straight_11"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_06"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/crossroad_07"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/split_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/split_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/streets/turn_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/corner_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/corner_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_06"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_08"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_09"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_10"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/straight_11"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_06"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/crossroad_07"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/split_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/split_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/streets/turn_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_4"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_5"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_6"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_7"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_house_8"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_medium_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_medium_house_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_butchers_shop_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_butchers_shop_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_tool_smith_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_fletcher_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_shepherd_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_armorer_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_fisher_cottage_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_tannery_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_cartographer_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_library_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_mason_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_weaponsmith_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_weaponsmith_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_temple_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_temple_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_large_farm_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_large_farm_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_farm"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_animal_pen_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_animal_pen_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_animal_pen_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_4"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_5"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_6"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_7"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_small_house_8"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_medium_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_medium_house_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_butchers_shop_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_butchers_shop_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_tool_smith_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_fletcher_house_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_shepherd_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_armorer_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_fisher_cottage_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_tannery_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_cartographer_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_library_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_mason_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_weaponsmith_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_weaponsmith_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_temple_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_temple_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_large_farm_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_large_farm_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_small_farm"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/houses/savanna_animal_pen_1"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_animal_pen_2"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/houses/savanna_animal_pen_3"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/terminators/terminator_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/terminators"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_02"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_03"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/plains/terminators/terminator_04"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/terminators/terminator_05"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/trees"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/decor"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/savanna_lamp_post_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/decor"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/savanna_lamp_post_01"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/villagers"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/villagers/nitwit"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/villagers/baby"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/villagers/unemployed"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/villagers"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/villagers/nitwit"
net/minecraft/B/e/e/b/Q.<clinit>()V -> "village/savanna/zombie/villagers/unemployed"
net/minecraft/B/e/e/b/R.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "Width"
net/minecraft/B/e/e/b/R.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "Height"
net/minecraft/B/e/e/b/R.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "Depth"
net/minecraft/B/e/e/b/R.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "HPos"
net/minecraft/B/e/e/b/R.A(Lnet/minecraft/l/d;)V -> "Width"
net/minecraft/B/e/e/b/R.A(Lnet/minecraft/l/d;)V -> "Height"
net/minecraft/B/e/e/b/R.A(Lnet/minecraft/l/d;)V -> "Depth"
net/minecraft/B/e/e/b/R.A(Lnet/minecraft/l/d;)V -> "HPos"
net/minecraft/B/e/e/b/S.<clinit>()V -> "is_beached"
net/minecraft/B/e/e/b/T$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/T$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "isBeached"
net/minecraft/B/e/e/b/T$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/T$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "map_chest"
net/minecraft/B/e/e/b/T$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "treasure_chest"
net/minecraft/B/e/e/b/T$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "supply_chest"
net/minecraft/B/e/e/b/T$a.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/T$a.A(Lnet/minecraft/l/d;)V -> "isBeached"
net/minecraft/B/e/e/b/T$a.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/with_mast"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_full"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_fronthalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_backhalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_full"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_fronthalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_backhalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/with_mast_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_full_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_fronthalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_backhalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/with_mast"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_full"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_fronthalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_backhalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_full"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_fronthalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_backhalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_full"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_fronthalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_backhalf"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/with_mast_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_full_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_fronthalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/upsidedown_backhalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_full_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_fronthalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/sideways_backhalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_full_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_fronthalf_degraded"
net/minecraft/B/e/e/b/T.<clinit>()V -> "shipwreck/rightsideup_backhalf_degraded"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/town_centers"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/town_centers/snowy_meeting_point_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/town_centers/snowy_meeting_point_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/town_centers/snowy_meeting_point_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/town_centers/snowy_meeting_point_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/town_centers/snowy_meeting_point_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/town_centers/snowy_meeting_point_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/terminators"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/corner_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/corner_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/corner_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/square_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_04"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_06"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/straight_08"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/crossroad_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/crossroad_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/crossroad_04"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/crossroad_05"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/crossroad_06"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/streets/turn_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/terminators"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/corner_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/corner_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/corner_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/square_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_04"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_06"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/straight_08"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/crossroad_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/crossroad_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/crossroad_04"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/crossroad_05"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/crossroad_06"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/streets/turn_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/terminators"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_4"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_5"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_6"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_7"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_small_house_8"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_medium_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_medium_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_medium_house_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_butchers_shop_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_butchers_shop_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_tool_smith_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_fletcher_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_shepherds_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_armorer_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_armorer_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_fisher_cottage"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_tannery_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_cartographer_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_library_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_masons_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_masons_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_weapon_smith_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_temple_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_farm_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_farm_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_animal_pen_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_animal_pen_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/terminators"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_4"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_5"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_6"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_7"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_small_house_8"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_medium_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_medium_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/houses/snowy_medium_house_3"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_butchers_shop_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_butchers_shop_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_tool_smith_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_fletcher_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_shepherds_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_armorer_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_armorer_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_fisher_cottage"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_tannery_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_cartographer_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_library_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_masons_house_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_masons_house_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_weapon_smith_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_temple_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_farm_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_farm_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_animal_pen_1"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/houses/snowy_animal_pen_2"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/terminators"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/plains/terminators/terminator_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/plains/terminators/terminator_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/plains/terminators/terminator_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/plains/terminators/terminator_04"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/trees"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/decor"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/decor"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_01"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_02"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/snowy_lamp_post_03"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/villagers"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/villagers/nitwit"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/villagers/baby"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/villagers/unemployed"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/villagers"
net/minecraft/B/e/e/b/V.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/villagers/nitwit"
net/minecraft/B/e/e/b/V.<clinit>()V -> "village/snowy/zombie/villagers/unemployed"
net/minecraft/B/e/e/b/W$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/W$a.A(Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/W$b.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Steps"
net/minecraft/B/e/e/b/W$b.A(Lnet/minecraft/l/d;)V -> "Steps"
net/minecraft/B/e/e/b/W$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "leftLow"
net/minecraft/B/e/e/b/W$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "leftHigh"
net/minecraft/B/e/e/b/W$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "rightLow"
net/minecraft/B/e/e/b/W$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "rightHigh"
net/minecraft/B/e/e/b/W$c.A(Lnet/minecraft/l/d;)V -> "leftLow"
net/minecraft/B/e/e/b/W$c.A(Lnet/minecraft/l/d;)V -> "leftHigh"
net/minecraft/B/e/e/b/W$c.A(Lnet/minecraft/l/d;)V -> "rightLow"
net/minecraft/B/e/e/b/W$c.A(Lnet/minecraft/l/d;)V -> "rightHigh"
net/minecraft/B/e/e/b/W$e.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Tall"
net/minecraft/B/e/e/b/W$e.A(Lnet/minecraft/l/d;)V -> "Tall"
net/minecraft/B/e/e/b/W$g.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Mob"
net/minecraft/B/e/e/b/W$g.A(Lnet/minecraft/l/d;)V -> "Mob"
net/minecraft/B/e/e/b/W$j.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Type"
net/minecraft/B/e/e/b/W$j.A(Lnet/minecraft/l/d;)V -> "Type"
net/minecraft/B/e/e/b/W$k.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "Source"
net/minecraft/B/e/e/b/W$k.A(Lnet/minecraft/l/d;)V -> "Source"
net/minecraft/B/e/e/b/W$o.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Left"
net/minecraft/B/e/e/b/W$o.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Right"
net/minecraft/B/e/e/b/W$o.A(Lnet/minecraft/l/d;)V -> "Left"
net/minecraft/B/e/e/b/W$o.A(Lnet/minecraft/l/d;)V -> "Right"
net/minecraft/B/e/e/b/W$p$a.<clinit>()V -> "OPENING"
net/minecraft/B/e/e/b/W$p$a.<clinit>()V -> "WOOD_DOOR"
net/minecraft/B/e/e/b/W$p$a.<clinit>()V -> "GRATES"
net/minecraft/B/e/e/b/W$p$a.<clinit>()V -> "IRON_DOOR"
net/minecraft/B/e/e/b/W$p.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "EntryDoor"
net/minecraft/B/e/e/b/W$p.A(Lnet/minecraft/l/d;)V -> "EntryDoor"
net/minecraft/B/e/e/b/Y.<init>(Lcom/mojang/serialization/Codec;)V -> "config"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Pillager_Outpost"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Mineshaft"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Mansion"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Jungle_Pyramid"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Desert_Pyramid"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Igloo"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Ruined_Portal"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Shipwreck"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Swamp_Hut"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Stronghold"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Monument"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Ocean_Ruin"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Fortress"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "EndCity"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Buried_Treasure"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Village"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Nether_Fossil"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "Bastion_Remnant"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "jigsaw"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "nvi"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "pcp"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "bastionremnant"
net/minecraft/B/e/e/b/Y.<clinit>()V -> "runtime"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "id"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "INVALID"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "Unknown feature id: {}"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "ChunkX"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "ChunkZ"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "references"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "BB"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "BB"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "Children"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "id"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "Unknown structure piece id: {}"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "Exception loading structure piece with id {}"
net/minecraft/B/e/e/b/Y.b(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;J)Lnet/minecraft/B/e/e/b/ad; -> "Failed Start with id {}"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "pillager_outpost"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "mineshaft"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "mineshaft_mesa"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "mansion"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "jungle_pyramid"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "desert_pyramid"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "igloo"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "shipwreck"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "shipwreck_beached"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "swamp_hut"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "stronghold"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "monument"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ocean_ruin_cold"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ocean_ruin_warm"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "fortress"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "nether_fossil"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "end_city"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "buried_treasure"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "bastion_remnant"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "village_plains"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "village_desert"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "village_savanna"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "village_snowy"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "village_taiga"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_desert"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_jungle"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_swamp"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_mountain"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_ocean"
net/minecraft/B/e/e/b/Z.<clinit>()V -> "ruined_portal_nether"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "PosX"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "PosY"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "PosZ"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "ground_level_delta"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "pool_element"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "rotation"
net/minecraft/B/e/e/b/a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "junctions"
net/minecraft/B/e/e/b/a.toString()Ljava/lang/String; -> "<%s | %s | %s | %s>"
net/minecraft/B/e/e/b/a.g(Lnet/minecraft/l/d;Lnet/minecraft/l/i;)V -> "pool_element"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "PosX"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "PosY"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "PosZ"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "ground_level_delta"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "rotation"
net/minecraft/B/e/e/b/a.A(Lnet/minecraft/l/d;)V -> "junctions"
net/minecraft/B/e/e/b/aa.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "All"
net/minecraft/B/e/e/b/aa.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Remaining"
net/minecraft/B/e/e/b/aa.G(Lnet/minecraft/l/d;)V -> "All"
net/minecraft/B/e/e/b/aa.G(Lnet/minecraft/l/d;)V -> "Remaining"
net/minecraft/B/e/e/b/ab.b(Lnet/minecraft/B/e/v;)Lnet/minecraft/B/e/e/b/ab; -> "Using invalid feature manager (source level: "
net/minecraft/B/e/e/b/ab.b(Lnet/minecraft/B/e/v;)Lnet/minecraft/B/e/e/b/ab; -> ", region: "
net/minecraft/B/e/e/b/ac.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "GD"
net/minecraft/B/e/e/b/ac.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "BB"
net/minecraft/B/e/e/b/ac.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "BB"
net/minecraft/B/e/e/b/ac.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "O"
net/minecraft/B/e/e/b/ac.aYO()Lnet/minecraft/l/d; -> "id"
net/minecraft/B/e/e/b/ac.aYO()Lnet/minecraft/l/d; -> "BB"
net/minecraft/B/e/e/b/ac.aYO()Lnet/minecraft/l/d; -> "O"
net/minecraft/B/e/e/b/ac.aYO()Lnet/minecraft/l/d; -> "GD"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "id"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "ChunkX"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "ChunkZ"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "references"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "BB"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "Children"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "id"
net/minecraft/B/e/e/b/ad.bD(II)Lnet/minecraft/l/d; -> "INVALID"
net/minecraft/B/e/e/b/ae.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Witch"
net/minecraft/B/e/e/b/ae.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Cat"
net/minecraft/B/e/e/b/ae.A(Lnet/minecraft/l/d;)V -> "Witch"
net/minecraft/B/e/e/b/ae.A(Lnet/minecraft/l/d;)V -> "Cat"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/town_centers"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/town_centers/taiga_meeting_point_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/town_centers/taiga_meeting_point_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/town_centers/taiga_meeting_point_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/town_centers/taiga_meeting_point_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/terminators"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/corner_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/corner_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/corner_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_04"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_05"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/straight_06"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_04"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_05"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/crossroad_06"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/streets/turn_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/terminators"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/corner_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/corner_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/corner_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_04"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_05"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/straight_06"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_04"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_05"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/crossroad_06"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/streets/turn_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/terminators"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_house_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_house_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_house_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_house_5"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_medium_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_medium_house_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_medium_house_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_medium_house_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_butcher_shop_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_tool_smith_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_fletcher_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_shepherds_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_armorer_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_armorer_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_fisher_cottage_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_tannery_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_cartographer_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_library_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_masons_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_weaponsmith_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_weaponsmith_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_temple_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_large_farm_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_large_farm_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_farm_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_animal_pen_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/terminators"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_small_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_small_house_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_small_house_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_small_house_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_small_house_5"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_medium_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_medium_house_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_medium_house_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_medium_house_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_butcher_shop_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_tool_smith_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_fletcher_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_shepherds_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_armorer_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_fisher_cottage_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_tannery_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_cartographer_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_library_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_masons_house_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_weaponsmith_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_weaponsmith_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_temple_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_large_farm_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/houses/taiga_large_farm_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_small_farm_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/houses/taiga_animal_pen_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/terminators"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/plains/terminators/terminator_01"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/plains/terminators/terminator_02"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/plains/terminators/terminator_03"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/plains/terminators/terminator_04"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/decor"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_lamp_post_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_5"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_6"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/decor"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_1"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_2"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_3"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/taiga_decoration_4"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/villagers"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/villagers/nitwit"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/villagers/baby"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/villagers/unemployed"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/villagers"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/villagers/nitwit"
net/minecraft/B/e/e/b/ag.<clinit>()V -> "village/taiga/zombie/villagers/unemployed"
net/minecraft/B/e/e/b/ah.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "TPX"
net/minecraft/B/e/e/b/ah.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "TPY"
net/minecraft/B/e/e/b/ah.<init>(Lnet/minecraft/B/e/e/b/s;Lnet/minecraft/l/d;)V -> "TPZ"
net/minecraft/B/e/e/b/ah.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/m;Lnet/minecraft/z/c/e;Lnet/minecraft/z/c/b;)Z -> "mode"
net/minecraft/B/e/e/b/ah.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/m;Lnet/minecraft/z/c/e;Lnet/minecraft/z/c/b;)Z -> "metadata"
net/minecraft/B/e/e/b/ah.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/m;Lnet/minecraft/z/c/e;Lnet/minecraft/z/c/b;)Z -> "final_state"
net/minecraft/B/e/e/b/ah.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/m;Lnet/minecraft/z/c/e;Lnet/minecraft/z/c/b;)Z -> "Error while parsing blockstate {} in jigsaw block @ {}"
net/minecraft/B/e/e/b/ah.a(Lnet/minecraft/B/w;Lnet/minecraft/B/e/e/b/ab;Lnet/minecraft/B/e/a;Ljava/util/Random;Lnet/minecraft/z/c/m;Lnet/minecraft/z/c/e;Lnet/minecraft/z/c/b;)Z -> "Error while parsing blockstate {} in jigsaw block @ {}"
net/minecraft/B/e/e/b/ah.A(Lnet/minecraft/l/d;)V -> "TPX"
net/minecraft/B/e/e/b/ah.A(Lnet/minecraft/l/d;)V -> "TPY"
net/minecraft/B/e/e/b/ah.A(Lnet/minecraft/l/d;)V -> "TPZ"
net/minecraft/B/e/e/b/ai.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "start_pool"
net/minecraft/B/e/e/b/ai.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size"
net/minecraft/B/e/e/b/al$a.V(Ljava/util/Random;)Ljava/lang/String; -> "1x2_s"
net/minecraft/B/e/e/b/al$a.b(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_a"
net/minecraft/B/e/e/b/al$a.c(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_b"
net/minecraft/B/e/e/b/al$a.U(Ljava/util/Random;)Ljava/lang/String; -> "1x1_as"
net/minecraft/B/e/e/b/al$a.T(Ljava/util/Random;)Ljava/lang/String; -> "1x1_a"
net/minecraft/B/e/e/b/al$a.X(Ljava/util/Random;)Ljava/lang/String; -> "2x2_s1"
net/minecraft/B/e/e/b/al$a.W(Ljava/util/Random;)Ljava/lang/String; -> "2x2_a"
net/minecraft/B/e/e/b/al$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/al$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/al$c.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Mi"
net/minecraft/B/e/e/b/al$c.c(Lnet/minecraft/B/e/e/c/D;)V -> "woodland_mansion/"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Chest"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "ChestWest"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "ChestEast"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "ChestSouth"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "ChestNorth"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Warrior"
net/minecraft/B/e/e/b/al$c.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Mage"
net/minecraft/B/e/e/b/al$c.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/al$c.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/al$c.A(Lnet/minecraft/l/d;)V -> "Mi"
net/minecraft/B/e/e/b/al$e.c(Ljava/util/List;Lnet/minecraft/B/e/e/b/al$d;)V -> "wall_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/B/e/e/b/al$d;)V -> "entrance"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "wall_flat"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "wall_window"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "wall_window"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_south_1"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_south_2"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_west_1"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_west_2"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "corridor_floor"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_north"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "carpet_east"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "indoors_wall_1"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "indoors_wall_2"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "indoors_door_1"
net/minecraft/B/e/e/b/al$e.a(Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Lnet/minecraft/B/e/e/b/al$b;)V -> "indoors_door_2"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_front"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_front"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_front"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_front"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "small_wall_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_inner_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_inner_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_inner_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_corner"
net/minecraft/B/e/e/b/al$e.a(Ljava/util/List;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Lnet/minecraft/B/e/e/b/al$h;Lnet/minecraft/B/e/e/b/al$h;)V -> "roof_inner_corner"
net/minecraft/B/e/e/b/al$g.V(Ljava/util/Random;)Ljava/lang/String; -> "1x2_se"
net/minecraft/B/e/e/b/al$g.b(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_c_stairs"
net/minecraft/B/e/e/b/al$g.b(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_c"
net/minecraft/B/e/e/b/al$g.c(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_d_stairs"
net/minecraft/B/e/e/b/al$g.c(Ljava/util/Random;Z)Ljava/lang/String; -> "1x2_d"
net/minecraft/B/e/e/b/al$g.U(Ljava/util/Random;)Ljava/lang/String; -> "1x1_as"
net/minecraft/B/e/e/b/al$g.T(Ljava/util/Random;)Ljava/lang/String; -> "1x1_b"
net/minecraft/B/e/e/b/al$g.X(Ljava/util/Random;)Ljava/lang/String; -> "2x2_s1"
net/minecraft/B/e/e/b/al$g.W(Ljava/util/Random;)Ljava/lang/String; -> "2x2_b"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/starting_pieces"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/starting_pieces/entrance"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/starting_pieces/entrance_face"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/bridge_pieces"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/bridge_pieces/bridge"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/legs"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/legs/leg_0"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/legs/leg_1"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/walls"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/walls/wall_base_0"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/walls/wall_base_1"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/ramparts"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/ramparts/rampart_0"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/ramparts/rampart_1"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/rampart_plates"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/rampart_plates/plate_0"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/connectors"
net/minecraft/B/e/e/b/d.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/connectors/back_bridge_top"
net/minecraft/B/e/e/b/d.<clinit>()V -> "bastion/bridge/connectors/back_bridge_bottom"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/center_pieces"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/center_pieces/center_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/center_pieces/center_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/center_pieces/center_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/pathways"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/pathways/pathway_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/pathways/pathway_wall_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/walls/wall_bases"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/walls/wall_base"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/walls/connected_wall"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_0_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_0_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_0_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_0_3"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_1_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_1_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_1_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_1_3"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/rot/stage_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/rot/stage_1_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_2_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_2_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_3"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_3_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_3_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_3_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/stages/stage_3_3"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/fillers/stage_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/fillers/stage_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/edges"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/edges/edge_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/wall_units"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/wall_units/unit_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/edge_wall_units"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/wall_units/edge_0_large"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/ramparts"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/ramparts/ramparts_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/ramparts/ramparts_1"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/ramparts/ramparts_2"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/large_ramparts"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/ramparts/ramparts_0"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/rampart_plates"
net/minecraft/B/e/e/b/e.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/e.<clinit>()V -> "bastion/units/rampart_plates/plate_0"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/piglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/melee_piglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/sword_piglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/crossbow_piglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/hoglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/hoglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/blocks/gold"
net/minecraft/B/e/e/b/f.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/blocks/air"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/blocks/gold"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/piglin_melee"
net/minecraft/B/e/e/b/f.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/melee_piglin_always"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/melee_piglin"
net/minecraft/B/e/e/b/f.<clinit>()V -> "bastion/mobs/sword_piglin"
net/minecraft/B/e/e/b/g.<clinit>()V -> "bastion/starts"
net/minecraft/B/e/e/b/g.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/g.<clinit>()V -> "bastion/units/air_base"
net/minecraft/B/e/e/b/g.<clinit>()V -> "bastion/hoglin_stable/air_base"
net/minecraft/B/e/e/b/g.<clinit>()V -> "bastion/treasure/big_air_full"
net/minecraft/B/e/e/b/g.<clinit>()V -> "bastion/bridge/starting_pieces/entrance_base"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/starting_stairs_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/starting_stairs_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/starting_stairs_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/starting_stairs_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/starting_stairs_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/mirrored_starting_pieces"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/stairs_0_mirrored"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/stairs_1_mirrored"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/stairs_2_mirrored"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/stairs_3_mirrored"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/starting_pieces/stairs_4_mirrored"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/wall_bases"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/walls/wall_base"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/walls"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/walls/side_wall_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/walls/side_wall_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_1_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_1_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_1_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_1_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_1_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_2_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_2_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_2_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_2_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_2_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_3_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_3_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_3_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_3_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/stairs/stairs_3_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/inner"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/inner_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/inner_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/inner_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/inner_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/outer"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/outer_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/outer_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/outer_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/small_stables/outer_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/inner_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer_0"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/large_stables/outer_4"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/posts"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/posts/stair_post"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/posts/end_post"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/ramparts"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/ramparts/ramparts_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/ramparts/ramparts_2"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/ramparts/ramparts_3"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/rampart_plates"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/rampart_plates/rampart_plate_1"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/connectors"
net/minecraft/B/e/e/b/h.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/h.<clinit>()V -> "bastion/hoglin_stable/connectors/end_post_connector"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/lava_basin"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/stairs"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/stairs/lower_stairs"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/centers"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/centers/center_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/centers/center_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/centers/center_2"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/bases/centers/center_3"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/brains"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/brains/center_brain"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/lava_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/entrance_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/top_corner"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/mid_corner"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/bottom_corner"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/outer_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/medium_outer_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/outer/tall_outer_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/bottom"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/bottom/wall_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/bottom/wall_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/bottom/wall_2"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/bottom/wall_3"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/mid"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/mid/wall_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/mid/wall_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/mid/wall_2"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/top"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/top/main_entrance"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/top/wall_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/walls/top/wall_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/connectors"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/connectors/center_to_wall_middle"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/connectors/center_to_wall_top"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/connectors/center_to_wall_top_entrance"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/entrances"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/entrances/entrance_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/mid_wall_main"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/mid_wall_side"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/bottom_wall_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/top_wall"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/lava_basin_side"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/ramparts/lava_basin_main"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/bottom"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/bottom/corner_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/bottom/corner_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/edges"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/edges/bottom"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/edges/middle"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/edges/top"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/middle"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/middle/corner_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/middle/corner_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/top"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/top/corner_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/corners/top/corner_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/large_pool"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/fire_room"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/large_bridge_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/large_bridge_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/large_bridge_2"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/large_bridge_3"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/roofed_bridge"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/small_pool"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/fire_room"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/small_bridge_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/small_bridge_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/small_bridge_2"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/small_bridge_3"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/houses"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/house_0"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/extensions/house_1"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/roofs"
net/minecraft/B/e/e/b/i.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/roofs/wall_roof"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/roofs/corner_roof"
net/minecraft/B/e/e/b/i.<clinit>()V -> "bastion/treasure/roofs/center_roof"
net/minecraft/B/e/e/b/l.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hasPlacedChest0"
net/minecraft/B/e/e/b/l.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hasPlacedChest1"
net/minecraft/B/e/e/b/l.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hasPlacedChest2"
net/minecraft/B/e/e/b/l.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "hasPlacedChest3"
net/minecraft/B/e/e/b/l.A(Lnet/minecraft/l/d;)V -> "hasPlacedChest0"
net/minecraft/B/e/e/b/l.A(Lnet/minecraft/l/d;)V -> "hasPlacedChest1"
net/minecraft/B/e/e/b/l.A(Lnet/minecraft/l/d;)V -> "hasPlacedChest2"
net/minecraft/B/e/e/b/l.A(Lnet/minecraft/l/d;)V -> "hasPlacedChest3"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/town_centers"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/town_centers/desert_meeting_point_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/town_centers/desert_meeting_point_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/town_centers/desert_meeting_point_3"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/town_centers/desert_meeting_point_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/town_centers/desert_meeting_point_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/town_centers/desert_meeting_point_3"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/corner_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/corner_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/straight_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/straight_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/straight_03"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/crossroad_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/crossroad_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/crossroad_03"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/square_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/square_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/streets/turn_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/corner_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/corner_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/straight_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/straight_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/straight_03"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/crossroad_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/crossroad_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/crossroad_03"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/square_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/square_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/streets/turn_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_3"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_4"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_5"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_6"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_7"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_small_house_8"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_medium_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_medium_house_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_butcher_shop_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_tool_smith_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_fletcher_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_shepherd_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_armorer_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_fisher_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_tannery_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_cartographer_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_library_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_mason_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_weaponsmith_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_temple_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_temple_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_large_farm_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_farm_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_farm_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_animal_pen_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_animal_pen_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_3"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_4"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_5"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_6"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_7"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_small_house_8"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_medium_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/houses/desert_medium_house_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_butcher_shop_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_tool_smith_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_fletcher_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_shepherd_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_armorer_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_fisher_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_tannery_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_cartographer_house_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_library_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_mason_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_weaponsmith_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_temple_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_temple_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_large_farm_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_farm_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_farm_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_animal_pen_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/houses/desert_animal_pen_2"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators/terminator_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators/terminator_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/terminators"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/terminators/terminator_01"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/terminators/terminator_02"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/decor"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/desert_lamp_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/decor"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/desert_lamp_1"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/villagers"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/villagers/nitwit"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/villagers/baby"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/villagers/unemployed"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/villagers"
net/minecraft/B/e/e/b/n.<clinit>()V -> "empty"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/villagers/nitwit"
net/minecraft/B/e/e/b/n.<clinit>()V -> "village/desert/zombie/villagers/unemployed"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "base_floor"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "base_roof"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "second_floor_2"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "second_roof"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "second_floor_2"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "third_floor_2"
net/minecraft/B/e/e/b/o$1.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "third_roof"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "tower_base"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "tower_piece"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "tower_piece"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_end"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "tower_top"
net/minecraft/B/e/e/b/o$2.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "tower_top"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_piece"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_piece"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_steep_stairs"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_gentle_stairs"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "ship"
net/minecraft/B/e/e/b/o$3.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_end"
net/minecraft/B/e/e/b/o$4.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "fat_tower_base"
net/minecraft/B/e/e/b/o$4.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "fat_tower_middle"
net/minecraft/B/e/e/b/o$4.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "fat_tower_middle"
net/minecraft/B/e/e/b/o$4.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "bridge_end"
net/minecraft/B/e/e/b/o$4.a(Lnet/minecraft/B/e/e/c/D;ILnet/minecraft/B/e/e/b/o$a;Lnet/minecraft/z/c/b;Ljava/util/List;Ljava/util/Random;)Z -> "fat_tower_top"
net/minecraft/B/e/e/b/o$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/o$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/o$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "OW"
net/minecraft/B/e/e/b/o$a.c(Lnet/minecraft/B/e/e/c/D;)V -> "end_city/"
net/minecraft/B/e/e/b/o$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Chest"
net/minecraft/B/e/e/b/o$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Sentry"
net/minecraft/B/e/e/b/o$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "Elytra"
net/minecraft/B/e/e/b/o$a.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/o$a.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/o$a.A(Lnet/minecraft/l/d;)V -> "OW"
net/minecraft/B/e/e/b/o.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Ljava/util/Random;)V -> "base_floor"
net/minecraft/B/e/e/b/o.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Ljava/util/Random;)V -> "second_floor_1"
net/minecraft/B/e/e/b/o.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Ljava/util/Random;)V -> "third_floor_1"
net/minecraft/B/e/e/b/o.a(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/z/c/b;Lnet/minecraft/z/an;Ljava/util/List;Ljava/util/Random;)V -> "third_roof"
net/minecraft/B/e/e/b/q$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/q$a.A(Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/q$b.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/q$b.A(Lnet/minecraft/l/d;)V -> "Chest"
net/minecraft/B/e/e/b/q$i.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Seed"
net/minecraft/B/e/e/b/q$i.A(Lnet/minecraft/l/d;)V -> "Seed"
net/minecraft/B/e/e/b/q$q.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Mob"
net/minecraft/B/e/e/b/q$q.A(Lnet/minecraft/l/d;)V -> "Mob"
net/minecraft/B/e/e/b/s.<clinit>()V -> "MSCorridor"
net/minecraft/B/e/e/b/s.<clinit>()V -> "MSCrossing"
net/minecraft/B/e/e/b/s.<clinit>()V -> "MSRoom"
net/minecraft/B/e/e/b/s.<clinit>()V -> "MSStairs"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeBCr"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeBEF"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeBS"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeCCS"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeCTB"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeCE"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeSCSC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeSCLT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeSC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeSCRT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeCSR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeMT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeRC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeSR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeStart"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHCC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHFC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SH5C"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHLT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHLi"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHPR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHPH"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHRT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHRC"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHSD"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHStart"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHS"
net/minecraft/B/e/e/b/s.<clinit>()V -> "SHSSD"
net/minecraft/B/e/e/b/s.<clinit>()V -> "TeJP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "ORP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "Iglu"
net/minecraft/B/e/e/b/s.<clinit>()V -> "RUPO"
net/minecraft/B/e/e/b/s.<clinit>()V -> "TeSH"
net/minecraft/B/e/e/b/s.<clinit>()V -> "TeDP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMB"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMCR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMDXR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMDXYR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMDYR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMDYZR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMDZR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMEntry"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMPenthouse"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMSimple"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMSimpleT"
net/minecraft/B/e/e/b/s.<clinit>()V -> "OMWR"
net/minecraft/B/e/e/b/s.<clinit>()V -> "ECP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "WMP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "BTP"
net/minecraft/B/e/e/b/s.<clinit>()V -> "Shipwreck"
net/minecraft/B/e/e/b/s.<clinit>()V -> "NeFos"
net/minecraft/B/e/e/b/s.<clinit>()V -> "jigsaw"
net/minecraft/B/e/e/b/t$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/t$a.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/t$a.a(Ljava/lang/String;Lnet/minecraft/z/c/b;Lnet/minecraft/B/x;Ljava/util/Random;Lnet/minecraft/z/c/m;)V -> "chest"
net/minecraft/B/e/e/b/t$a.A(Lnet/minecraft/l/d;)V -> "Template"
net/minecraft/B/e/e/b/t$a.A(Lnet/minecraft/l/d;)V -> "Rot"
net/minecraft/B/e/e/b/t.<clinit>()V -> "igloo/top"
net/minecraft/B/e/e/b/t.<clinit>()V -> "igloo/middle"
net/minecraft/B/e/e/b/t.<clinit>()V -> "igloo/bottom"
net/minecraft/B/e/e/b/w.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "placedMainChest"
net/minecraft/B/e/e/b/w.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "placedHiddenChest"
net/minecraft/B/e/e/b/w.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "placedTrap1"
net/minecraft/B/e/e/b/w.<init>(Lnet/minecraft/B/e/e/c/D;Lnet/minecraft/l/d;)V -> "placedTrap2"
net/minecraft/B/e/e/b/w.A(Lnet/minecraft/l/d;)V -> "placedMainChest"
net/minecraft/B/e/e/b/w.A(Lnet/minecraft/l/d;)V -> "placedHiddenChest"
net/minecraft/B/e/e/b/w.A(Lnet/minecraft/l/d;)V -> "placedTrap1"
net/minecraft/B/e/e/b/w.A(Lnet/minecraft/l/d;)V -> "placedTrap2"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "data"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "Features"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "ChunkX"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "ChunkZ"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "Children"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "id"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "id"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "id"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "_index"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "ChunkX"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/B/k/d;)V -> "ChunkZ"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Structures"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Starts"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Starts"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Structures"
net/minecraft/B/e/e/b/y.b(Lnet/minecraft/l/d;Lnet/minecraft/z/c/e;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "Iglu"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "Igloo"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "TeDP"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "Desert_Pyramid"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "TeJP"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "Jungle_Pyramid"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "TeSH"
net/minecraft/B/e/e/b/y.c(Ljava/util/HashMap;)V -> "Swamp_Hut"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Monument"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Stronghold"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Village"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Mineshaft"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Temple"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Mansion"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Village"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Mineshaft"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Mansion"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Igloo"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Desert_Pyramid"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Jungle_Pyramid"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Swamp_Hut"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Stronghold"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Monument"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Fortress"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "EndCity"
net/minecraft/B/e/e/b/y.a(Lnet/minecraft/z/aj;Lnet/minecraft/B/k/d;)Lnet/minecraft/B/e/e/b/y; -> "Unknown dimension type : %s"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Village"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Village"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Mineshaft"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Mineshaft"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Mansion"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Mansion"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Igloo"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Temple"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Desert_Pyramid"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Temple"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Jungle_Pyramid"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Temple"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Swamp_Hut"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Temple"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Stronghold"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Stronghold"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Monument"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Monument"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Fortress"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "Fortress"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "EndCity"
net/minecraft/B/e/e/b/y.a(Ljava/util/HashMap;)V -> "EndCity"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "xPos"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "zPos"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Structures"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "References"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "References"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Structures"
net/minecraft/B/e/e/b/y.aH(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Level"
net/minecraft/B/e/e/c/A.toString()Ljava/lang/String; -> "ProcessorList["
net/minecraft/B/e/e/c/A.toString()Ljava/lang/String; -> "]"
net/minecraft/B/e/e/c/B.<clinit>()V -> "tag"
net/minecraft/B/e/e/c/C$b.toString()Ljava/lang/String; -> "<StructureBlockInfo | %s | %s | %s>"
net/minecraft/B/e/e/c/C.<init>()V -> "?"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/l/n;Lnet/minecraft/l/n;)V -> "pos"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/l/n;Lnet/minecraft/l/n;)V -> "state"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/l/n;Lnet/minecraft/l/n;)V -> "nbt"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/l/n;Lnet/minecraft/l/n;)V -> "nbt"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/L;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;ZLnet/minecraft/b/D;)V -> "x"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/L;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;ZLnet/minecraft/b/D;)V -> "y"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/L;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;ZLnet/minecraft/b/D;)V -> "z"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/c/r;Ljava/util/Random;I)Z -> "x"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/c/r;Ljava/util/Random;I)Z -> "y"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/c/r;Ljava/util/Random;I)Z -> "z"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/c/r;Ljava/util/Random;I)Z -> "LootTableSeed"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/ac;Lnet/minecraft/z/an;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/m;Z)V -> "Pos"
net/minecraft/B/e/e/c/C.a(Lnet/minecraft/B/x;Lnet/minecraft/z/c/b;Lnet/minecraft/z/ac;Lnet/minecraft/z/an;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/m;Z)V -> "UUID"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "size"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "blocks"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "palettes"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "palettes"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "palette"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "entities"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "pos"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "blockPos"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "nbt"
net/minecraft/B/e/e/c/C.G(Lnet/minecraft/l/d;)V -> "nbt"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "blocks"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "palette"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "pos"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "state"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "nbt"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "blocks"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "palette"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "palettes"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "pos"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "blockPos"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "nbt"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "entities"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "size"
net/minecraft/B/e/e/c/C.aI(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/e/e/c/D.f(Lnet/minecraft/z/ak;Ljava/lang/String;)Ljava/nio/file/Path; -> "structures"
net/minecraft/B/e/e/c/D.f(Lnet/minecraft/z/ak;Ljava/lang/String;)Ljava/nio/file/Path; -> "Invalid resource path: "
net/minecraft/B/e/e/c/D.g(Lnet/minecraft/z/ak;Ljava/lang/String;)Ljava/nio/file/Path; -> "//"
net/minecraft/B/e/e/c/D.g(Lnet/minecraft/z/ak;Ljava/lang/String;)Ljava/nio/file/Path; -> "Invalid resource path: "
net/minecraft/B/e/e/c/D.g(Lnet/minecraft/z/ak;Ljava/lang/String;)Ljava/nio/file/Path; -> "Invalid resource path: "
net/minecraft/B/e/e/c/D.cw(Lnet/minecraft/z/ak;)Z -> ".nbt"
net/minecraft/B/e/e/c/D.cw(Lnet/minecraft/z/ak;)Z -> "Failed to create parent directory: {}"
net/minecraft/B/e/e/c/D.cv(Lnet/minecraft/z/ak;)Lnet/minecraft/B/e/e/c/C; -> ".nbt"
net/minecraft/B/e/e/c/D.cv(Lnet/minecraft/z/ak;)Lnet/minecraft/B/e/e/c/C; -> "Couldn't load structure from {}"
net/minecraft/B/e/e/c/D.cu(Lnet/minecraft/z/ak;)Lnet/minecraft/B/e/e/c/C; -> "structures/"
net/minecraft/B/e/e/c/D.cu(Lnet/minecraft/z/ak;)Lnet/minecraft/B/e/e/c/C; -> ".nbt"
net/minecraft/B/e/e/c/D.cu(Lnet/minecraft/z/ak;)Lnet/minecraft/B/e/e/c/C; -> "Couldn't load structure {}: {}"
net/minecraft/B/e/e/c/D.aJ(Lnet/minecraft/l/d;)Lnet/minecraft/B/e/e/c/C; -> "DataVersion"
net/minecraft/B/e/e/c/D.aJ(Lnet/minecraft/l/d;)Lnet/minecraft/B/e/e/c/C; -> "DataVersion"
net/minecraft/B/e/e/c/D.aJ(Lnet/minecraft/l/d;)Lnet/minecraft/B/e/e/c/C; -> "DataVersion"
net/minecraft/B/e/e/c/c.<init>(FFIILnet/minecraft/z/w$a;)V -> "Invalid range: ["
net/minecraft/B/e/e/c/c.<init>(FFIILnet/minecraft/z/w$a;)V -> ","
net/minecraft/B/e/e/c/c.<init>(FFIILnet/minecraft/z/w$a;)V -> "]"
net/minecraft/B/e/e/c/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "min_chance"
net/minecraft/B/e/e/c/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "max_chance"
net/minecraft/B/e/e/c/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "min_dist"
net/minecraft/B/e/e/c/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "max_dist"
net/minecraft/B/e/e/c/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "axis"
net/minecraft/B/e/e/c/e.<clinit>()V -> "blocks"
net/minecraft/B/e/e/c/f.<clinit>()V -> "block"
net/minecraft/B/e/e/c/g.<clinit>()V -> "mossiness"
net/minecraft/B/e/e/c/h.<clinit>()V -> "block_state"
net/minecraft/B/e/e/c/i.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "heightmap"
net/minecraft/B/e/e/c/i.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "offset"
net/minecraft/B/e/e/c/j.<clinit>()V -> "always_true"
net/minecraft/B/e/e/c/j.<clinit>()V -> "linear_pos"
net/minecraft/B/e/e/c/j.<clinit>()V -> "axis_aligned_linear_pos"
net/minecraft/B/e/e/c/k.<clinit>()V -> "always_true"
net/minecraft/B/e/e/c/k.<clinit>()V -> "block_match"
net/minecraft/B/e/e/c/k.<clinit>()V -> "blockstate_match"
net/minecraft/B/e/e/c/k.<clinit>()V -> "tag_match"
net/minecraft/B/e/e/c/k.<clinit>()V -> "random_block_match"
net/minecraft/B/e/e/c/k.<clinit>()V -> "random_blockstate_match"
net/minecraft/B/e/e/c/l.<clinit>()V -> "block_ignore"
net/minecraft/B/e/e/c/l.<clinit>()V -> "block_rot"
net/minecraft/B/e/e/c/l.<clinit>()V -> "gravity"
net/minecraft/B/e/e/c/l.<clinit>()V -> "jigsaw_replacement"
net/minecraft/B/e/e/c/l.<clinit>()V -> "rule"
net/minecraft/B/e/e/c/l.<clinit>()V -> "nop"
net/minecraft/B/e/e/c/l.<clinit>()V -> "block_age"
net/minecraft/B/e/e/c/l.<clinit>()V -> "blackstone_replace"
net/minecraft/B/e/e/c/l.<clinit>()V -> "lava_submerged_block"
net/minecraft/B/e/e/c/l.<clinit>()V -> "processor_type"
net/minecraft/B/e/e/c/l.<clinit>()V -> "processors"
net/minecraft/B/e/e/c/m.<clinit>()V -> "integrity"
net/minecraft/B/e/e/c/n.a(Lnet/minecraft/B/B;Lnet/minecraft/z/c/b;Lnet/minecraft/z/c/b;Lnet/minecraft/B/e/e/c/C$b;Lnet/minecraft/B/e/e/c/C$b;Lnet/minecraft/B/e/e/c/r;)Lnet/minecraft/B/e/e/c/C$b; -> "final_state"
net/minecraft/B/e/e/c/p.<init>(FFII)V -> "Invalid range: ["
net/minecraft/B/e/e/c/p.<init>(FFII)V -> ","
net/minecraft/B/e/e/c/p.<init>(FFII)V -> "]"
net/minecraft/B/e/e/c/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "min_chance"
net/minecraft/B/e/e/c/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "max_chance"
net/minecraft/B/e/e/c/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "min_dist"
net/minecraft/B/e/e/c/p.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "max_dist"
net/minecraft/B/e/e/c/r.a(Ljava/util/List;Lnet/minecraft/z/c/b;)Lnet/minecraft/B/e/e/c/C$d; -> "No palettes"
net/minecraft/B/e/e/c/s.<clinit>()V -> "predicate_type"
net/minecraft/B/e/e/c/t.<clinit>()V -> "empty"
net/minecraft/B/e/e/c/t.<clinit>()V -> "zombie_plains"
net/minecraft/B/e/e/c/t.<clinit>()V -> "zombie_savanna"
net/minecraft/B/e/e/c/t.<clinit>()V -> "zombie_snowy"
net/minecraft/B/e/e/c/t.<clinit>()V -> "zombie_taiga"
net/minecraft/B/e/e/c/t.<clinit>()V -> "zombie_desert"
net/minecraft/B/e/e/c/t.<clinit>()V -> "mossify_10_percent"
net/minecraft/B/e/e/c/t.<clinit>()V -> "mossify_20_percent"
net/minecraft/B/e/e/c/t.<clinit>()V -> "mossify_70_percent"
net/minecraft/B/e/e/c/t.<clinit>()V -> "street_plains"
net/minecraft/B/e/e/c/t.<clinit>()V -> "street_savanna"
net/minecraft/B/e/e/c/t.<clinit>()V -> "street_snowy_or_taiga"
net/minecraft/B/e/e/c/t.<clinit>()V -> "farm_plains"
net/minecraft/B/e/e/c/t.<clinit>()V -> "farm_savanna"
net/minecraft/B/e/e/c/t.<clinit>()V -> "farm_snowy"
net/minecraft/B/e/e/c/t.<clinit>()V -> "farm_taiga"
net/minecraft/B/e/e/c/t.<clinit>()V -> "farm_desert"
net/minecraft/B/e/e/c/t.<clinit>()V -> "outpost_rot"
net/minecraft/B/e/e/c/t.<clinit>()V -> "bottom_rampart"
net/minecraft/B/e/e/c/t.<clinit>()V -> "treasure_rooms"
net/minecraft/B/e/e/c/t.<clinit>()V -> "housing"
net/minecraft/B/e/e/c/t.<clinit>()V -> "side_wall_degradation"
net/minecraft/B/e/e/c/t.<clinit>()V -> "stable_degradation"
net/minecraft/B/e/e/c/t.<clinit>()V -> "bastion_generic_degradation"
net/minecraft/B/e/e/c/t.<clinit>()V -> "rampart_degradation"
net/minecraft/B/e/e/c/t.<clinit>()V -> "entrance_replacement"
net/minecraft/B/e/e/c/t.<clinit>()V -> "bridge"
net/minecraft/B/e/e/c/t.<clinit>()V -> "roof"
net/minecraft/B/e/e/c/t.<clinit>()V -> "high_wall"
net/minecraft/B/e/e/c/t.<clinit>()V -> "high_rampart"
net/minecraft/B/e/e/c/u.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "block"
net/minecraft/B/e/e/c/u.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/e/e/c/v.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "block_state"
net/minecraft/B/e/e/c/v.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/e/e/c/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "input_predicate"
net/minecraft/B/e/e/c/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "location_predicate"
net/minecraft/B/e/e/c/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "position_predicate"
net/minecraft/B/e/e/c/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "output_state"
net/minecraft/B/e/e/c/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "output_nbt"
net/minecraft/B/e/e/c/x.<clinit>()V -> "rules"
net/minecraft/B/e/e/c/y.<clinit>()V -> "predicate_type"
net/minecraft/B/e/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "contents"
net/minecraft/B/e/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "rim"
net/minecraft/B/e/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size"
net/minecraft/B/e/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "rim_size"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "trunk_provider"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "leaves_provider"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "foliage_placer"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "trunk_placer"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "minimum_size"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "decorators"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "max_water_depth"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "ignore_vines"
net/minecraft/B/e/e/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "heightmap"
net/minecraft/B/e/e/j.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "cap_provider"
net/minecraft/B/e/e/j.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "stem_provider"
net/minecraft/B/e/e/j.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "foliage_radius"
net/minecraft/B/e/e/l.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "target"
net/minecraft/B/e/e/l.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state"
net/minecraft/B/e/e/l.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "radius"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "state_provider"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "block_placer"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "whitelist"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "blacklist"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "tries"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "xspread"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "yspread"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "zspread"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "can_replace"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "project"
net/minecraft/B/e/e/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "need_water"
net/minecraft/B/e/e/p.<clinit>()V -> "state"
net/minecraft/B/e/e/q.<clinit>()V -> "state_provider"
net/minecraft/B/e/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "to_place"
net/minecraft/B/e/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "place_on"
net/minecraft/B/e/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "place_in"
net/minecraft/B/e/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "place_under"
net/minecraft/B/e/e/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "reach"
net/minecraft/B/e/e/w.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/e/y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "feature"
net/minecraft/B/e/e/y.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "chance"
net/minecraft/B/e/f.toString()Ljava/lang/String; -> "*"
net/minecraft/B/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "block"
net/minecraft/B/e/f/b.d(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; -> "height"
net/minecraft/B/e/f/f.e(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; -> "radius"
net/minecraft/B/e/f/f.e(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; -> "offset"
net/minecraft/B/e/f/g.<clinit>()V -> "blob_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "spruce_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "pine_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "acacia_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "bush_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "fancy_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "jungle_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "mega_pine_foliage_placer"
net/minecraft/B/e/f/g.<clinit>()V -> "dark_oak_foliage_placer"
net/minecraft/B/e/f/h.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/f/i.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "crown_height"
net/minecraft/B/e/f/j.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/f/k.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "trunk_height"
net/minecraft/B/e/g$a.<clinit>()V -> "AIR"
net/minecraft/B/e/g$a.<clinit>()V -> "air"
net/minecraft/B/e/g$a.<clinit>()V -> "LIQUID"
net/minecraft/B/e/g$a.<clinit>()V -> "liquid"
net/minecraft/B/e/g$b.<clinit>()V -> "RAW_GENERATION"
net/minecraft/B/e/g$b.<clinit>()V -> "LAKES"
net/minecraft/B/e/g$b.<clinit>()V -> "LOCAL_MODIFICATIONS"
net/minecraft/B/e/g$b.<clinit>()V -> "UNDERGROUND_STRUCTURES"
net/minecraft/B/e/g$b.<clinit>()V -> "SURFACE_STRUCTURES"
net/minecraft/B/e/g$b.<clinit>()V -> "STRONGHOLDS"
net/minecraft/B/e/g$b.<clinit>()V -> "UNDERGROUND_ORES"
net/minecraft/B/e/g$b.<clinit>()V -> "UNDERGROUND_DECORATION"
net/minecraft/B/e/g$b.<clinit>()V -> "VEGETAL_DECORATION"
net/minecraft/B/e/g$b.<clinit>()V -> "TOP_LAYER_MODIFICATION"
net/minecraft/B/e/g/a.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/b.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/c.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/d.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/f.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/g.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/h$a.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/h$b.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/h$c.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/i.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/i.a(Lnet/minecraft/B/e/l;Lnet/minecraft/B/e/a/a;Lnet/minecraft/B/e/a/a;II)I -> "old! {}"
net/minecraft/B/e/g/j.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/k.a(Lnet/minecraft/z/e/e;II)Lnet/minecraft/B/a/a; -> "Unknown biome id emitted by layers: "
net/minecraft/B/e/g/k.a(Lnet/minecraft/z/e/e;II)Lnet/minecraft/B/a/a; -> "Unknown biome id: "
net/minecraft/B/e/g/k.a(Lnet/minecraft/z/e/e;II)Lnet/minecraft/B/a/a; -> "Unknown biome id: "
net/minecraft/B/e/g/l$a.<clinit>()V -> "NONE"
net/minecraft/B/e/g/l$a.<clinit>()V -> "TAIGA"
net/minecraft/B/e/g/l$a.<clinit>()V -> "EXTREME_HILLS"
net/minecraft/B/e/g/l$a.<clinit>()V -> "JUNGLE"
net/minecraft/B/e/g/l$a.<clinit>()V -> "MESA"
net/minecraft/B/e/g/l$a.<clinit>()V -> "BADLANDS_PLATEAU"
net/minecraft/B/e/g/l$a.<clinit>()V -> "PLAINS"
net/minecraft/B/e/g/l$a.<clinit>()V -> "SAVANNA"
net/minecraft/B/e/g/l$a.<clinit>()V -> "ICY"
net/minecraft/B/e/g/l$a.<clinit>()V -> "BEACH"
net/minecraft/B/e/g/l$a.<clinit>()V -> "FOREST"
net/minecraft/B/e/g/l$a.<clinit>()V -> "OCEAN"
net/minecraft/B/e/g/l$a.<clinit>()V -> "DESERT"
net/minecraft/B/e/g/l$a.<clinit>()V -> "RIVER"
net/minecraft/B/e/g/l$a.<clinit>()V -> "SWAMP"
net/minecraft/B/e/g/l$a.<clinit>()V -> "MUSHROOM"
net/minecraft/B/e/g/m.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/n.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/o.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/p.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/q.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/r.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/s.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/t.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/u.<clinit>()V -> "INSTANCE"
net/minecraft/B/e/g/v.<clinit>()V -> "NORMAL"
net/minecraft/B/e/g/v.<clinit>()V -> "FUZZY"
net/minecraft/B/e/h$a.<clinit>()V -> "WORLD_SURFACE_WG"
net/minecraft/B/e/h$a.<clinit>()V -> "WORLD_SURFACE_WG"
net/minecraft/B/e/h$a.<clinit>()V -> "WORLD_SURFACE"
net/minecraft/B/e/h$a.<clinit>()V -> "WORLD_SURFACE"
net/minecraft/B/e/h$a.<clinit>()V -> "OCEAN_FLOOR_WG"
net/minecraft/B/e/h$a.<clinit>()V -> "OCEAN_FLOOR_WG"
net/minecraft/B/e/h$a.<clinit>()V -> "OCEAN_FLOOR"
net/minecraft/B/e/h$a.<clinit>()V -> "OCEAN_FLOOR"
net/minecraft/B/e/h$a.<clinit>()V -> "MOTION_BLOCKING"
net/minecraft/B/e/h$a.<clinit>()V -> "MOTION_BLOCKING"
net/minecraft/B/e/h$a.<clinit>()V -> "MOTION_BLOCKING_NO_LEAVES"
net/minecraft/B/e/h$a.<clinit>()V -> "MOTION_BLOCKING_NO_LEAVES"
net/minecraft/B/e/h$b.<clinit>()V -> "WORLDGEN"
net/minecraft/B/e/h$b.<clinit>()V -> "LIVE_WORLD"
net/minecraft/B/e/h$b.<clinit>()V -> "CLIENT"
net/minecraft/B/e/h/F.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "noise_level"
net/minecraft/B/e/h/F.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "below_noise"
net/minecraft/B/e/h/F.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "above_noise"
net/minecraft/B/e/h/H.<init>(Lcom/mojang/serialization/Codec;)V -> "config"
net/minecraft/B/e/h/H.<clinit>()V -> "nope"
net/minecraft/B/e/h/H.<clinit>()V -> "chance"
net/minecraft/B/e/h/H.<clinit>()V -> "count"
net/minecraft/B/e/h/H.<clinit>()V -> "count_noise"
net/minecraft/B/e/h/H.<clinit>()V -> "count_noise_biased"
net/minecraft/B/e/h/H.<clinit>()V -> "count_extra"
net/minecraft/B/e/h/H.<clinit>()V -> "square"
net/minecraft/B/e/h/H.<clinit>()V -> "heightmap"
net/minecraft/B/e/h/H.<clinit>()V -> "heightmap_spread_double"
net/minecraft/B/e/h/H.<clinit>()V -> "top_solid_heightmap"
net/minecraft/B/e/h/H.<clinit>()V -> "heightmap_world_surface"
net/minecraft/B/e/h/H.<clinit>()V -> "range"
net/minecraft/B/e/h/H.<clinit>()V -> "range_biased"
net/minecraft/B/e/h/H.<clinit>()V -> "range_very_biased"
net/minecraft/B/e/h/H.<clinit>()V -> "depth_average"
net/minecraft/B/e/h/H.<clinit>()V -> "spread_32_above"
net/minecraft/B/e/h/H.<clinit>()V -> "carving_mask"
net/minecraft/B/e/h/H.<clinit>()V -> "fire"
net/minecraft/B/e/h/H.<clinit>()V -> "magma"
net/minecraft/B/e/h/H.<clinit>()V -> "emerald_ore"
net/minecraft/B/e/h/H.<clinit>()V -> "lava_lake"
net/minecraft/B/e/h/H.<clinit>()V -> "water_lake"
net/minecraft/B/e/h/H.<clinit>()V -> "glowstone"
net/minecraft/B/e/h/H.<clinit>()V -> "end_gateway"
net/minecraft/B/e/h/H.<clinit>()V -> "dark_oak_tree"
net/minecraft/B/e/h/H.<clinit>()V -> "iceberg"
net/minecraft/B/e/h/H.<clinit>()V -> "end_island"
net/minecraft/B/e/h/H.<clinit>()V -> "decorated"
net/minecraft/B/e/h/H.<clinit>()V -> "count_multilayer"
net/minecraft/B/e/h/H.toString()Ljava/lang/String; -> "@"
net/minecraft/B/e/h/Q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bottom_offset"
net/minecraft/B/e/h/Q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "top_offset"
net/minecraft/B/e/h/Q.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "maximum"
net/minecraft/B/e/h/R.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "noise_to_count_ratio"
net/minecraft/B/e/h/R.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "noise_factor"
net/minecraft/B/e/h/R.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "noise_offset"
net/minecraft/B/e/h/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "count"
net/minecraft/B/e/h/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "extra_chance"
net/minecraft/B/e/h/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "extra_count"
net/minecraft/B/e/h/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "step"
net/minecraft/B/e/h/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "probability"
net/minecraft/B/e/h/d.<clinit>()V -> "chance"
net/minecraft/B/e/h/f.<clinit>()V -> "type"
net/minecraft/B/e/h/f.toString()Ljava/lang/String; -> "[%s %s]"
net/minecraft/B/e/h/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "outer"
net/minecraft/B/e/h/n.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "inner"
net/minecraft/B/e/h/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "baseline"
net/minecraft/B/e/h/o.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spread"
net/minecraft/B/e/i/a.<init>(JZZLnet/minecraft/z/e/h;)V -> "Overworld settings missing"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "generator-settings"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "generator-settings"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "level-seed"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "level-seed"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "generate-structures"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "generate-structures"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "level-type"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "default"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "level-type"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "largebiomes"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "flat"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "debug_all_block_states"
net/minecraft/B/e/i/a.c(Lnet/minecraft/z/e/c;Ljava/util/Properties;)Lnet/minecraft/B/e/i/a; -> "amplified"
net/minecraft/B/e/i/a.a(Lnet/minecraft/z/e/c;)Lnet/minecraft/B/e/i/a; -> "North Carolina"
net/minecraft/B/e/i/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/e/i/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "generate_features"
net/minecraft/B/e/i/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bonus_chest"
net/minecraft/B/e/i/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "dimensions"
net/minecraft/B/e/i/a.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "legacy_custom_options"
net/minecraft/B/e/i/a.aZR()Lnet/minecraft/B/e/a; -> "Overworld settings missing"
net/minecraft/B/e/i/a.aZM()Lcom/mojang/serialization/DataResult; -> "Overworld settings missing"
net/minecraft/B/e/i/b.<clinit>()V -> "Structure feature without default settings: "
net/minecraft/B/e/i/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "stronghold"
net/minecraft/B/e/i/b.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "structures"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "height"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "sampling"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "top_slide"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bottom_slide"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size_horizontal"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size_vertical"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "density_factor"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "density_offset"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "simplex_surface_noise"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "random_density_offset"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "island_noise_override"
net/minecraft/B/e/i/c.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "amplified"
net/minecraft/B/e/i/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "xz_scale"
net/minecraft/B/e/i/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "y_scale"
net/minecraft/B/e/i/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "xz_factor"
net/minecraft/B/e/i/d.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "y_factor"
net/minecraft/B/e/i/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "target"
net/minecraft/B/e/i/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "size"
net/minecraft/B/e/i/e.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "offset"
net/minecraft/B/e/i/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spacing"
net/minecraft/B/e/i/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "separation"
net/minecraft/B/e/i/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "salt"
net/minecraft/B/e/i/f.a(Lnet/minecraft/B/e/i/f;)Lcom/mojang/serialization/DataResult; -> "Spacing has to be smaller than separation"
net/minecraft/B/e/i/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "distance"
net/minecraft/B/e/i/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "spread"
net/minecraft/B/e/i/g.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "count"
net/minecraft/B/e/j/d.<clinit>()V -> "badlands"
net/minecraft/B/e/j/d.<clinit>()V -> "basalt_deltas"
net/minecraft/B/e/j/d.<clinit>()V -> "crimson_forest"
net/minecraft/B/e/j/d.<clinit>()V -> "desert"
net/minecraft/B/e/j/d.<clinit>()V -> "end"
net/minecraft/B/e/j/d.<clinit>()V -> "eroded_badlands"
net/minecraft/B/e/j/d.<clinit>()V -> "frozen_ocean"
net/minecraft/B/e/j/d.<clinit>()V -> "full_sand"
net/minecraft/B/e/j/d.<clinit>()V -> "giant_tree_taiga"
net/minecraft/B/e/j/d.<clinit>()V -> "grass"
net/minecraft/B/e/j/d.<clinit>()V -> "gravelly_mountain"
net/minecraft/B/e/j/d.<clinit>()V -> "ice_spikes"
net/minecraft/B/e/j/d.<clinit>()V -> "mountain"
net/minecraft/B/e/j/d.<clinit>()V -> "mycelium"
net/minecraft/B/e/j/d.<clinit>()V -> "nether"
net/minecraft/B/e/j/d.<clinit>()V -> "nope"
net/minecraft/B/e/j/d.<clinit>()V -> "ocean_sand"
net/minecraft/B/e/j/d.<clinit>()V -> "shattered_savanna"
net/minecraft/B/e/j/d.<clinit>()V -> "soul_sand_valley"
net/minecraft/B/e/j/d.<clinit>()V -> "stone"
net/minecraft/B/e/j/d.<clinit>()V -> "swamp"
net/minecraft/B/e/j/d.<clinit>()V -> "warped_forest"
net/minecraft/B/e/j/d.<clinit>()V -> "wooded_badlands"
net/minecraft/B/e/j/q.<init>(Lcom/mojang/serialization/Codec;)V -> "config"
net/minecraft/B/e/j/q.<clinit>()V -> "default"
net/minecraft/B/e/j/q.<clinit>()V -> "mountain"
net/minecraft/B/e/j/q.<clinit>()V -> "shattered_savanna"
net/minecraft/B/e/j/q.<clinit>()V -> "gravelly_mountain"
net/minecraft/B/e/j/q.<clinit>()V -> "giant_tree_taiga"
net/minecraft/B/e/j/q.<clinit>()V -> "swamp"
net/minecraft/B/e/j/q.<clinit>()V -> "badlands"
net/minecraft/B/e/j/q.<clinit>()V -> "wooded_badlands"
net/minecraft/B/e/j/q.<clinit>()V -> "eroded_badlands"
net/minecraft/B/e/j/q.<clinit>()V -> "frozen_ocean"
net/minecraft/B/e/j/q.<clinit>()V -> "nether"
net/minecraft/B/e/j/q.<clinit>()V -> "nether_forest"
net/minecraft/B/e/j/q.<clinit>()V -> "soul_sand_valley"
net/minecraft/B/e/j/q.<clinit>()V -> "basalt_deltas"
net/minecraft/B/e/j/q.<clinit>()V -> "nope"
net/minecraft/B/e/j/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "top_material"
net/minecraft/B/e/j/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "under_material"
net/minecraft/B/e/j/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "underwater_material"
net/minecraft/B/e/k/a.<clinit>()V -> "provider"
net/minecraft/B/e/k/b.<clinit>()V -> "probability"
net/minecraft/B/e/k/c.<clinit>()V -> "probability"
net/minecraft/B/e/k/f.<clinit>()V -> "trunk_vine"
net/minecraft/B/e/k/f.<clinit>()V -> "leave_vine"
net/minecraft/B/e/k/f.<clinit>()V -> "cocoa"
net/minecraft/B/e/k/f.<clinit>()V -> "beehive"
net/minecraft/B/e/k/f.<clinit>()V -> "alter_ground"
net/minecraft/B/e/l/a.f(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; -> "base_height"
net/minecraft/B/e/l/a.f(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; -> "height_rand_a"
net/minecraft/B/e/l/a.f(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; -> "height_rand_b"
net/minecraft/B/e/l/h.<clinit>()V -> "straight_trunk_placer"
net/minecraft/B/e/l/h.<clinit>()V -> "forking_trunk_placer"
net/minecraft/B/e/l/h.<clinit>()V -> "giant_trunk_placer"
net/minecraft/B/e/l/h.<clinit>()V -> "mega_jungle_trunk_placer"
net/minecraft/B/e/l/h.<clinit>()V -> "dark_oak_trunk_placer"
net/minecraft/B/e/l/h.<clinit>()V -> "fancy_trunk_placer"
net/minecraft/B/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "biome_source"
net/minecraft/B/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "seed"
net/minecraft/B/e/r.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "settings"
net/minecraft/B/e/s.a(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; -> "Need some octaves!"
net/minecraft/B/e/s.a(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; -> "Total number of octaves needs to be >= 1"
net/minecraft/B/e/t.<init>(Lnet/minecraft/z/at;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V -> "Need some octaves!"
net/minecraft/B/e/t.<init>(Lnet/minecraft/z/at;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V -> "Total number of octaves needs to be >= 1"
net/minecraft/B/e/v.<init>(Lnet/minecraft/B/i/f;Ljava/util/List;)V -> "Cache size is not a square."
net/minecraft/B/e/v.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "Requested chunk : {} {}"
net/minecraft/B/e/v.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "Region bounds : {} {} | {} {}"
net/minecraft/B/e/v.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "Chunk is not of correct status. Expecting %s, got %s | %s %s"
net/minecraft/B/e/v.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "We are asking a region for a chunk out of bound | %s %s"
net/minecraft/B/e/v.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "x"
net/minecraft/B/e/v.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "y"
net/minecraft/B/e/v.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "z"
net/minecraft/B/e/v.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "id"
net/minecraft/B/e/v.a(Lnet/minecraft/z/c/b;Lnet/minecraft/b/G;II)Z -> "DUMMY"
net/minecraft/B/e/v.t(Lnet/minecraft/z/c/b;)Lnet/minecraft/y/O; -> "DUMMY"
net/minecraft/B/e/v.t(Lnet/minecraft/z/c/b;)Lnet/minecraft/y/O; -> "id"
net/minecraft/B/e/v.t(Lnet/minecraft/z/c/b;)Lnet/minecraft/y/O; -> "Tried to access a block entity before it was created. {}"
net/minecraft/B/e/v.bn(Lnet/minecraft/z/c/b;)Lnet/minecraft/B/d; -> "We are asking a region for a chunk out of bound"
net/minecraft/B/f.<clinit>()V -> "overworld"
net/minecraft/B/f.<clinit>()V -> "the_nether"
net/minecraft/B/f.<clinit>()V -> "the_end"
net/minecraft/B/f.<clinit>()V -> "overworld"
net/minecraft/B/f.<clinit>()V -> "the_nether"
net/minecraft/B/f.<clinit>()V -> "the_end"
net/minecraft/B/f.<clinit>()V -> "overworld_caves"
net/minecraft/B/f.a(Lnet/minecraft/z/aj;Ljava/io/File;)Ljava/io/File; -> "DIM1"
net/minecraft/B/f.a(Lnet/minecraft/z/aj;Ljava/io/File;)Ljava/io/File; -> "DIM-1"
net/minecraft/B/f.a(Lnet/minecraft/z/aj;Ljava/io/File;)Ljava/io/File; -> "dimensions/"
net/minecraft/B/f.a(Lnet/minecraft/z/aj;Ljava/io/File;)Ljava/io/File; -> "/"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "fixed_time"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "has_skylight"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "has_ceiling"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "ultrawarm"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "natural"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "coordinate_scale"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "piglin_safe"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "bed_works"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "respawn_anchor_works"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "has_raids"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "logical_height"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "infiniburn"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "effects"
net/minecraft/B/f.a(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; -> "ambient_light"
net/minecraft/B/f.aQI()Ljava/lang/String; -> "_end"
net/minecraft/B/g.<clinit>()V -> "INSTANCE"
net/minecraft/B/g/d$a.<clinit>()V -> "INSTANCE"
net/minecraft/B/g/e.<init>(III)V -> "Level count must be < 254."
net/minecraft/B/g/j.bq(J)Ljava/lang/String; -> "*"
net/minecraft/B/g/l.b(Lnet/minecraft/B/D;Lnet/minecraft/z/c/q;)Ljava/lang/String; -> "n/a"
net/minecraft/B/h/a$a.<clinit>()V -> "ONGOING"
net/minecraft/B/h/a$a.<clinit>()V -> "VICTORY"
net/minecraft/B/h/a$a.<clinit>()V -> "LOSS"
net/minecraft/B/h/a$a.<clinit>()V -> "STOPPED"
net/minecraft/B/h/a$b.<clinit>()V -> "VINDICATOR"
net/minecraft/B/h/a$b.<clinit>()V -> "EVOKER"
net/minecraft/B/h/a$b.<clinit>()V -> "PILLAGER"
net/minecraft/B/h/a$b.<clinit>()V -> "WITCH"
net/minecraft/B/h/a$b.<clinit>()V -> "RAVAGER"
net/minecraft/B/h/a.bq()V -> " - "
net/minecraft/B/h/a.bq()V -> "event.minecraft.raid.raiders_remaining"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "Id"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "Started"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "Active"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "TicksActive"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "BadOmenLevel"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "GroupsSpawned"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "PreRaidTicks"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "PostRaidTicks"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "TotalHealth"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "CX"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "CY"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "CZ"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "NumGroups"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "Status"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "HeroesOfTheVillage"
net/minecraft/B/h/a.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/l/d;)V -> "HeroesOfTheVillage"
net/minecraft/B/h/a.<clinit>()V -> "event.minecraft.raid"
net/minecraft/B/h/a.<clinit>()V -> "event.minecraft.raid.victory"
net/minecraft/B/h/a.<clinit>()V -> "event.minecraft.raid.defeat"
net/minecraft/B/h/a.<clinit>()V -> " - "
net/minecraft/B/h/a.<clinit>()V -> " - "
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Id"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Started"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Active"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "TicksActive"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "BadOmenLevel"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "GroupsSpawned"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "PreRaidTicks"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "PostRaidTicks"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "TotalHealth"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "NumGroups"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Status"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "CX"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "CY"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "CZ"
net/minecraft/B/h/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "HeroesOfTheVillage"
net/minecraft/B/h/a.bby()Lnet/minecraft/j/af; -> "BlockEntityTag"
net/minecraft/B/h/a.bby()Lnet/minecraft/j/af; -> "Patterns"
net/minecraft/B/h/a.bby()Lnet/minecraft/j/af; -> "block.minecraft.ominous_banner"
net/minecraft/B/h/b.g(Lnet/minecraft/B/f;)Ljava/lang/String; -> "raids"
net/minecraft/B/h/b.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "NextAvailableID"
net/minecraft/B/h/b.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Tick"
net/minecraft/B/h/b.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Raids"
net/minecraft/B/h/b.G(Lnet/minecraft/l/d;)V -> "NextAvailableID"
net/minecraft/B/h/b.G(Lnet/minecraft/l/d;)V -> "Tick"
net/minecraft/B/h/b.G(Lnet/minecraft/l/d;)V -> "Raids"
net/minecraft/B/i/a$1.toString()Ljava/lang/String; -> "Unloaded ticket level "
net/minecraft/B/i/a$a$1.toString()Ljava/lang/String; -> "UNLOADED"
net/minecraft/B/i/a$d.<clinit>()V -> "INACCESSIBLE"
net/minecraft/B/i/a$d.<clinit>()V -> "BORDER"
net/minecraft/B/i/a$d.<clinit>()V -> "TICKING"
net/minecraft/B/i/a$d.<clinit>()V -> "ENTITY_TICKING"
net/minecraft/B/i/b$1.toString()Ljava/lang/String; -> "Unloaded "
net/minecraft/B/i/b$2.toString()Ljava/lang/String; -> "Unloaded "
net/minecraft/B/i/b$2.toString()Ljava/lang/String; -> " "
net/minecraft/B/i/b.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/z/a/e;Lnet/minecraft/B/c/m;Lnet/minecraft/B/e/a;Lnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;IZ)V -> "region"
net/minecraft/B/i/b.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/z/a/e;Lnet/minecraft/B/c/m;Lnet/minecraft/B/e/a;Lnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;IZ)V -> "worldgen"
net/minecraft/B/i/b.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/z/a/e;Lnet/minecraft/B/c/m;Lnet/minecraft/B/e/a;Lnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;IZ)V -> "main"
net/minecraft/B/i/b.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/z/a/e;Lnet/minecraft/B/c/m;Lnet/minecraft/B/e/a;Lnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;IZ)V -> "light"
net/minecraft/B/i/b.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/z/a/e;Lnet/minecraft/B/c/m;Lnet/minecraft/B/e/a;Lnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;IZ)V -> "poi"
net/minecraft/B/i/b.D(Lnet/minecraft/z/c/e;)Z -> "Failed to read chunk {}"
net/minecraft/B/i/b.I(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "release light ticket "
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "x"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "z"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "level"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "in_memory"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "status"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "full_status"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "accessible_ready"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "ticking_ready"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "entity_ticking_ready"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "ticket"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "spawning"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "entity_count"
net/minecraft/B/i/b.b(Ljava/io/Writer;)V -> "block_entity_count"
net/minecraft/B/i/b.b(Lnet/minecraft/B/i/a$a;)Ljava/lang/String; -> "unloaded"
net/minecraft/B/i/b.bb(Lnet/minecraft/g/f;)V -> "Entity is already tracked!"
net/minecraft/B/i/b.c(Lnet/minecraft/B/c/l;)Z -> "chunkSave"
net/minecraft/B/i/b.c(Lnet/minecraft/B/c/l;)Z -> "Failed to save chunk {},{}"
net/minecraft/B/i/b.f(Lnet/minecraft/B/c/h;)Ljava/lang/String; -> "chunkGenerate "
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "Exception generating new chunk"
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "Chunk to be generated"
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "Location"
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "%d,%d"
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "Position hash"
net/minecraft/B/i/b.a(Lnet/minecraft/B/c/h;Lnet/minecraft/B/i/a;Lnet/minecraft/z/c/e;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; -> "Generator"
net/minecraft/B/i/b.a(Lnet/minecraft/B/i/a;Ljava/lang/Void;Ljava/lang/Throwable;)V -> "Failed to save chunk "
net/minecraft/B/i/b.a(Ljava/util/function/BooleanSupplier;)V -> "poi"
net/minecraft/B/i/b.a(Ljava/util/function/BooleanSupplier;)V -> "chunk_unload"
net/minecraft/B/i/b.g(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; -> "not completed"
net/minecraft/B/i/b.g(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; -> "failed "
net/minecraft/B/i/b.g(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; -> "cancelled"
net/minecraft/B/i/b.j(Lnet/minecraft/B/c/b;)Ljava/lang/String; -> "done"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "null"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "\n"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "St: §"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "r\n"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "Ch: §"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "r\n"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "§"
net/minecraft/B/i/b.y(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "r"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "chunkLoad"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Level"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Level"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Status"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Chunk file at {} is missing level data, skipping"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Couldn't load chunk {}"
net/minecraft/B/i/b.G(Lnet/minecraft/z/c/e;)Lcom/mojang/datafixers/util/Either; -> "Couldn't load chunk {}"
net/minecraft/B/i/b.eH(Z)V -> "ThreadedAnvilChunkStorage ({}): All chunks are saved"
net/minecraft/B/i/d$a.<init>(Lnet/minecraft/B/i/d;Lnet/minecraft/B/L;)V -> "Chunk source main thread executor for "
net/minecraft/B/i/d$a.o(Ljava/lang/Runnable;)V -> "runTask"
net/minecraft/B/i/d.<init>(Lnet/minecraft/B/i/f;Lnet/minecraft/B/k/p$a;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/B/e/e/c/D;Ljava/util/concurrent/Executor;Lnet/minecraft/B/e/a;IZLnet/minecraft/B/c/a/b;Ljava/util/function/Supplier;)V -> "data"
net/minecraft/B/i/d.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "getChunk"
net/minecraft/B/i/d.b(IILnet/minecraft/B/c/h;Z)Lnet/minecraft/B/c/l; -> "getChunkCacheMiss"
net/minecraft/B/i/d.d(IILnet/minecraft/B/c/h;Z)Ljava/util/concurrent/CompletableFuture; -> "chunkLoad"
net/minecraft/B/i/d.d(IILnet/minecraft/B/c/h;Z)Ljava/util/concurrent/CompletableFuture; -> "No chunk holder after ticket has been added"
net/minecraft/B/i/d.a(Ljava/util/function/BooleanSupplier;)V -> "purge"
net/minecraft/B/i/d.a(Ljava/util/function/BooleanSupplier;)V -> "chunks"
net/minecraft/B/i/d.a(Ljava/util/function/BooleanSupplier;)V -> "unload"
net/minecraft/B/i/d.a(ZLnet/minecraft/B/i/a$a;)Lnet/minecraft/B/c/l; -> "Chunk not there when requested: "
net/minecraft/B/i/d.a(JZLnet/minecraft/B/j/h$a;ZILnet/minecraft/B/i/a;)V -> "broadcast"
net/minecraft/B/i/d.bh(II)Lnet/minecraft/B/c/b; -> "getChunkNow"
net/minecraft/B/i/d.xg()Ljava/lang/String; -> "ServerChunkCache: "
net/minecraft/B/i/d.bcd()V -> "pollingChunks"
net/minecraft/B/i/d.bcd()V -> "naturalSpawnCount"
net/minecraft/B/i/d.bcd()V -> "customSpawners"
net/minecraft/B/i/e.bq()V -> "TickNextTick list out of synch"
net/minecraft/B/i/e.bq()V -> "cleaning"
net/minecraft/B/i/e.bq()V -> "ticking"
net/minecraft/B/i/e.bq()V -> "Exception while ticking"
net/minecraft/B/i/e.bq()V -> "Block being ticked"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "i"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "x"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "y"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "z"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "t"
net/minecraft/B/i/e.a(Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/l/n; -> "p"
net/minecraft/B/i/f.toString()Ljava/lang/String; -> "ServerLevel["
net/minecraft/B/i/f.toString()Ljava/lang/String; -> "]"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "stats.txt"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "spawning_chunks: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "spawn_count.%s: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "entities: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "block_entities: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "block_ticks: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "fluid_ticks: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "distance_manager: "
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "pending_tasks: %d\n"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "Level dump"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "dummy"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "example_crash.txt"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "chunks.csv"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "entities.csv"
net/minecraft/B/i/f.D(Ljava/nio/file/Path;)V -> "block_entities.csv"
net/minecraft/B/i/f.b(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String; -> ":"
net/minecraft/B/i/f.b(Lnet/minecraft/B/c/b;I)V -> "thunder"
net/minecraft/B/i/f.b(Lnet/minecraft/B/c/b;I)V -> "iceandsnow"
net/minecraft/B/i/f.b(Lnet/minecraft/B/c/b;I)V -> "tickBlocks"
net/minecraft/B/i/f.b(Lnet/minecraft/B/c/b;I)V -> "randomTick"
net/minecraft/B/i/f.s(Lnet/minecraft/g/h/f;)V -> "Force-added player with duplicate UUID {}"
net/minecraft/B/i/f.c(Ljava/io/Writer;)V -> "x"
net/minecraft/B/i/f.c(Ljava/io/Writer;)V -> "y"
net/minecraft/B/i/f.c(Ljava/io/Writer;)V -> "z"
net/minecraft/B/i/f.c(Ljava/io/Writer;)V -> "type"
net/minecraft/B/i/f.c(Ljava/util/Collection;Ljava/util/function/Function;)Ljava/lang/String; -> ","
net/minecraft/B/i/f.l(Lnet/minecraft/B/c/b;)V -> "Removing entity while ticking!"
net/minecraft/B/i/f.a(Lnet/minecraft/z/Q;ZZ)V -> "menu.savingLevel"
net/minecraft/B/i/f.a(Lnet/minecraft/z/Q;ZZ)V -> "menu.savingChunks"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "world border"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "weather"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "chunkSource"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "tickPending"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "raid"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "blockEvents"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "entities"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "checkDespawn"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "tick"
net/minecraft/B/i/f.a(Ljava/util/function/BooleanSupplier;)V -> "remove"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "x"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "y"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "z"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "uuid"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "type"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "alive"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "display_name"
net/minecraft/B/i/f.a(Ljava/io/Writer;Ljava/lang/Iterable;)V -> "custom_name"
net/minecraft/B/i/f.k(IIZ)Z -> "chunks"
net/minecraft/B/i/f.g(Lnet/minecraft/g/f;Lnet/minecraft/g/f;)V -> "tickPassenger"
net/minecraft/B/i/f.y(Lnet/minecraft/g/f;)V -> "tickNonPassenger"
net/minecraft/B/i/f.bi(Lnet/minecraft/g/f;)Z -> "Trying to add entity with duplicated UUID {}. Existing {}#{}, new: {}#{}"
net/minecraft/B/i/f.A(Lnet/minecraft/g/f;)V -> "Removing entity while ticking!"
net/minecraft/B/i/f.bg(Lnet/minecraft/g/f;)Z -> "Tried to add entity {} but it was marked as removed already"
net/minecraft/B/i/f.bd(Lnet/minecraft/g/f;)V -> "chunkCheck"
net/minecraft/B/i/f.bd(Lnet/minecraft/g/f;)V -> "Entity {} left loaded chunk area"
net/minecraft/B/i/f.Kn()I -> "idcounts"
net/minecraft/B/i/f.bcA()Lit/unimi/dsi/fastutil/longs/LongSet; -> "chunks"
net/minecraft/B/i/f.bcF()Ljava/lang/String; -> "players: %s, entities: %d [%s], block_entities: %d [%s], block_ticks: %d, fluid_ticks: %d, chunk_source: %s"
net/minecraft/B/i/g$a.<clinit>()V -> "PRE_UPDATE"
net/minecraft/B/i/g$a.<clinit>()V -> "POST_UPDATE"
net/minecraft/B/i/g.c(Lnet/minecraft/z/c/q;Z)Ljava/lang/String; -> "updateSectionStatus "
net/minecraft/B/i/g.c(Lnet/minecraft/z/c/q;Z)Ljava/lang/String; -> " "
net/minecraft/B/i/g.h(Lnet/minecraft/z/c/e;Z)Ljava/lang/String; -> "enableLight "
net/minecraft/B/i/g.h(Lnet/minecraft/z/c/e;Z)Ljava/lang/String; -> " "
net/minecraft/B/i/g.a(IZZ)I -> "Ran authomatically on a different thread!"
net/minecraft/B/i/g.k(Lnet/minecraft/z/c/q;)Ljava/lang/String; -> "queueData "
net/minecraft/B/i/g.j(Lnet/minecraft/z/c/e;Z)Ljava/lang/String; -> "lightChunk "
net/minecraft/B/i/g.j(Lnet/minecraft/z/c/e;Z)Ljava/lang/String; -> " "
net/minecraft/B/i/g.j(Lnet/minecraft/z/c/b;I)V -> "Ran authomatically on a different thread!"
net/minecraft/B/i/g.N(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "retainData "
net/minecraft/B/i/g.Q(Lnet/minecraft/z/c/b;)Ljava/lang/String; -> "checkBlock "
net/minecraft/B/i/g.M(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> "updateChunkStatus "
net/minecraft/B/i/g.M(Lnet/minecraft/z/c/e;)Ljava/lang/String; -> " "
net/minecraft/B/i/h.toString()Ljava/lang/String; -> "Ticket["
net/minecraft/B/i/h.toString()Ljava/lang/String; -> " "
net/minecraft/B/i/h.toString()Ljava/lang/String; -> " ("
net/minecraft/B/i/h.toString()Ljava/lang/String; -> ")] at "
net/minecraft/B/i/i.<init>(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V -> "player ticket throttler"
net/minecraft/B/i/i.bM(J)Ljava/lang/String; -> "no_ticket"
net/minecraft/B/i/j.<clinit>()V -> "start"
net/minecraft/B/i/j.<clinit>()V -> "dragon"
net/minecraft/B/i/j.<clinit>()V -> "player"
net/minecraft/B/i/j.<clinit>()V -> "forced"
net/minecraft/B/i/j.<clinit>()V -> "light"
net/minecraft/B/i/j.<clinit>()V -> "portal"
net/minecraft/B/i/j.<clinit>()V -> "post_teleport"
net/minecraft/B/i/j.<clinit>()V -> "unknown"
net/minecraft/B/j$a.<clinit>()V -> "NONE"
net/minecraft/B/j$a.<clinit>()V -> "BREAK"
net/minecraft/B/j$a.<clinit>()V -> "DESTROY"
net/minecraft/B/j.es(Z)V -> "explosion_blocks"
net/minecraft/B/j/a.bq()V -> "Pos"
net/minecraft/B/j/a.bq()V -> "id"
net/minecraft/B/j/a.t(Lnet/minecraft/g/k;)V -> "id"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Delay"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "MinSpawnDelay"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "MaxSpawnDelay"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "SpawnCount"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "MaxNearbyEntities"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "RequiredPlayerRange"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "SpawnRange"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "SpawnData"
net/minecraft/B/j/a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "SpawnPotentials"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "Delay"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnPotentials"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnPotentials"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnData"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnData"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "MinSpawnDelay"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "MinSpawnDelay"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "MaxSpawnDelay"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnCount"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "MaxNearbyEntities"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "MaxNearbyEntities"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "RequiredPlayerRange"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnRange"
net/minecraft/B/j/a.G(Lnet/minecraft/l/d;)V -> "SpawnRange"
net/minecraft/B/j/a.bcS()Lnet/minecraft/z/ak; -> "id"
net/minecraft/B/j/a.bcS()Lnet/minecraft/z/ak; -> "Invalid entity id '{}' at spawner {}:[{},{},{}]"
net/minecraft/B/j/a.bcV()Lnet/minecraft/g/f; -> "id"
net/minecraft/B/j/h.a(Lnet/minecraft/B/x;Lnet/minecraft/B/a/a;IILjava/util/Random;)V -> "Failed to create mob"
net/minecraft/B/j/h.a(Lnet/minecraft/B/i/f;Lnet/minecraft/B/c/b;Lnet/minecraft/B/j/h$a;ZZZ)V -> "spawner"
net/minecraft/B/j/h.a(Lnet/minecraft/B/i/f;Lnet/minecraft/g/k;)Lnet/minecraft/g/y; -> "Trying to spawn a non-mob: "
net/minecraft/B/j/h.a(Lnet/minecraft/B/i/f;Lnet/minecraft/g/k;)Lnet/minecraft/g/y; -> "Failed to create mob"
net/minecraft/B/k/a.c(Ljava/io/File;Ljava/lang/String;)Z -> ".mcr"
net/minecraft/B/k/a.d(Lnet/minecraft/B/k/p$a;)V -> "Unable to create level.dat_mcr backup"
net/minecraft/B/k/a.d(Lnet/minecraft/B/k/p$a;)V -> "level.dat_mcr"
net/minecraft/B/k/a.d(Lnet/minecraft/B/k/p$a;)V -> "Unable to create level.dat_mcr backup"
net/minecraft/B/k/a.a(Ljava/io/File;Ljava/util/Collection;)V -> "region"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> ".mcr"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> ".mca"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> "Failed to fetch input stream for chunk {}"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> "Failed to read data for chunk {}"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> "Level"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> "Level"
net/minecraft/B/k/a.a(Lnet/minecraft/z/e/c$b;Ljava/io/File;Ljava/io/File;Lnet/minecraft/B/a/a/a;IILnet/minecraft/z/Q;)V -> "Failed to upgrade region file {}"
net/minecraft/B/k/a.a(Lnet/minecraft/B/k/p$a;Lnet/minecraft/z/Q;)Z -> "Scanning folders..."
net/minecraft/B/k/a.a(Lnet/minecraft/B/k/p$a;Lnet/minecraft/z/Q;)Z -> "Total conversion count is {}"
net/minecraft/B/k/a.a(Lnet/minecraft/B/k/p$a;Lnet/minecraft/z/Q;)Z -> "region"
net/minecraft/B/k/a.a(Lnet/minecraft/B/k/p$a;Lnet/minecraft/z/Q;)Z -> "region"
net/minecraft/B/k/a.a(Lnet/minecraft/B/k/p$a;Lnet/minecraft/z/Q;)Z -> "region"
net/minecraft/B/k/b$a.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "contents"
net/minecraft/B/k/b$a.G(Lnet/minecraft/l/d;)V -> "contents"
net/minecraft/B/k/b.hk(Ljava/lang/String;)Ljava/lang/String; -> "command_storage_"
net/minecraft/B/k/c.a(Lnet/minecraft/d/b;)V -> "Derived"
net/minecraft/B/k/d.c(Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/B/k/s; -> "data"
net/minecraft/B/k/d.c(Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/B/k/s; -> "Error loading saved data: {}"
net/minecraft/B/k/d.w(Ljava/lang/String;I)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/k/d.w(Ljava/lang/String;I)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/k/d.hn(Ljava/lang/String;)Ljava/io/File; -> ".dat"
net/minecraft/B/k/e.<clinit>()V -> "advancements"
net/minecraft/B/k/e.<clinit>()V -> "stats"
net/minecraft/B/k/e.<clinit>()V -> "playerdata"
net/minecraft/B/k/e.<clinit>()V -> "players"
net/minecraft/B/k/e.<clinit>()V -> "level.dat"
net/minecraft/B/k/e.<clinit>()V -> "generated"
net/minecraft/B/k/e.<clinit>()V -> "datapacks"
net/minecraft/B/k/e.<clinit>()V -> "resources.zip"
net/minecraft/B/k/e.<clinit>()V -> "."
net/minecraft/B/k/e.toString()Ljava/lang/String; -> "/"
net/minecraft/B/k/f.a(Lnet/minecraft/d/b;)V -> "Known server brands"
net/minecraft/B/k/f.a(Lnet/minecraft/d/b;)V -> "Level was modded"
net/minecraft/B/k/f.a(Lnet/minecraft/d/b;)V -> "Level storage version"
net/minecraft/B/k/f.NB()Ljava/lang/String; -> ", "
net/minecraft/B/k/f.vK()Ljava/lang/String; -> "0x%05X - %s"
net/minecraft/B/k/f.mI(I)Ljava/lang/String; -> "McRegion"
net/minecraft/B/k/f.mI(I)Ljava/lang/String; -> "Anvil"
net/minecraft/B/k/f.mI(I)Ljava/lang/String; -> "Unknown?"
net/minecraft/B/k/g.a(Lnet/minecraft/d/b;)V -> "Level name"
net/minecraft/B/k/g.a(Lnet/minecraft/d/b;)V -> "Level game mode"
net/minecraft/B/k/g.a(Lnet/minecraft/d/b;)V -> "Level weather"
net/minecraft/B/k/g.AE()Ljava/lang/String; -> "Game mode: %s (ID %d). Hardcore: %b. Cheats: %b"
net/minecraft/B/k/g.vK()Ljava/lang/String; -> "Rain time: %d (now: %b), thunder time: %d (now: %b)"
net/minecraft/B/k/i.a(Lnet/minecraft/d/b;)V -> "Level spawn location"
net/minecraft/B/k/i.a(Lnet/minecraft/d/b;)V -> "Level time"
net/minecraft/B/k/i.AE()Ljava/lang/String; -> "%d game time, %d day time"
net/minecraft/B/k/j.aM(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/j; -> "Pos"
net/minecraft/B/k/j.aM(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/j; -> "Color"
net/minecraft/B/k/j.aM(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/j; -> "Name"
net/minecraft/B/k/j.aM(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/j; -> "Name"
net/minecraft/B/k/j.bdv()Ljava/lang/String; -> "banner-"
net/minecraft/B/k/j.bdv()Ljava/lang/String; -> ","
net/minecraft/B/k/j.bdv()Ljava/lang/String; -> ","
net/minecraft/B/k/j.Wk()Lnet/minecraft/l/d; -> "Pos"
net/minecraft/B/k/j.Wk()Lnet/minecraft/l/d; -> "Color"
net/minecraft/B/k/j.Wk()Lnet/minecraft/l/d; -> "Name"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "frame-"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "frame-"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "Decorations"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "Decorations"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "id"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "type"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "id"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "x"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "z"
net/minecraft/B/k/k.f(Lnet/minecraft/g/h/c;Lnet/minecraft/j/af;)V -> "rot"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "Decorations"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "Decorations"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "Decorations"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "type"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "id"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "x"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "z"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "rot"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "display"
net/minecraft/B/k/k.a(Lnet/minecraft/j/af;Lnet/minecraft/z/c/b;Ljava/lang/String;Lnet/minecraft/B/k/l$a;)V -> "MapColor"
net/minecraft/B/k/k.m(Lnet/minecraft/z/c/b;I)V -> "frame-"
net/minecraft/B/k/k.g(Lnet/minecraft/l/d;Lnet/minecraft/l/i;)V -> "dimension"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "xCenter"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "zCenter"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "scale"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "colors"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "trackingPosition"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "unlimitedTracking"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "locked"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "banners"
net/minecraft/B/k/k.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "frames"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "dimension"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "xCenter"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "zCenter"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "scale"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "trackingPosition"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "trackingPosition"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "unlimitedTracking"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "locked"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "colors"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "banners"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "frames"
net/minecraft/B/k/k.G(Lnet/minecraft/l/d;)V -> "frame-"
net/minecraft/B/k/k.aN(Lnet/minecraft/l/d;)Ljava/lang/IllegalArgumentException; -> "Invalid map dimension: "
net/minecraft/B/k/k.aN(Lnet/minecraft/l/d;)Ljava/lang/IllegalArgumentException; -> "dimension"
net/minecraft/B/k/l$a.<clinit>()V -> "PLAYER"
net/minecraft/B/k/l$a.<clinit>()V -> "FRAME"
net/minecraft/B/k/l$a.<clinit>()V -> "RED_MARKER"
net/minecraft/B/k/l$a.<clinit>()V -> "BLUE_MARKER"
net/minecraft/B/k/l$a.<clinit>()V -> "TARGET_X"
net/minecraft/B/k/l$a.<clinit>()V -> "TARGET_POINT"
net/minecraft/B/k/l$a.<clinit>()V -> "PLAYER_OFF_MAP"
net/minecraft/B/k/l$a.<clinit>()V -> "PLAYER_OFF_LIMITS"
net/minecraft/B/k/l$a.<clinit>()V -> "MANSION"
net/minecraft/B/k/l$a.<clinit>()V -> "MONUMENT"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_WHITE"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_ORANGE"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_MAGENTA"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_LIGHT_BLUE"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_YELLOW"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_LIME"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_PINK"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_GRAY"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_LIGHT_GRAY"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_CYAN"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_PURPLE"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_BLUE"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_BROWN"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_GREEN"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_RED"
net/minecraft/B/k/l$a.<clinit>()V -> "BANNER_BLACK"
net/minecraft/B/k/l$a.<clinit>()V -> "RED_X"
net/minecraft/B/k/m.cu(Lnet/minecraft/z/c/b;)Ljava/lang/String; -> "frame-"
net/minecraft/B/k/m.cu(Lnet/minecraft/z/c/b;)Ljava/lang/String; -> ","
net/minecraft/B/k/m.cu(Lnet/minecraft/z/c/b;)Ljava/lang/String; -> ","
net/minecraft/B/k/m.aO(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/m; -> "Pos"
net/minecraft/B/k/m.aO(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/m; -> "Rotation"
net/minecraft/B/k/m.aO(Lnet/minecraft/l/d;)Lnet/minecraft/B/k/m; -> "EntityId"
net/minecraft/B/k/m.Wk()Lnet/minecraft/l/d; -> "Pos"
net/minecraft/B/k/m.Wk()Lnet/minecraft/l/d; -> "Rotation"
net/minecraft/B/k/m.Wk()Lnet/minecraft/l/d; -> "EntityId"
net/minecraft/B/k/n.<init>()V -> "idcounts"
net/minecraft/B/k/n.bdH()I -> "map"
net/minecraft/B/k/n.bdH()I -> "map"
net/minecraft/B/k/o.Z(Lnet/minecraft/g/h/c;)Lnet/minecraft/l/d; -> ".dat"
net/minecraft/B/k/o.Z(Lnet/minecraft/g/h/c;)Lnet/minecraft/l/d; -> "Failed to load player data for {}"
net/minecraft/B/k/o.Z(Lnet/minecraft/g/h/c;)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/k/o.Z(Lnet/minecraft/g/h/c;)Lnet/minecraft/l/d; -> "DataVersion"
net/minecraft/B/k/o.Y(Lnet/minecraft/g/h/c;)V -> "-"
net/minecraft/B/k/o.Y(Lnet/minecraft/g/h/c;)V -> ".dat"
net/minecraft/B/k/o.Y(Lnet/minecraft/g/h/c;)V -> ".dat"
net/minecraft/B/k/o.Y(Lnet/minecraft/g/h/c;)V -> ".dat_old"
net/minecraft/B/k/o.Y(Lnet/minecraft/g/h/c;)V -> "Failed to save player data for {}"
net/minecraft/B/k/o.bdI()[Ljava/lang/String; -> ".dat"
net/minecraft/B/k/p$a$1.a(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; -> "Deleting {}"
net/minecraft/B/k/p$a$2.a(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; -> "session.lock"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> "Data"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> "level"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> ".dat"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> "level.dat_old"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> "level.dat"
net/minecraft/B/k/p$a.a(Lnet/minecraft/z/e/c;Lnet/minecraft/B/k/f;Lnet/minecraft/l/d;)V -> "Failed to save level {}"
net/minecraft/B/k/p$a.hr(Ljava/lang/String;)V -> "level.dat"
net/minecraft/B/k/p$a.hr(Ljava/lang/String;)V -> "Data"
net/minecraft/B/k/p$a.hr(Ljava/lang/String;)V -> "LevelName"
net/minecraft/B/k/p$a.bdU()V -> "session.lock"
net/minecraft/B/k/p$a.bdU()V -> "Attempt {}..."
net/minecraft/B/k/p$a.bdU()V -> "Failed to delete {}"
net/minecraft/B/k/p$a.bdT()Ljava/io/File; -> "icon.png"
net/minecraft/B/k/p$a.bdV()J -> "_"
net/minecraft/B/k/p$a.bdV()J -> ".zip"
net/minecraft/B/k/p$a.bdO()V -> "Lock is no longer valid"
net/minecraft/B/k/p.<clinit>()V -> "RandomSeed"
net/minecraft/B/k/p.<clinit>()V -> "generatorName"
net/minecraft/B/k/p.<clinit>()V -> "generatorOptions"
net/minecraft/B/k/p.<clinit>()V -> "generatorVersion"
net/minecraft/B/k/p.<clinit>()V -> "legacy_custom_options"
net/minecraft/B/k/p.<clinit>()V -> "MapFeatures"
net/minecraft/B/k/p.<clinit>()V -> "BonusChest"
net/minecraft/B/k/p.a(Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; -> "level.dat"
net/minecraft/B/k/p.a(Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; -> "level.dat_old"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "Data"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "Player"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "DataVersion"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "DataVersion"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "DataPacks"
net/minecraft/B/k/p.a(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/z/b/a/a; -> "Exception reading {}"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "Data"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "Player"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "Player"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "Player"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "DataVersion"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "DataVersion"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/z/b/a/a;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/q; -> "Exception reading {}"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; -> "WorldGenSettings"
net/minecraft/B/k/p.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; -> "WorldGenSettings: "
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "Data"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "Player"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "DataVersion"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "DataVersion"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "icon.png"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "DataPacks"
net/minecraft/B/k/p.a(Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/B/k/u; -> "Exception reading {}"
net/minecraft/B/k/p.E(Ljava/nio/file/Path;)Lnet/minecraft/B/k/p; -> "../backups"
net/minecraft/B/k/p.aY(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/i/a; -> "Dimension type registry: "
net/minecraft/B/k/p.aY(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/i/a; -> "Biome registry: "
net/minecraft/B/k/p.aY(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/e/i/a; -> "Noise settings registry: "
net/minecraft/B/k/p.aLH()Ljava/lang/IllegalStateException; -> "Failed to get dimension registry"
net/minecraft/B/k/p.bdJ()Ljava/util/List; -> "selectWorld.load_folder_access"
net/minecraft/B/k/p.bdJ()Ljava/util/List; -> "Failed to read {} lock"
net/minecraft/B/k/p.bdM()Ljava/lang/IllegalStateException; -> "Failed to get noise settings registry"
net/minecraft/B/k/p.aLt()Ljava/lang/IllegalStateException; -> "Failed to get biome registry"
net/minecraft/B/k/q.i(Lnet/minecraft/l/d;Lnet/minecraft/l/i;)V -> "DataPacks"
net/minecraft/B/k/q.h(Lnet/minecraft/l/d;Lnet/minecraft/l/i;)V -> "WorldGenSettings"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "Time"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "DragonFight"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "WasModded"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "SpawnX"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "SpawnY"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "SpawnZ"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "SpawnAngle"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "DayTime"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "clearWeatherTime"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "rainTime"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "raining"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "thunderTime"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "thundering"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "initialized"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "DifficultyLocked"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "WanderingTraderSpawnDelay"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "WanderingTraderSpawnChance"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "WanderingTraderId"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "ServerBrands"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "ScheduledEvents"
net/minecraft/B/k/q.a(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/l/d;Lnet/minecraft/B/N;Lnet/minecraft/B/k/r;Lnet/minecraft/B/e/i/a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/B/k/q; -> "CustomBossEvents"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "ServerBrands"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "WasModded"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Name"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Id"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Snapshot"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Version"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "DataVersion"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "WorldGenSettings: "
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "GameType"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "SpawnX"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "SpawnY"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "SpawnZ"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "SpawnAngle"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Time"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "DayTime"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "LastPlayed"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "LevelName"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "version"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "clearWeatherTime"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "rainTime"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "raining"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "thunderTime"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "thundering"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "hardcore"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "allowCommands"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "initialized"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Difficulty"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "DifficultyLocked"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "GameRules"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "DragonFight"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "Player"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "CustomBossEvents"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "ScheduledEvents"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "WanderingTraderSpawnDelay"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "WanderingTraderSpawnChance"
net/minecraft/B/k/q.a(Lnet/minecraft/z/e/c;Lnet/minecraft/l/d;Lnet/minecraft/l/d;)V -> "WanderingTraderId"
net/minecraft/B/k/q.aZ(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/l/i; -> "DimensionData"
net/minecraft/B/k/q.aZ(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/l/i; -> "1"
net/minecraft/B/k/q.aZ(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/l/i; -> "DragonFight"
net/minecraft/B/k/q.bdW()V -> "Fixer Upper not set inside LevelData, and the player tag is not upgraded."
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "version"
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "LastPlayed"
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "Version"
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "Name"
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "Id"
net/minecraft/B/k/r.bb(Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/B/k/r; -> "Snapshot"
net/minecraft/B/k/s.x(Ljava/io/File;)V -> "data"
net/minecraft/B/k/s.x(Ljava/io/File;)V -> "DataVersion"
net/minecraft/B/k/s.x(Ljava/io/File;)V -> "Could not save data {}"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "selectWorld.locked"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "selectWorld.conversion"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "gameMode.hardcore"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "gameMode."
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> ", "
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "selectWorld.cheats"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> ", "
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> "selectWorld.version"
net/minecraft/B/k/u.bek()Lnet/minecraft/z/f/f; -> " "
net/minecraft/B/k/u.bef()Lnet/minecraft/z/f/d; -> "selectWorld.versionUnknown"
net/minecraft/B/m.<init>()V -> "chunks"
net/minecraft/B/m.X(Lnet/minecraft/l/d;)Lnet/minecraft/l/d; -> "Forced"
net/minecraft/B/m.G(Lnet/minecraft/l/d;)V -> "Forced"
net/minecraft/B/n$b.<clinit>()V -> "PLAYER"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.player"
net/minecraft/B/n$b.<clinit>()V -> "MOBS"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.mobs"
net/minecraft/B/n$b.<clinit>()V -> "SPAWNING"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.spawning"
net/minecraft/B/n$b.<clinit>()V -> "DROPS"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.drops"
net/minecraft/B/n$b.<clinit>()V -> "UPDATES"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.updates"
net/minecraft/B/n$b.<clinit>()V -> "CHAT"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.chat"
net/minecraft/B/n$b.<clinit>()V -> "MISC"
net/minecraft/B/n$b.<clinit>()V -> "gamerule.category.misc"
net/minecraft/B/n$e.gM(Ljava/lang/String;)I -> "Failed to parse integer {}"
net/minecraft/B/n$f.aRq()Ljava/lang/String; -> "gamerule."
net/minecraft/B/n.<clinit>()V -> "doFireTick"
net/minecraft/B/n.<clinit>()V -> "mobGriefing"
net/minecraft/B/n.<clinit>()V -> "keepInventory"
net/minecraft/B/n.<clinit>()V -> "doMobSpawning"
net/minecraft/B/n.<clinit>()V -> "doMobLoot"
net/minecraft/B/n.<clinit>()V -> "doTileDrops"
net/minecraft/B/n.<clinit>()V -> "doEntityDrops"
net/minecraft/B/n.<clinit>()V -> "commandBlockOutput"
net/minecraft/B/n.<clinit>()V -> "naturalRegeneration"
net/minecraft/B/n.<clinit>()V -> "doDaylightCycle"
net/minecraft/B/n.<clinit>()V -> "logAdminCommands"
net/minecraft/B/n.<clinit>()V -> "showDeathMessages"
net/minecraft/B/n.<clinit>()V -> "randomTickSpeed"
net/minecraft/B/n.<clinit>()V -> "sendCommandFeedback"
net/minecraft/B/n.<clinit>()V -> "reducedDebugInfo"
net/minecraft/B/n.<clinit>()V -> "spectatorsGenerateChunks"
net/minecraft/B/n.<clinit>()V -> "spawnRadius"
net/minecraft/B/n.<clinit>()V -> "disableElytraMovementCheck"
net/minecraft/B/n.<clinit>()V -> "maxEntityCramming"
net/minecraft/B/n.<clinit>()V -> "doWeatherCycle"
net/minecraft/B/n.<clinit>()V -> "doLimitedCrafting"
net/minecraft/B/n.<clinit>()V -> "maxCommandChainLength"
net/minecraft/B/n.<clinit>()V -> "announceAdvancements"
net/minecraft/B/n.<clinit>()V -> "disableRaids"
net/minecraft/B/n.<clinit>()V -> "doInsomnia"
net/minecraft/B/n.<clinit>()V -> "doImmediateRespawn"
net/minecraft/B/n.<clinit>()V -> "drowningDamage"
net/minecraft/B/n.<clinit>()V -> "fallDamage"
net/minecraft/B/n.<clinit>()V -> "fireDamage"
net/minecraft/B/n.<clinit>()V -> "doPatrolSpawning"
net/minecraft/B/n.<clinit>()V -> "doTraderSpawning"
net/minecraft/B/n.<clinit>()V -> "forgiveDeadPlayers"
net/minecraft/B/n.<clinit>()V -> "universalAnger"
net/minecraft/B/n.a(Ljava/lang/String;Lnet/minecraft/B/n$b;Lnet/minecraft/B/n$g;)Lnet/minecraft/B/n$f; -> "Duplicate game rule registration for "
net/minecraft/B/o.<clinit>()V -> "NOT_SET"
net/minecraft/B/o.<clinit>()V -> "SURVIVAL"
net/minecraft/B/o.<clinit>()V -> "survival"
net/minecraft/B/o.<clinit>()V -> "CREATIVE"
net/minecraft/B/o.<clinit>()V -> "creative"
net/minecraft/B/o.<clinit>()V -> "ADVENTURE"
net/minecraft/B/o.<clinit>()V -> "adventure"
net/minecraft/B/o.<clinit>()V -> "SPECTATOR"
net/minecraft/B/o.<clinit>()V -> "spectator"
net/minecraft/B/o.iI()Lnet/minecraft/z/f/f; -> "gameMode."
net/minecraft/a/a$a.toString()Ljava/lang/String; -> "Task Advancement{parentId="
net/minecraft/a/a$a.toString()Ljava/lang/String; -> ", display="
net/minecraft/a/a$a.toString()Ljava/lang/String; -> ", rewards="
net/minecraft/a/a$a.toString()Ljava/lang/String; -> ", criteria="
net/minecraft/a/a$a.toString()Ljava/lang/String; -> ", requirements="
net/minecraft/a/a$a.c(Lnet/minecraft/z/ak;)Lnet/minecraft/a/a; -> "Tried to build incomplete advancement!"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "parent"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "parent"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "display"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "display"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "rewards"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "rewards"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "criteria"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "Advancement criteria cannot be empty"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "requirements"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "requirements["
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "]"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "requirements["
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "]["
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "]"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "Requirement entry cannot be empty"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "Unknown required criterion '"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "'"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "Criterion '"
net/minecraft/a/a$a.a(Lcom/google/gson/JsonObject;Lnet/minecraft/k/c;)Lnet/minecraft/a/a$a; -> "' isn't a requirement for completion. This isn't supported behaviour, all criteria must be required."
net/minecraft/a/a$a.a(Ljava/lang/String;Lnet/minecraft/a/h;)Lnet/minecraft/a/a$a; -> "Duplicate criterion "
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "parent"
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "parent"
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "display"
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "rewards"
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "criteria"
net/minecraft/a/a$a.fw()Lcom/google/gson/JsonObject; -> "requirements"
net/minecraft/a/a.<init>(Lnet/minecraft/z/ak;Lnet/minecraft/a/a;Lnet/minecraft/a/j;Lnet/minecraft/a/e;Ljava/util/Map;[[Ljava/lang/String;)V -> "\n"
net/minecraft/a/a.toString()Ljava/lang/String; -> "SimpleAdvancement{id="
net/minecraft/a/a.toString()Ljava/lang/String; -> ", parent="
net/minecraft/a/a.toString()Ljava/lang/String; -> "null"
net/minecraft/a/a.toString()Ljava/lang/String; -> ", display="
net/minecraft/a/a.toString()Ljava/lang/String; -> ", rewards="
net/minecraft/a/a.toString()Ljava/lang/String; -> ", criteria="
net/minecraft/a/a.toString()Ljava/lang/String; -> ", requirements="
net/minecraft/a/a/A.<clinit>()V -> "impossible"
net/minecraft/a/a/B$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "occupied"
net/minecraft/a/a/B$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "full"
net/minecraft/a/a/B$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "empty"
net/minecraft/a/a/B$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "slots"
net/minecraft/a/a/B$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "items"
net/minecraft/a/a/B.<clinit>()V -> "inventory_changed"
net/minecraft/a/a/B.p(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/B$a; -> "slots"
net/minecraft/a/a/B.p(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/B$a; -> "occupied"
net/minecraft/a/a/B.p(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/B$a; -> "full"
net/minecraft/a/a/B.p(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/B$a; -> "empty"
net/minecraft/a/a/B.p(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/B$a; -> "items"
net/minecraft/a/a/C$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "item"
net/minecraft/a/a/C$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "durability"
net/minecraft/a/a/C$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "delta"
net/minecraft/a/a/C.<clinit>()V -> "item_durability_changed"
net/minecraft/a/a/C.q(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/C$a; -> "item"
net/minecraft/a/a/C.q(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/C$a; -> "durability"
net/minecraft/a/a/C.q(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/C$a; -> "delta"
net/minecraft/a/a/D.n(Lcom/google/gson/JsonElement;)[Lnet/minecraft/a/a/D; -> "items"
net/minecraft/a/a/D.l(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "Unknown potion '"
net/minecraft/a/a/D.l(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "'"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "item"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "count"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "durability"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "data"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "Disallowed data tag found"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "nbt"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "item"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "item"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "tag"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "tag"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "Unknown item tag '"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "'"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "potion"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "potion"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "enchantments"
net/minecraft/a/a/D.m(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/D; -> "stored_enchantments"
net/minecraft/a/a/D.k(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "Unknown item id '"
net/minecraft/a/a/D.k(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "'"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "item"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "tag"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "count"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "durability"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "nbt"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "enchantments"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "stored_enchantments"
net/minecraft/a/a/D.fJ()Lcom/google/gson/JsonElement; -> "potion"
net/minecraft/a/a/E$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "victims"
net/minecraft/a/a/E$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "unique_entity_types"
net/minecraft/a/a/E.<clinit>()V -> "killed_by_crossbow"
net/minecraft/a/a/E.r(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/E$a; -> "victims"
net/minecraft/a/a/E.r(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/E$a; -> "unique_entity_types"
net/minecraft/a/a/F$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "entity"
net/minecraft/a/a/F$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "killing_blow"
net/minecraft/a/a/F.s(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/F$a; -> "entity"
net/minecraft/a/a/F.s(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/F$a; -> "killing_blow"
net/minecraft/a/a/G$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "distance"
net/minecraft/a/a/G$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "duration"
net/minecraft/a/a/G.<clinit>()V -> "levitation"
net/minecraft/a/a/G.t(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/G$a; -> "distance"
net/minecraft/a/a/G.t(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/G$a; -> "duration"
net/minecraft/a/a/H.o(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/H; -> "light"
net/minecraft/a/a/H.o(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/H; -> "light"
net/minecraft/a/a/H.fJ()Lcom/google/gson/JsonElement; -> "light"
net/minecraft/a/a/I.a(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V -> "dimension"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "location"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "position"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "x"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "y"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "z"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "dimension"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "dimension"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "feature"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "feature"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "biome"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "biome"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "smokey"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "smokey"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "light"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "block"
net/minecraft/a/a/I.p(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/I; -> "fluid"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "x"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "y"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "z"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "position"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "feature"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "biome"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "smokey"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "light"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "block"
net/minecraft/a/a/I.fJ()Lcom/google/gson/JsonElement; -> "fluid"
net/minecraft/a/a/J.<clinit>()V -> "argument.range.empty"
net/minecraft/a/a/J.<clinit>()V -> "argument.range.swapped"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "value"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "value"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "min"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "min"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "min"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "max"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "max"
net/minecraft/a/a/J.a(Lcom/google/gson/JsonElement;Lnet/minecraft/a/a/J;Ljava/util/function/BiFunction;Lnet/minecraft/a/a/J$b;)Lnet/minecraft/a/a/J; -> "max"
net/minecraft/a/a/J.fJ()Lcom/google/gson/JsonElement; -> "min"
net/minecraft/a/a/J.fJ()Lcom/google/gson/JsonElement; -> "max"
net/minecraft/a/a/K.<clinit>()V -> "argument.range.ints"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "amplifier"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "duration"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "ambient"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "ambient"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "visible"
net/minecraft/a/a/L$a.j(Lcom/google/gson/JsonObject;)Lnet/minecraft/a/a/L$a; -> "visible"
net/minecraft/a/a/L$a.fJ()Lcom/google/gson/JsonElement; -> "amplifier"
net/minecraft/a/a/L$a.fJ()Lcom/google/gson/JsonElement; -> "duration"
net/minecraft/a/a/L$a.fJ()Lcom/google/gson/JsonElement; -> "ambient"
net/minecraft/a/a/L$a.fJ()Lcom/google/gson/JsonElement; -> "visible"
net/minecraft/a/a/L.s(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/L; -> "effects"
net/minecraft/a/a/L.k(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "Unknown effect '"
net/minecraft/a/a/L.k(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "'"
net/minecraft/a/a/M.b(Lnet/minecraft/g/f;)Lnet/minecraft/l/d; -> "SelectedItem"
net/minecraft/a/a/M.t(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/M; -> "nbt"
net/minecraft/a/a/M.t(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/M; -> "Invalid nbt tag: "
net/minecraft/a/a/N$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "entered"
net/minecraft/a/a/N$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "exited"
net/minecraft/a/a/N$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "distance"
net/minecraft/a/a/N.<clinit>()V -> "nether_travel"
net/minecraft/a/a/N.u(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/N$a; -> "entered"
net/minecraft/a/a/N.u(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/N$a; -> "exited"
net/minecraft/a/a/N.u(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/N$a; -> "distance"
net/minecraft/a/a/O$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "block"
net/minecraft/a/a/O$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "state"
net/minecraft/a/a/O$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "location"
net/minecraft/a/a/O$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "item"
net/minecraft/a/a/O.<clinit>()V -> "placed_block"
net/minecraft/a/a/O.i(Lcom/google/gson/JsonObject;)Lnet/minecraft/b/D; -> "block"
net/minecraft/a/a/O.i(Lcom/google/gson/JsonObject;)Lnet/minecraft/b/D; -> "block"
net/minecraft/a/a/O.l(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "Unknown block type '"
net/minecraft/a/a/O.l(Lnet/minecraft/z/ak;)Lcom/google/gson/JsonSyntaxException; -> "'"
net/minecraft/a/a/O.a(Lnet/minecraft/b/D;Ljava/lang/String;)V -> "Block "
net/minecraft/a/a/O.a(Lnet/minecraft/b/D;Ljava/lang/String;)V -> " has no property "
net/minecraft/a/a/O.a(Lnet/minecraft/b/D;Ljava/lang/String;)V -> ":"
net/minecraft/a/a/O.v(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/O$a; -> "state"
net/minecraft/a/a/O.v(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/O$a; -> "location"
net/minecraft/a/a/O.v(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/O$a; -> "item"
net/minecraft/a/a/P$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "item"
net/minecraft/a/a/P$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "entity"
net/minecraft/a/a/P.<clinit>()V -> "player_interacted_with_entity"
net/minecraft/a/a/P.w(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/P$a; -> "item"
net/minecraft/a/a/P.w(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/P$a; -> "entity"
net/minecraft/a/a/Q$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "loot_table"
net/minecraft/a/a/Q.<clinit>()V -> "player_generates_container_loot"
net/minecraft/a/a/Q.x(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/Q$a; -> "loot_table"
net/minecraft/a/a/R$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "damage"
net/minecraft/a/a/R$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "entity"
net/minecraft/a/a/R.<clinit>()V -> "player_hurt_entity"
net/minecraft/a/a/R.y(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/R$a; -> "damage"
net/minecraft/a/a/R.y(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/R$a; -> "entity"
net/minecraft/a/a/S.a(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V -> "criterion test"
net/minecraft/a/a/S.a(Lcom/google/gson/JsonArray;Lnet/minecraft/v/c;Lnet/minecraft/a/a/J$d;)V -> "type"
net/minecraft/a/a/S.a(Lcom/google/gson/JsonArray;Lnet/minecraft/v/c;Lnet/minecraft/a/a/J$d;)V -> "stat"
net/minecraft/a/a/S.a(Lcom/google/gson/JsonArray;Lnet/minecraft/v/c;Lnet/minecraft/a/a/J$d;)V -> "value"
net/minecraft/a/a/S.a(Lnet/minecraft/v/d;Lnet/minecraft/z/ak;)Lnet/minecraft/v/c; -> "Unknown object "
net/minecraft/a/a/S.a(Lnet/minecraft/v/d;Lnet/minecraft/z/ak;)Lnet/minecraft/v/c; -> " for stat type "
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "player"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "level"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "gamemode"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "stats"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "stats entry"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "type"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "Invalid stat type: "
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "stat"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "value"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "recipes"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "recipe present"
net/minecraft/a/a/S.v(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S; -> "advancements"
net/minecraft/a/a/S.u(Lcom/google/gson/JsonElement;)Lnet/minecraft/a/a/S$d; -> "criterion data"
net/minecraft/a/a/S.fJ()Lcom/google/gson/JsonElement; -> "level"
net/minecraft/a/a/S.fJ()Lcom/google/gson/JsonElement; -> "gamemode"
net/minecraft/a/a/S.fJ()Lcom/google/gson/JsonElement; -> "stats"
net/minecraft/a/a/S.fJ()Lcom/google/gson/JsonElement; -> "recipes"
net/minecraft/a/a/S.fJ()Lcom/google/gson/JsonElement; -> "advancements"
net/minecraft/a/a/T$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "location"
net/minecraft/a/a/T.z(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/T$a; -> "location"
net/minecraft/a/a/U$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "recipe"
net/minecraft/a/a/U.<clinit>()V -> "recipe_unlocked"
net/minecraft/a/a/U.A(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lnet/minecraft/a/a/U$a; -> "recipe"
net/minecraft/a/a/V$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "location"
net/minecraft/a/a/V$a.a(Lnet/minecraft/k/d;)Lcom/google/gson/JsonObject; -> "item"
net/minecraft/a/a/V.<clinit>()V -> "item_used_on_block"
net/minecraft/a/a/V.B(Lcom/google/gson/JsonObject;Lnet/minecraft/a/a/v$a;Lnet/minecraft/k/c;)Lne